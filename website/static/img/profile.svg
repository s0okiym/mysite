<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1754" onload="init(evt)" viewBox="0 0 1200 1754" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1754" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python3 tools/train_vectornet.py --config-yaml configs/vehicle_luban_profiler.yaml --experiment-path ../../bak_exps/v2.1.1_luban_profiler_spy2</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1743.00"> </text><svg id="frames" x="10" width="1180" total_samples="726975"><g><title>main (train_vectornet.py:109) (857 samples, 0.12%)</title><rect x="0.0117%" y="84" width="0.1179%" height="15" fill="rgb(227,0,7)" fg:x="85" fg:w="857"/><text x="0.2617%" y="94.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (1,056 samples, 0.15%)</title><rect x="0.5396%" y="1348" width="0.1453%" height="15" fill="rgb(217,0,24)" fg:x="3923" fg:w="1056"/><text x="0.7896%" y="1358.50"></text></g><g><title>run_node (torch/fx/interpreter.py:195) (1,053 samples, 0.14%)</title><rect x="0.5400%" y="1364" width="0.1448%" height="15" fill="rgb(221,193,54)" fg:x="3926" fg:w="1053"/><text x="0.7900%" y="1374.50"></text></g><g><title>call_module (torch/fx/interpreter.py:312) (964 samples, 0.13%)</title><rect x="0.5523%" y="1380" width="0.1326%" height="15" fill="rgb(248,212,6)" fg:x="4015" fg:w="964"/><text x="0.8023%" y="1390.50"></text></g><g><title>module_call_wrapper (torch/fx/_symbolic_trace.py:795) (963 samples, 0.13%)</title><rect x="0.5524%" y="1396" width="0.1325%" height="15" fill="rgb(208,68,35)" fg:x="4016" fg:w="963"/><text x="0.8024%" y="1406.50"></text></g><g><title>call_module (torch/fx/experimental/proxy_tensor.py:425) (963 samples, 0.13%)</title><rect x="0.5524%" y="1412" width="0.1325%" height="15" fill="rgb(232,128,0)" fg:x="4016" fg:w="963"/><text x="0.8024%" y="1422.50"></text></g><g><title>forward (torch/fx/_symbolic_trace.py:788) (963 samples, 0.13%)</title><rect x="0.5524%" y="1428" width="0.1325%" height="15" fill="rgb(207,160,47)" fg:x="4016" fg:w="963"/><text x="0.8024%" y="1438.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (963 samples, 0.13%)</title><rect x="0.5524%" y="1444" width="0.1325%" height="15" fill="rgb(228,23,34)" fg:x="4016" fg:w="963"/><text x="0.8024%" y="1454.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (962 samples, 0.13%)</title><rect x="0.5526%" y="1460" width="0.1323%" height="15" fill="rgb(218,30,26)" fg:x="4017" fg:w="962"/><text x="0.8026%" y="1470.50"></text></g><g><title>functionalized_f_helper (torch/_functorch/aot_autograd.py:1363) (1,058 samples, 0.15%)</title><rect x="0.5395%" y="1300" width="0.1455%" height="15" fill="rgb(220,122,19)" fg:x="3922" fg:w="1058"/><text x="0.7895%" y="1310.50"></text></g><g><title>inner_fn (torch/_functorch/aot_autograd.py:1165) (1,058 samples, 0.15%)</title><rect x="0.5395%" y="1316" width="0.1455%" height="15" fill="rgb(250,228,42)" fg:x="3922" fg:w="1058"/><text x="0.7895%" y="1326.50"></text></g><g><title>functional_call (torch/_functorch/aot_autograd.py:3496) (1,058 samples, 0.15%)</title><rect x="0.5395%" y="1332" width="0.1455%" height="15" fill="rgb(240,193,28)" fg:x="3922" fg:w="1058"/><text x="0.7895%" y="1342.50"></text></g><g><title>dispatch_trace (torch/fx/experimental/proxy_tensor.py:468) (1,091 samples, 0.15%)</title><rect x="0.5352%" y="1188" width="0.1501%" height="15" fill="rgb(216,20,37)" fg:x="3891" fg:w="1091"/><text x="0.7852%" y="1198.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,091 samples, 0.15%)</title><rect x="0.5352%" y="1204" width="0.1501%" height="15" fill="rgb(206,188,39)" fg:x="3891" fg:w="1091"/><text x="0.7852%" y="1214.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,091 samples, 0.15%)</title><rect x="0.5352%" y="1220" width="0.1501%" height="15" fill="rgb(217,207,13)" fg:x="3891" fg:w="1091"/><text x="0.7852%" y="1230.50"></text></g><g><title>trace (torch/fx/_symbolic_trace.py:817) (1,085 samples, 0.15%)</title><rect x="0.5361%" y="1236" width="0.1492%" height="15" fill="rgb(231,73,38)" fg:x="3897" fg:w="1085"/><text x="0.7861%" y="1246.50"></text></g><g><title>wrapped (torch/fx/experimental/proxy_tensor.py:485) (1,061 samples, 0.15%)</title><rect x="0.5394%" y="1252" width="0.1459%" height="15" fill="rgb(225,20,46)" fg:x="3921" fg:w="1061"/><text x="0.7894%" y="1262.50"></text></g><g><title>&lt;lambda&gt; (&lt;string&gt;:1) (1,061 samples, 0.15%)</title><rect x="0.5394%" y="1268" width="0.1459%" height="15" fill="rgb(210,31,41)" fg:x="3921" fg:w="1061"/><text x="0.7894%" y="1278.50"></text></g><g><title>fwd_helper (torch/_functorch/aot_autograd.py:1412) (1,061 samples, 0.15%)</title><rect x="0.5394%" y="1284" width="0.1459%" height="15" fill="rgb(221,200,47)" fg:x="3921" fg:w="1061"/><text x="0.7894%" y="1294.50"></text></g><g><title>aot_dispatch_base_graph (torch/_functorch/aot_autograd.py:1533) (1,094 samples, 0.15%)</title><rect x="0.5350%" y="1092" width="0.1505%" height="15" fill="rgb(226,26,5)" fg:x="3889" fg:w="1094"/><text x="0.7850%" y="1102.50"></text></g><g><title>create_functionalized_graph (torch/_functorch/aot_autograd.py:1420) (1,094 samples, 0.15%)</title><rect x="0.5350%" y="1108" width="0.1505%" height="15" fill="rgb(249,33,26)" fg:x="3889" fg:w="1094"/><text x="0.7850%" y="1118.50"></text></g><g><title>wrapped (torch/fx/experimental/proxy_tensor.py:809) (1,092 samples, 0.15%)</title><rect x="0.5352%" y="1124" width="0.1502%" height="15" fill="rgb(235,183,28)" fg:x="3891" fg:w="1092"/><text x="0.7852%" y="1134.50"></text></g><g><title>inner (torch/_compile.py:24) (1,092 samples, 0.15%)</title><rect x="0.5352%" y="1140" width="0.1502%" height="15" fill="rgb(221,5,38)" fg:x="3891" fg:w="1092"/><text x="0.7852%" y="1150.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,092 samples, 0.15%)</title><rect x="0.5352%" y="1156" width="0.1502%" height="15" fill="rgb(247,18,42)" fg:x="3891" fg:w="1092"/><text x="0.7852%" y="1166.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,092 samples, 0.15%)</title><rect x="0.5352%" y="1172" width="0.1502%" height="15" fill="rgb(241,131,45)" fg:x="3891" fg:w="1092"/><text x="0.7852%" y="1182.50"></text></g><g><title>aot_dispatch_base (torch/_functorch/aot_autograd.py:1558) (1,101 samples, 0.15%)</title><rect x="0.5350%" y="1076" width="0.1514%" height="15" fill="rgb(249,31,29)" fg:x="3889" fg:w="1101"/><text x="0.7850%" y="1086.50"></text></g><g><title>aot_dispatch_autograd (torch/_functorch/aot_autograd.py:2804) (737 samples, 0.10%)</title><rect x="0.7218%" y="1316" width="0.1014%" height="15" fill="rgb(225,111,53)" fg:x="5247" fg:w="737"/><text x="0.9718%" y="1326.50"></text></g><g><title>create_aot_dispatcher_function (torch/_functorch/aot_autograd.py:3429) (923 samples, 0.13%)</title><rect x="0.7215%" y="1268" width="0.1270%" height="15" fill="rgb(238,160,17)" fg:x="5245" fg:w="923"/><text x="0.9715%" y="1278.50"></text></g><g><title>aot_wrapper_dedupe (torch/_functorch/aot_autograd.py:2212) (922 samples, 0.13%)</title><rect x="0.7216%" y="1284" width="0.1268%" height="15" fill="rgb(214,148,48)" fg:x="5246" fg:w="922"/><text x="0.9716%" y="1294.50"></text></g><g><title>aot_wrapper_synthetic_base (torch/_functorch/aot_autograd.py:2392) (922 samples, 0.13%)</title><rect x="0.7216%" y="1300" width="0.1268%" height="15" fill="rgb(232,36,49)" fg:x="5246" fg:w="922"/><text x="0.9716%" y="1310.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,090 samples, 0.15%)</title><rect x="0.7015%" y="1252" width="0.1499%" height="15" fill="rgb(209,103,24)" fg:x="5100" fg:w="1090"/><text x="0.9515%" y="1262.50"></text></g><g><title>returned_function (torch/_functorch/aot_autograd.py:3725) (1,095 samples, 0.15%)</title><rect x="0.7013%" y="1236" width="0.1506%" height="15" fill="rgb(229,88,8)" fg:x="5098" fg:w="1095"/><text x="0.9513%" y="1246.50"></text></g><g><title>training_graph (torch/_inductor/pattern_matcher.py:1023) (1,223 samples, 0.17%)</title><rect x="0.7011%" y="1220" width="0.1682%" height="15" fill="rgb(213,181,19)" fg:x="5097" fg:w="1223"/><text x="0.9511%" y="1230.50"></text></g><g><title>register_replacement (torch/_inductor/pattern_matcher.py:774) (1,254 samples, 0.17%)</title><rect x="0.7010%" y="1188" width="0.1725%" height="15" fill="rgb(254,191,54)" fg:x="5096" fg:w="1254"/><text x="0.9510%" y="1198.50"></text></g><g><title>decorate_context (torch/utils/_contextlib.py:115) (1,254 samples, 0.17%)</title><rect x="0.7010%" y="1204" width="0.1725%" height="15" fill="rgb(241,83,37)" fg:x="5096" fg:w="1254"/><text x="0.9510%" y="1214.50"></text></g><g><title>_sfdp_init (torch/_inductor/fx_passes/fuse_attention.py:551) (1,283 samples, 0.18%)</title><rect x="0.7010%" y="1172" width="0.1765%" height="15" fill="rgb(233,36,39)" fg:x="5096" fg:w="1283"/><text x="0.9510%" y="1182.50"></text></g><g><title>joint_graph_passes (torch/_inductor/fx_passes/joint_graph.py:200) (1,663 samples, 0.23%)</title><rect x="0.6864%" y="1124" width="0.2288%" height="15" fill="rgb(226,3,54)" fg:x="4990" fg:w="1663"/><text x="0.9364%" y="1134.50"></text></g><g><title>lazy_init (torch/_inductor/pattern_matcher.py:1090) (1,663 samples, 0.23%)</title><rect x="0.6864%" y="1140" width="0.2288%" height="15" fill="rgb(245,192,40)" fg:x="4990" fg:w="1663"/><text x="0.9364%" y="1150.50"></text></g><g><title>lazy_init (torch/_inductor/fx_passes/joint_graph.py:29) (1,576 samples, 0.22%)</title><rect x="0.6984%" y="1156" width="0.2168%" height="15" fill="rgb(238,167,29)" fg:x="5077" fg:w="1576"/><text x="0.9484%" y="1166.50"></text></g><g><title>fw_compiler_base (torch/_inductor/compile_fx.py:1040) (2,132 samples, 0.29%)</title><rect x="0.6864%" y="1108" width="0.2933%" height="15" fill="rgb(232,182,51)" fg:x="4990" fg:w="2132"/><text x="0.9364%" y="1118.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (1,086 samples, 0.15%)</title><rect x="0.9805%" y="1252" width="0.1494%" height="15" fill="rgb(231,60,39)" fg:x="7128" fg:w="1086"/><text x="1.2305%" y="1262.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:528) (1,088 samples, 0.15%)</title><rect x="0.9804%" y="1204" width="0.1497%" height="15" fill="rgb(208,69,12)" fg:x="7127" fg:w="1088"/><text x="1.2304%" y="1214.50"></text></g><g><title>fake_tensor_prop (torch/_inductor/compile_fx.py:275) (1,088 samples, 0.15%)</title><rect x="0.9804%" y="1220" width="0.1497%" height="15" fill="rgb(235,93,37)" fg:x="7127" fg:w="1088"/><text x="1.2304%" y="1230.50"></text></g><g><title>propagate_dont_convert_inputs (torch/fx/passes/fake_tensor_prop.py:61) (1,087 samples, 0.15%)</title><rect x="0.9805%" y="1236" width="0.1495%" height="15" fill="rgb(213,116,39)" fg:x="7128" fg:w="1087"/><text x="1.2305%" y="1246.50"></text></g><g><title>__init__ (torch/_inductor/scheduler.py:971) (871 samples, 0.12%)</title><rect x="1.2496%" y="1300" width="0.1198%" height="15" fill="rgb(222,207,29)" fg:x="9084" fg:w="871"/><text x="1.4996%" y="1310.50"></text></g><g><title>&lt;listcomp&gt; (torch/_inductor/scheduler.py:971) (871 samples, 0.12%)</title><rect x="1.2496%" y="1316" width="0.1198%" height="15" fill="rgb(206,96,30)" fg:x="9084" fg:w="871"/><text x="1.4996%" y="1326.50"></text></g><g><title>create_scheduler_node (torch/_inductor/scheduler.py:1038) (869 samples, 0.12%)</title><rect x="1.2498%" y="1332" width="0.1195%" height="15" fill="rgb(218,138,4)" fg:x="9086" fg:w="869"/><text x="1.4998%" y="1342.50"></text></g><g><title>codegen (torch/_inductor/graph.py:913) (918 samples, 0.13%)</title><rect x="1.2435%" y="1268" width="0.1263%" height="15" fill="rgb(250,191,14)" fg:x="9040" fg:w="918"/><text x="1.4935%" y="1278.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (918 samples, 0.13%)</title><rect x="1.2435%" y="1284" width="0.1263%" height="15" fill="rgb(239,60,40)" fg:x="9040" fg:w="918"/><text x="1.4935%" y="1294.50"></text></g><g><title>compile_to_module (torch/_inductor/graph.py:938) (1,528 samples, 0.21%)</title><rect x="1.2424%" y="1252" width="0.2102%" height="15" fill="rgb(206,27,48)" fg:x="9032" fg:w="1528"/><text x="1.4924%" y="1262.50"></text></g><g><title>create_aot_dispatcher_function (torch/_functorch/aot_autograd.py:3429) (7,017 samples, 0.97%)</title><rect x="0.5350%" y="1028" width="0.9652%" height="15" fill="rgb(225,35,8)" fg:x="3889" fg:w="7017"/><text x="0.7850%" y="1038.50"></text></g><g><title>aot_wrapper_dedupe (torch/_functorch/aot_autograd.py:2212) (7,017 samples, 0.97%)</title><rect x="0.5350%" y="1044" width="0.9652%" height="15" fill="rgb(250,213,24)" fg:x="3889" fg:w="7017"/><text x="0.7850%" y="1054.50"></text></g><g><title>aot_wrapper_synthetic_base (torch/_functorch/aot_autograd.py:2392) (7,017 samples, 0.97%)</title><rect x="0.5350%" y="1060" width="0.9652%" height="15" fill="rgb(247,123,22)" fg:x="3889" fg:w="7017"/><text x="0.7850%" y="1070.50"></text></g><g><title>aot_dispatch_base (torch/_functorch/aot_autograd.py:1573) (5,916 samples, 0.81%)</title><rect x="0.6864%" y="1076" width="0.8138%" height="15" fill="rgb(231,138,38)" fg:x="4990" fg:w="5916"/><text x="0.9364%" y="1086.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (5,916 samples, 0.81%)</title><rect x="0.6864%" y="1092" width="0.8138%" height="15" fill="rgb(231,145,46)" fg:x="4990" fg:w="5916"/><text x="0.9364%" y="1102.50"></text></g><g><title>fw_compiler_base (torch/_inductor/compile_fx.py:1092) (3,784 samples, 0.52%)</title><rect x="0.9797%" y="1108" width="0.5205%" height="15" fill="rgb(251,118,11)" fg:x="7122" fg:w="3784"/><text x="1.2297%" y="1118.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_aot.py:80) (3,779 samples, 0.52%)</title><rect x="0.9804%" y="1124" width="0.5198%" height="15" fill="rgb(217,147,25)" fg:x="7127" fg:w="3779"/><text x="1.2304%" y="1134.50"></text></g><g><title>inner (torch/_inductor/debug.py:228) (3,779 samples, 0.52%)</title><rect x="0.9804%" y="1140" width="0.5198%" height="15" fill="rgb(247,81,37)" fg:x="7127" fg:w="3779"/><text x="1.2304%" y="1150.50"></text></g><g><title>inner (contextlib.py:79) (3,779 samples, 0.52%)</title><rect x="0.9804%" y="1156" width="0.5198%" height="15" fill="rgb(209,12,38)" fg:x="7127" fg:w="3779"/><text x="1.2304%" y="1166.50"></text></g><g><title>newFunction (torch/_inductor/compile_fx.py:54) (3,779 samples, 0.52%)</title><rect x="0.9804%" y="1172" width="0.5198%" height="15" fill="rgb(227,1,9)" fg:x="7127" fg:w="3779"/><text x="1.2304%" y="1182.50"></text></g><g><title>compile_fx_inner (torch/_inductor/compile_fx.py:341) (3,779 samples, 0.52%)</title><rect x="0.9804%" y="1188" width="0.5198%" height="15" fill="rgb(248,47,43)" fg:x="7127" fg:w="3779"/><text x="1.2304%" y="1198.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:565) (1,874 samples, 0.26%)</title><rect x="1.2424%" y="1204" width="0.2578%" height="15" fill="rgb(221,10,30)" fg:x="9032" fg:w="1874"/><text x="1.4924%" y="1214.50"></text></g><g><title>compile_to_fn (torch/_inductor/graph.py:970) (1,874 samples, 0.26%)</title><rect x="1.2424%" y="1220" width="0.2578%" height="15" fill="rgb(210,229,1)" fg:x="9032" fg:w="1874"/><text x="1.4924%" y="1230.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,874 samples, 0.26%)</title><rect x="1.2424%" y="1236" width="0.2578%" height="15" fill="rgb(222,148,37)" fg:x="9032" fg:w="1874"/><text x="1.4924%" y="1246.50"></text></g><g><title>run_node (torch/_dynamo/backends/distributed.py:417) (7,438 samples, 1.02%)</title><rect x="0.4773%" y="900" width="1.0231%" height="15" fill="rgb(234,67,33)" fg:x="3470" fg:w="7438"/><text x="0.7273%" y="910.50"></text></g><g><title>compile_submod (torch/_dynamo/backends/distributed.py:361) (7,438 samples, 1.02%)</title><rect x="0.4773%" y="916" width="1.0231%" height="15" fill="rgb(247,98,35)" fg:x="3470" fg:w="7438"/><text x="0.7273%" y="926.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_dynamo.py:117) (7,438 samples, 1.02%)</title><rect x="0.4773%" y="932" width="1.0231%" height="15" fill="rgb(247,138,52)" fg:x="3470" fg:w="7438"/><text x="0.7273%" y="942.50"></text></g><g><title>__call__ (torch/__init__.py:1568) (7,438 samples, 1.02%)</title><rect x="0.4773%" y="948" width="1.0231%" height="15" fill="rgb(213,79,30)" fg:x="3470" fg:w="7438"/><text x="0.7273%" y="958.50"></text></g><g><title>compile_fx (torch/_inductor/compile_fx.py:1150) (7,426 samples, 1.02%)</title><rect x="0.4790%" y="964" width="1.0215%" height="15" fill="rgb(246,177,23)" fg:x="3482" fg:w="7426"/><text x="0.7290%" y="974.50"></text></g><g><title>compiler_fn (torch/_dynamo/backends/common.py:55) (7,426 samples, 1.02%)</title><rect x="0.4790%" y="980" width="1.0215%" height="15" fill="rgb(230,62,27)" fg:x="3482" fg:w="7426"/><text x="0.7290%" y="990.50"></text></g><g><title>aot_module_simplified (torch/_functorch/aot_autograd.py:3891) (7,426 samples, 1.02%)</title><rect x="0.4790%" y="996" width="1.0215%" height="15" fill="rgb(216,154,8)" fg:x="3482" fg:w="7426"/><text x="0.7290%" y="1006.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (7,426 samples, 1.02%)</title><rect x="0.4790%" y="1012" width="1.0215%" height="15" fill="rgb(244,35,45)" fg:x="3482" fg:w="7426"/><text x="0.7290%" y="1022.50"></text></g><g><title>call_user_compiler (torch/_dynamo/output_graph.py:1009) (7,595 samples, 1.04%)</title><rect x="0.4684%" y="852" width="1.0447%" height="15" fill="rgb(251,115,12)" fg:x="3405" fg:w="7595"/><text x="0.7184%" y="862.50"></text></g><g><title>compile_fn (torch/_dynamo/backends/distributed.py:436) (7,581 samples, 1.04%)</title><rect x="0.4703%" y="868" width="1.0428%" height="15" fill="rgb(240,54,50)" fg:x="3419" fg:w="7581"/><text x="0.7203%" y="878.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (7,581 samples, 1.04%)</title><rect x="0.4703%" y="884" width="1.0428%" height="15" fill="rgb(233,84,52)" fg:x="3419" fg:w="7581"/><text x="0.7203%" y="894.50"></text></g><g><title>RETURN_VALUE (torch/_dynamo/symbolic_convert.py:2157) (7,606 samples, 1.05%)</title><rect x="0.4670%" y="772" width="1.0463%" height="15" fill="rgb(207,117,47)" fg:x="3395" fg:w="7606"/><text x="0.7170%" y="782.50"></text></g><g><title>compile_subgraph (torch/_dynamo/output_graph.py:857) (7,606 samples, 1.05%)</title><rect x="0.4670%" y="788" width="1.0463%" height="15" fill="rgb(249,43,39)" fg:x="3395" fg:w="7606"/><text x="0.7170%" y="798.50"></text></g><g><title>inner (contextlib.py:79) (7,606 samples, 1.05%)</title><rect x="0.4670%" y="804" width="1.0463%" height="15" fill="rgb(209,38,44)" fg:x="3395" fg:w="7606"/><text x="0.7170%" y="814.50"></text></g><g><title>compile_and_call_fx_graph (torch/_dynamo/output_graph.py:957) (7,596 samples, 1.04%)</title><rect x="0.4684%" y="820" width="1.0449%" height="15" fill="rgb(236,212,23)" fg:x="3405" fg:w="7596"/><text x="0.7184%" y="830.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (7,596 samples, 1.04%)</title><rect x="0.4684%" y="836" width="1.0449%" height="15" fill="rgb(242,79,21)" fg:x="3405" fg:w="7596"/><text x="0.7184%" y="846.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:719) (8,130 samples, 1.12%)</title><rect x="0.4655%" y="740" width="1.1183%" height="15" fill="rgb(211,96,35)" fg:x="3384" fg:w="8130"/><text x="0.7155%" y="750.50"></text></g><g><title>step (torch/_dynamo/symbolic_convert.py:683) (8,128 samples, 1.12%)</title><rect x="0.4658%" y="756" width="1.1181%" height="15" fill="rgb(253,215,40)" fg:x="3386" fg:w="8128"/><text x="0.7158%" y="766.50"></text></g><g><title>compile_inner (torch/_dynamo/convert_frame.py:491) (8,237 samples, 1.13%)</title><rect x="0.4509%" y="676" width="1.1331%" height="15" fill="rgb(211,81,21)" fg:x="3278" fg:w="8237"/><text x="0.7009%" y="686.50"></text></g><g><title>transform_code_object (torch/_dynamo/bytecode_transformation.py:1028) (8,237 samples, 1.13%)</title><rect x="0.4509%" y="692" width="1.1331%" height="15" fill="rgb(208,190,38)" fg:x="3278" fg:w="8237"/><text x="0.7009%" y="702.50"></text></g><g><title>transform (torch/_dynamo/convert_frame.py:458) (8,131 samples, 1.12%)</title><rect x="0.4655%" y="708" width="1.1185%" height="15" fill="rgb(235,213,38)" fg:x="3384" fg:w="8131"/><text x="0.7155%" y="718.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:2069) (8,131 samples, 1.12%)</title><rect x="0.4655%" y="724" width="1.1185%" height="15" fill="rgb(237,122,38)" fg:x="3384" fg:w="8131"/><text x="0.7155%" y="734.50"></text></g><g><title>_convert_frame (torch/_dynamo/convert_frame.py:641) (8,238 samples, 1.13%)</title><rect x="0.4509%" y="596" width="1.1332%" height="15" fill="rgb(244,218,35)" fg:x="3278" fg:w="8238"/><text x="0.7009%" y="606.50"></text></g><g><title>_fn (torch/_dynamo/convert_frame.py:133) (8,238 samples, 1.13%)</title><rect x="0.4509%" y="612" width="1.1332%" height="15" fill="rgb(240,68,47)" fg:x="3278" fg:w="8238"/><text x="0.7009%" y="622.50"></text></g><g><title>_convert_frame_assert (torch/_dynamo/convert_frame.py:389) (8,238 samples, 1.13%)</title><rect x="0.4509%" y="628" width="1.1332%" height="15" fill="rgb(210,16,53)" fg:x="3278" fg:w="8238"/><text x="0.7009%" y="638.50"></text></g><g><title>_compile (torch/_dynamo/convert_frame.py:569) (8,238 samples, 1.13%)</title><rect x="0.4509%" y="644" width="1.1332%" height="15" fill="rgb(235,124,12)" fg:x="3278" fg:w="8238"/><text x="0.7009%" y="654.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (8,238 samples, 1.13%)</title><rect x="0.4509%" y="660" width="1.1332%" height="15" fill="rgb(224,169,11)" fg:x="3278" fg:w="8238"/><text x="0.7009%" y="670.50"></text></g><g><title>catch_errors (torch/_dynamo/eval_frame.py:487) (8,239 samples, 1.13%)</title><rect x="0.4509%" y="580" width="1.1333%" height="15" fill="rgb(250,166,2)" fg:x="3278" fg:w="8239"/><text x="0.7009%" y="590.50"></text></g><g><title>create_aot_dispatcher_function (torch/_functorch/aot_autograd.py:3429) (1,686 samples, 0.23%)</title><rect x="1.6201%" y="1076" width="0.2319%" height="15" fill="rgb(242,216,29)" fg:x="11778" fg:w="1686"/><text x="1.8701%" y="1086.50"></text></g><g><title>aot_wrapper_dedupe (torch/_functorch/aot_autograd.py:2212) (1,686 samples, 0.23%)</title><rect x="1.6201%" y="1092" width="0.2319%" height="15" fill="rgb(230,116,27)" fg:x="11778" fg:w="1686"/><text x="1.8701%" y="1102.50"></text></g><g><title>aot_wrapper_synthetic_base (torch/_functorch/aot_autograd.py:2392) (1,686 samples, 0.23%)</title><rect x="1.6201%" y="1108" width="0.2319%" height="15" fill="rgb(228,99,48)" fg:x="11778" fg:w="1686"/><text x="1.8701%" y="1118.50"></text></g><g><title>aot_dispatch_base (torch/_functorch/aot_autograd.py:1573) (1,488 samples, 0.20%)</title><rect x="1.6474%" y="1124" width="0.2047%" height="15" fill="rgb(253,11,6)" fg:x="11976" fg:w="1488"/><text x="1.8974%" y="1134.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,488 samples, 0.20%)</title><rect x="1.6474%" y="1140" width="0.2047%" height="15" fill="rgb(247,143,39)" fg:x="11976" fg:w="1488"/><text x="1.8974%" y="1150.50"></text></g><g><title>fw_compiler_base (torch/_inductor/compile_fx.py:1092) (1,340 samples, 0.18%)</title><rect x="1.6677%" y="1156" width="0.1843%" height="15" fill="rgb(236,97,10)" fg:x="12124" fg:w="1340"/><text x="1.9177%" y="1166.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_aot.py:80) (1,335 samples, 0.18%)</title><rect x="1.6684%" y="1172" width="0.1836%" height="15" fill="rgb(233,208,19)" fg:x="12129" fg:w="1335"/><text x="1.9184%" y="1182.50"></text></g><g><title>inner (torch/_inductor/debug.py:228) (1,334 samples, 0.18%)</title><rect x="1.6686%" y="1188" width="0.1835%" height="15" fill="rgb(216,164,2)" fg:x="12130" fg:w="1334"/><text x="1.9186%" y="1198.50"></text></g><g><title>inner (contextlib.py:79) (1,334 samples, 0.18%)</title><rect x="1.6686%" y="1204" width="0.1835%" height="15" fill="rgb(220,129,5)" fg:x="12130" fg:w="1334"/><text x="1.9186%" y="1214.50"></text></g><g><title>newFunction (torch/_inductor/compile_fx.py:54) (1,334 samples, 0.18%)</title><rect x="1.6686%" y="1220" width="0.1835%" height="15" fill="rgb(242,17,10)" fg:x="12130" fg:w="1334"/><text x="1.9186%" y="1230.50"></text></g><g><title>compile_fx_inner (torch/_inductor/compile_fx.py:341) (1,334 samples, 0.18%)</title><rect x="1.6686%" y="1236" width="0.1835%" height="15" fill="rgb(242,107,0)" fg:x="12130" fg:w="1334"/><text x="1.9186%" y="1246.50"></text></g><g><title>compiler_fn (torch/_dynamo/backends/common.py:55) (1,776 samples, 0.24%)</title><rect x="1.6084%" y="1028" width="0.2443%" height="15" fill="rgb(251,28,31)" fg:x="11693" fg:w="1776"/><text x="1.8584%" y="1038.50"></text></g><g><title>aot_module_simplified (torch/_functorch/aot_autograd.py:3891) (1,775 samples, 0.24%)</title><rect x="1.6086%" y="1044" width="0.2442%" height="15" fill="rgb(233,223,10)" fg:x="11694" fg:w="1775"/><text x="1.8586%" y="1054.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,775 samples, 0.24%)</title><rect x="1.6086%" y="1060" width="0.2442%" height="15" fill="rgb(215,21,27)" fg:x="11694" fg:w="1775"/><text x="1.8586%" y="1070.50"></text></g><g><title>run_node (torch/_dynamo/backends/distributed.py:417) (1,799 samples, 0.25%)</title><rect x="1.6054%" y="948" width="0.2475%" height="15" fill="rgb(232,23,21)" fg:x="11671" fg:w="1799"/><text x="1.8554%" y="958.50"></text></g><g><title>compile_submod (torch/_dynamo/backends/distributed.py:361) (1,794 samples, 0.25%)</title><rect x="1.6061%" y="964" width="0.2468%" height="15" fill="rgb(244,5,23)" fg:x="11676" fg:w="1794"/><text x="1.8561%" y="974.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_dynamo.py:117) (1,794 samples, 0.25%)</title><rect x="1.6061%" y="980" width="0.2468%" height="15" fill="rgb(226,81,46)" fg:x="11676" fg:w="1794"/><text x="1.8561%" y="990.50"></text></g><g><title>__call__ (torch/__init__.py:1568) (1,794 samples, 0.25%)</title><rect x="1.6061%" y="996" width="0.2468%" height="15" fill="rgb(247,70,30)" fg:x="11676" fg:w="1794"/><text x="1.8561%" y="1006.50"></text></g><g><title>compile_fx (torch/_inductor/compile_fx.py:1150) (1,777 samples, 0.24%)</title><rect x="1.6084%" y="1012" width="0.2444%" height="15" fill="rgb(212,68,19)" fg:x="11693" fg:w="1777"/><text x="1.8584%" y="1022.50"></text></g><g><title>compile_fn (torch/_dynamo/backends/distributed.py:436) (1,870 samples, 0.26%)</title><rect x="1.6028%" y="916" width="0.2572%" height="15" fill="rgb(240,187,13)" fg:x="11652" fg:w="1870"/><text x="1.8528%" y="926.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (1,870 samples, 0.26%)</title><rect x="1.6028%" y="932" width="0.2572%" height="15" fill="rgb(223,113,26)" fg:x="11652" fg:w="1870"/><text x="1.8528%" y="942.50"></text></g><g><title>compile_and_call_fx_graph (torch/_dynamo/output_graph.py:957) (1,880 samples, 0.26%)</title><rect x="1.6017%" y="868" width="0.2586%" height="15" fill="rgb(206,192,2)" fg:x="11644" fg:w="1880"/><text x="1.8517%" y="878.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,880 samples, 0.26%)</title><rect x="1.6017%" y="884" width="0.2586%" height="15" fill="rgb(241,108,4)" fg:x="11644" fg:w="1880"/><text x="1.8517%" y="894.50"></text></g><g><title>call_user_compiler (torch/_dynamo/output_graph.py:1009) (1,880 samples, 0.26%)</title><rect x="1.6017%" y="900" width="0.2586%" height="15" fill="rgb(247,173,49)" fg:x="11644" fg:w="1880"/><text x="1.8517%" y="910.50"></text></g><g><title>RETURN_VALUE (torch/_dynamo/symbolic_convert.py:2157) (1,886 samples, 0.26%)</title><rect x="1.6012%" y="820" width="0.2594%" height="15" fill="rgb(224,114,35)" fg:x="11640" fg:w="1886"/><text x="1.8512%" y="830.50"></text></g><g><title>compile_subgraph (torch/_dynamo/output_graph.py:857) (1,884 samples, 0.26%)</title><rect x="1.6014%" y="836" width="0.2592%" height="15" fill="rgb(245,159,27)" fg:x="11642" fg:w="1884"/><text x="1.8514%" y="846.50"></text></g><g><title>inner (contextlib.py:79) (1,884 samples, 0.26%)</title><rect x="1.6014%" y="852" width="0.2592%" height="15" fill="rgb(245,172,44)" fg:x="11642" fg:w="1884"/><text x="1.8514%" y="862.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:719) (2,017 samples, 0.28%)</title><rect x="1.5999%" y="788" width="0.2775%" height="15" fill="rgb(236,23,11)" fg:x="11631" fg:w="2017"/><text x="1.8499%" y="798.50"></text></g><g><title>step (torch/_dynamo/symbolic_convert.py:683) (2,016 samples, 0.28%)</title><rect x="1.6001%" y="804" width="0.2773%" height="15" fill="rgb(205,117,38)" fg:x="11632" fg:w="2016"/><text x="1.8501%" y="814.50"></text></g><g><title>compile_inner (torch/_dynamo/convert_frame.py:491) (2,024 samples, 0.28%)</title><rect x="1.5991%" y="724" width="0.2784%" height="15" fill="rgb(237,72,25)" fg:x="11625" fg:w="2024"/><text x="1.8491%" y="734.50"></text></g><g><title>transform_code_object (torch/_dynamo/bytecode_transformation.py:1028) (2,023 samples, 0.28%)</title><rect x="1.5992%" y="740" width="0.2783%" height="15" fill="rgb(244,70,9)" fg:x="11626" fg:w="2023"/><text x="1.8492%" y="750.50"></text></g><g><title>transform (torch/_dynamo/convert_frame.py:458) (2,018 samples, 0.28%)</title><rect x="1.5999%" y="756" width="0.2776%" height="15" fill="rgb(217,125,39)" fg:x="11631" fg:w="2018"/><text x="1.8499%" y="766.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:2069) (2,018 samples, 0.28%)</title><rect x="1.5999%" y="772" width="0.2776%" height="15" fill="rgb(235,36,10)" fg:x="11631" fg:w="2018"/><text x="1.8499%" y="782.50"></text></g><g><title>_fn (torch/_dynamo/convert_frame.py:133) (2,041 samples, 0.28%)</title><rect x="1.5991%" y="660" width="0.2808%" height="15" fill="rgb(251,123,47)" fg:x="11625" fg:w="2041"/><text x="1.8491%" y="670.50"></text></g><g><title>_convert_frame_assert (torch/_dynamo/convert_frame.py:389) (2,041 samples, 0.28%)</title><rect x="1.5991%" y="676" width="0.2808%" height="15" fill="rgb(221,13,13)" fg:x="11625" fg:w="2041"/><text x="1.8491%" y="686.50"></text></g><g><title>_compile (torch/_dynamo/convert_frame.py:569) (2,041 samples, 0.28%)</title><rect x="1.5991%" y="692" width="0.2808%" height="15" fill="rgb(238,131,9)" fg:x="11625" fg:w="2041"/><text x="1.8491%" y="702.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (2,041 samples, 0.28%)</title><rect x="1.5991%" y="708" width="0.2808%" height="15" fill="rgb(211,50,8)" fg:x="11625" fg:w="2041"/><text x="1.8491%" y="718.50"></text></g><g><title>catch_errors (torch/_dynamo/eval_frame.py:487) (2,042 samples, 0.28%)</title><rect x="1.5991%" y="628" width="0.2809%" height="15" fill="rgb(245,182,24)" fg:x="11625" fg:w="2042"/><text x="1.8491%" y="638.50"></text></g><g><title>_convert_frame (torch/_dynamo/convert_frame.py:641) (2,042 samples, 0.28%)</title><rect x="1.5991%" y="644" width="0.2809%" height="15" fill="rgb(242,14,37)" fg:x="11625" fg:w="2042"/><text x="1.8491%" y="654.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (2,085 samples, 0.29%)</title><rect x="1.5991%" y="596" width="0.2868%" height="15" fill="rgb(246,228,12)" fg:x="11625" fg:w="2085"/><text x="1.8491%" y="606.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (2,085 samples, 0.29%)</title><rect x="1.5991%" y="612" width="0.2868%" height="15" fill="rgb(213,55,15)" fg:x="11625" fg:w="2085"/><text x="1.8491%" y="622.50"></text></g><g><title>forward (modeling/global_graph.py:894) (2,094 samples, 0.29%)</title><rect x="1.5980%" y="580" width="0.2880%" height="15" fill="rgb(209,9,3)" fg:x="11617" fg:w="2094"/><text x="1.8480%" y="590.50"></text></g><g><title>forward (modeling/vectornet.py:216) (10,978 samples, 1.51%)</title><rect x="0.3764%" y="516" width="1.5101%" height="15" fill="rgb(230,59,30)" fg:x="2736" fg:w="10978"/><text x="0.6264%" y="526.50"></text></g><g><title>forward (modeling/vectornet.py:137) (10,438 samples, 1.44%)</title><rect x="0.4506%" y="532" width="1.4358%" height="15" fill="rgb(209,121,21)" fg:x="3276" fg:w="10438"/><text x="0.7006%" y="542.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (10,437 samples, 1.44%)</title><rect x="0.4508%" y="548" width="1.4357%" height="15" fill="rgb(220,109,13)" fg:x="3277" fg:w="10437"/><text x="0.7008%" y="558.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (10,437 samples, 1.44%)</title><rect x="0.4508%" y="564" width="1.4357%" height="15" fill="rgb(232,18,1)" fg:x="3277" fg:w="10437"/><text x="0.7008%" y="574.50"></text></g><g><title>forward (modeling/vectornet.py:221) (1,717 samples, 0.24%)</title><rect x="1.8864%" y="516" width="0.2362%" height="15" fill="rgb(215,41,42)" fg:x="13714" fg:w="1717"/><text x="2.1364%" y="526.50"></text></g><g><title>functionalized_f_helper (torch/_functorch/aot_autograd.py:1363) (1,090 samples, 0.15%)</title><rect x="2.2331%" y="1236" width="0.1499%" height="15" fill="rgb(224,123,36)" fg:x="16234" fg:w="1090"/><text x="2.4831%" y="1246.50"></text></g><g><title>inner_fn (torch/_functorch/aot_autograd.py:1165) (1,090 samples, 0.15%)</title><rect x="2.2331%" y="1252" width="0.1499%" height="15" fill="rgb(240,125,3)" fg:x="16234" fg:w="1090"/><text x="2.4831%" y="1262.50"></text></g><g><title>functional_call (torch/_functorch/aot_autograd.py:3496) (1,090 samples, 0.15%)</title><rect x="2.2331%" y="1268" width="0.1499%" height="15" fill="rgb(205,98,50)" fg:x="16234" fg:w="1090"/><text x="2.4831%" y="1278.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (1,086 samples, 0.15%)</title><rect x="2.2336%" y="1284" width="0.1494%" height="15" fill="rgb(205,185,37)" fg:x="16238" fg:w="1086"/><text x="2.4836%" y="1294.50"></text></g><g><title>run_node (torch/fx/interpreter.py:195) (1,081 samples, 0.15%)</title><rect x="2.2343%" y="1300" width="0.1487%" height="15" fill="rgb(238,207,15)" fg:x="16243" fg:w="1081"/><text x="2.4843%" y="1310.50"></text></g><g><title>dispatch_trace (torch/fx/experimental/proxy_tensor.py:468) (1,171 samples, 0.16%)</title><rect x="2.2221%" y="1124" width="0.1611%" height="15" fill="rgb(213,199,42)" fg:x="16154" fg:w="1171"/><text x="2.4721%" y="1134.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,171 samples, 0.16%)</title><rect x="2.2221%" y="1140" width="0.1611%" height="15" fill="rgb(235,201,11)" fg:x="16154" fg:w="1171"/><text x="2.4721%" y="1150.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,171 samples, 0.16%)</title><rect x="2.2221%" y="1156" width="0.1611%" height="15" fill="rgb(207,46,11)" fg:x="16154" fg:w="1171"/><text x="2.4721%" y="1166.50"></text></g><g><title>trace (torch/fx/_symbolic_trace.py:817) (1,156 samples, 0.16%)</title><rect x="2.2241%" y="1172" width="0.1590%" height="15" fill="rgb(241,35,35)" fg:x="16169" fg:w="1156"/><text x="2.4741%" y="1182.50"></text></g><g><title>wrapped (torch/fx/experimental/proxy_tensor.py:485) (1,106 samples, 0.15%)</title><rect x="2.2310%" y="1188" width="0.1521%" height="15" fill="rgb(243,32,47)" fg:x="16219" fg:w="1106"/><text x="2.4810%" y="1198.50"></text></g><g><title>&lt;lambda&gt; (&lt;string&gt;:1) (1,106 samples, 0.15%)</title><rect x="2.2310%" y="1204" width="0.1521%" height="15" fill="rgb(247,202,23)" fg:x="16219" fg:w="1106"/><text x="2.4810%" y="1214.50"></text></g><g><title>fwd_helper (torch/_functorch/aot_autograd.py:1412) (1,106 samples, 0.15%)</title><rect x="2.2310%" y="1220" width="0.1521%" height="15" fill="rgb(219,102,11)" fg:x="16219" fg:w="1106"/><text x="2.4810%" y="1230.50"></text></g><g><title>aot_dispatch_base_graph (torch/_functorch/aot_autograd.py:1533) (1,179 samples, 0.16%)</title><rect x="2.2221%" y="1028" width="0.1622%" height="15" fill="rgb(243,110,44)" fg:x="16154" fg:w="1179"/><text x="2.4721%" y="1038.50"></text></g><g><title>create_functionalized_graph (torch/_functorch/aot_autograd.py:1420) (1,179 samples, 0.16%)</title><rect x="2.2221%" y="1044" width="0.1622%" height="15" fill="rgb(222,74,54)" fg:x="16154" fg:w="1179"/><text x="2.4721%" y="1054.50"></text></g><g><title>wrapped (torch/fx/experimental/proxy_tensor.py:809) (1,179 samples, 0.16%)</title><rect x="2.2221%" y="1060" width="0.1622%" height="15" fill="rgb(216,99,12)" fg:x="16154" fg:w="1179"/><text x="2.4721%" y="1070.50"></text></g><g><title>inner (torch/_compile.py:24) (1,179 samples, 0.16%)</title><rect x="2.2221%" y="1076" width="0.1622%" height="15" fill="rgb(226,22,26)" fg:x="16154" fg:w="1179"/><text x="2.4721%" y="1086.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,179 samples, 0.16%)</title><rect x="2.2221%" y="1092" width="0.1622%" height="15" fill="rgb(217,163,10)" fg:x="16154" fg:w="1179"/><text x="2.4721%" y="1102.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,179 samples, 0.16%)</title><rect x="2.2221%" y="1108" width="0.1622%" height="15" fill="rgb(213,25,53)" fg:x="16154" fg:w="1179"/><text x="2.4721%" y="1118.50"></text></g><g><title>aot_dispatch_base (torch/_functorch/aot_autograd.py:1558) (1,208 samples, 0.17%)</title><rect x="2.2221%" y="1012" width="0.1662%" height="15" fill="rgb(252,105,26)" fg:x="16154" fg:w="1208"/><text x="2.4721%" y="1022.50"></text></g><g><title>__init__ (torch/_inductor/scheduler.py:515) (885 samples, 0.12%)</title><rect x="2.6187%" y="1284" width="0.1217%" height="15" fill="rgb(220,39,43)" fg:x="19037" fg:w="885"/><text x="2.8687%" y="1294.50"></text></g><g><title>__init__ (torch/_inductor/scheduler.py:971) (1,017 samples, 0.14%)</title><rect x="2.6137%" y="1236" width="0.1399%" height="15" fill="rgb(229,68,48)" fg:x="19001" fg:w="1017"/><text x="2.8637%" y="1246.50"></text></g><g><title>&lt;listcomp&gt; (torch/_inductor/scheduler.py:971) (1,017 samples, 0.14%)</title><rect x="2.6137%" y="1252" width="0.1399%" height="15" fill="rgb(252,8,32)" fg:x="19001" fg:w="1017"/><text x="2.8637%" y="1262.50"></text></g><g><title>create_scheduler_node (torch/_inductor/scheduler.py:1038) (1,014 samples, 0.14%)</title><rect x="2.6141%" y="1268" width="0.1395%" height="15" fill="rgb(223,20,43)" fg:x="19004" fg:w="1014"/><text x="2.8641%" y="1278.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,071 samples, 0.15%)</title><rect x="2.6071%" y="1220" width="0.1473%" height="15" fill="rgb(229,81,49)" fg:x="18953" fg:w="1071"/><text x="2.8571%" y="1230.50"></text></g><g><title>codegen (torch/_inductor/graph.py:913) (1,073 samples, 0.15%)</title><rect x="2.6071%" y="1204" width="0.1476%" height="15" fill="rgb(236,28,36)" fg:x="18953" fg:w="1073"/><text x="2.8571%" y="1214.50"></text></g><g><title>compile_to_module (torch/_inductor/graph.py:938) (1,735 samples, 0.24%)</title><rect x="2.6067%" y="1188" width="0.2387%" height="15" fill="rgb(249,185,26)" fg:x="18950" fg:w="1735"/><text x="2.8567%" y="1198.50"></text></g><g><title>compile_fx_inner (torch/_inductor/compile_fx.py:341) (3,225 samples, 0.44%)</title><rect x="2.4279%" y="1124" width="0.4436%" height="15" fill="rgb(249,174,33)" fg:x="17650" fg:w="3225"/><text x="2.6779%" y="1134.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:565) (1,925 samples, 0.26%)</title><rect x="2.6067%" y="1140" width="0.2648%" height="15" fill="rgb(233,201,37)" fg:x="18950" fg:w="1925"/><text x="2.8567%" y="1150.50"></text></g><g><title>compile_to_fn (torch/_inductor/graph.py:970) (1,925 samples, 0.26%)</title><rect x="2.6067%" y="1156" width="0.2648%" height="15" fill="rgb(221,78,26)" fg:x="18950" fg:w="1925"/><text x="2.8567%" y="1166.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,925 samples, 0.26%)</title><rect x="2.6067%" y="1172" width="0.2648%" height="15" fill="rgb(250,127,30)" fg:x="18950" fg:w="1925"/><text x="2.8567%" y="1182.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (3,514 samples, 0.48%)</title><rect x="2.3883%" y="1028" width="0.4834%" height="15" fill="rgb(230,49,44)" fg:x="17362" fg:w="3514"/><text x="2.6383%" y="1038.50"></text></g><g><title>fw_compiler_base (torch/_inductor/compile_fx.py:1092) (3,227 samples, 0.44%)</title><rect x="2.4277%" y="1044" width="0.4439%" height="15" fill="rgb(229,67,23)" fg:x="17649" fg:w="3227"/><text x="2.6777%" y="1054.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_aot.py:80) (3,226 samples, 0.44%)</title><rect x="2.4279%" y="1060" width="0.4438%" height="15" fill="rgb(249,83,47)" fg:x="17650" fg:w="3226"/><text x="2.6779%" y="1070.50"></text></g><g><title>inner (torch/_inductor/debug.py:228) (3,226 samples, 0.44%)</title><rect x="2.4279%" y="1076" width="0.4438%" height="15" fill="rgb(215,43,3)" fg:x="17650" fg:w="3226"/><text x="2.6779%" y="1086.50"></text></g><g><title>inner (contextlib.py:79) (3,226 samples, 0.44%)</title><rect x="2.4279%" y="1092" width="0.4438%" height="15" fill="rgb(238,154,13)" fg:x="17650" fg:w="3226"/><text x="2.6779%" y="1102.50"></text></g><g><title>newFunction (torch/_inductor/compile_fx.py:54) (3,226 samples, 0.44%)</title><rect x="2.4279%" y="1108" width="0.4438%" height="15" fill="rgb(219,56,2)" fg:x="17650" fg:w="3226"/><text x="2.6779%" y="1118.50"></text></g><g><title>create_aot_dispatcher_function (torch/_functorch/aot_autograd.py:3429) (4,723 samples, 0.65%)</title><rect x="2.2221%" y="964" width="0.6497%" height="15" fill="rgb(233,0,4)" fg:x="16154" fg:w="4723"/><text x="2.4721%" y="974.50"></text></g><g><title>aot_wrapper_dedupe (torch/_functorch/aot_autograd.py:2212) (4,723 samples, 0.65%)</title><rect x="2.2221%" y="980" width="0.6497%" height="15" fill="rgb(235,30,7)" fg:x="16154" fg:w="4723"/><text x="2.4721%" y="990.50"></text></g><g><title>aot_wrapper_synthetic_base (torch/_functorch/aot_autograd.py:2392) (4,723 samples, 0.65%)</title><rect x="2.2221%" y="996" width="0.6497%" height="15" fill="rgb(250,79,13)" fg:x="16154" fg:w="4723"/><text x="2.4721%" y="1006.50"></text></g><g><title>aot_dispatch_base (torch/_functorch/aot_autograd.py:1573) (3,515 samples, 0.48%)</title><rect x="2.3883%" y="1012" width="0.4835%" height="15" fill="rgb(211,146,34)" fg:x="17362" fg:w="3515"/><text x="2.6383%" y="1022.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (5,177 samples, 0.71%)</title><rect x="2.1609%" y="948" width="0.7121%" height="15" fill="rgb(228,22,38)" fg:x="15709" fg:w="5177"/><text x="2.4109%" y="958.50"></text></g><g><title>compiler_fn (torch/_dynamo/backends/common.py:55) (5,179 samples, 0.71%)</title><rect x="2.1607%" y="916" width="0.7124%" height="15" fill="rgb(235,168,5)" fg:x="15708" fg:w="5179"/><text x="2.4107%" y="926.50"></text></g><g><title>aot_module_simplified (torch/_functorch/aot_autograd.py:3891) (5,178 samples, 0.71%)</title><rect x="2.1609%" y="932" width="0.7123%" height="15" fill="rgb(221,155,16)" fg:x="15709" fg:w="5178"/><text x="2.4109%" y="942.50"></text></g><g><title>compile_and_call_fx_graph (torch/_dynamo/output_graph.py:957) (5,234 samples, 0.72%)</title><rect x="2.1533%" y="804" width="0.7200%" height="15" fill="rgb(215,215,53)" fg:x="15654" fg:w="5234"/><text x="2.4033%" y="814.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (5,234 samples, 0.72%)</title><rect x="2.1533%" y="820" width="0.7200%" height="15" fill="rgb(223,4,10)" fg:x="15654" fg:w="5234"/><text x="2.4033%" y="830.50"></text></g><g><title>call_user_compiler (torch/_dynamo/output_graph.py:1009) (5,234 samples, 0.72%)</title><rect x="2.1533%" y="836" width="0.7200%" height="15" fill="rgb(234,103,6)" fg:x="15654" fg:w="5234"/><text x="2.4033%" y="846.50"></text></g><g><title>compile_fn (torch/_dynamo/backends/distributed.py:291) (5,234 samples, 0.72%)</title><rect x="2.1533%" y="852" width="0.7200%" height="15" fill="rgb(227,97,0)" fg:x="15654" fg:w="5234"/><text x="2.4033%" y="862.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_dynamo.py:117) (5,234 samples, 0.72%)</title><rect x="2.1533%" y="868" width="0.7200%" height="15" fill="rgb(234,150,53)" fg:x="15654" fg:w="5234"/><text x="2.4033%" y="878.50"></text></g><g><title>__call__ (torch/__init__.py:1568) (5,234 samples, 0.72%)</title><rect x="2.1533%" y="884" width="0.7200%" height="15" fill="rgb(228,201,54)" fg:x="15654" fg:w="5234"/><text x="2.4033%" y="894.50"></text></g><g><title>compile_fx (torch/_inductor/compile_fx.py:1150) (5,180 samples, 0.71%)</title><rect x="2.1607%" y="900" width="0.7125%" height="15" fill="rgb(222,22,37)" fg:x="15708" fg:w="5180"/><text x="2.4107%" y="910.50"></text></g><g><title>RETURN_VALUE (torch/_dynamo/symbolic_convert.py:2157) (5,299 samples, 0.73%)</title><rect x="2.1445%" y="756" width="0.7289%" height="15" fill="rgb(237,53,32)" fg:x="15590" fg:w="5299"/><text x="2.3945%" y="766.50"></text></g><g><title>compile_subgraph (torch/_dynamo/output_graph.py:857) (5,236 samples, 0.72%)</title><rect x="2.1532%" y="772" width="0.7202%" height="15" fill="rgb(233,25,53)" fg:x="15653" fg:w="5236"/><text x="2.4032%" y="782.50"></text></g><g><title>inner (contextlib.py:79) (5,236 samples, 0.72%)</title><rect x="2.1532%" y="788" width="0.7202%" height="15" fill="rgb(210,40,34)" fg:x="15653" fg:w="5236"/><text x="2.4032%" y="798.50"></text></g><g><title>call_function (torch/_dynamo/variables/nn_module.py:331) (727 samples, 0.10%)</title><rect x="2.8945%" y="804" width="0.1000%" height="15" fill="rgb(241,220,44)" fg:x="21042" fg:w="727"/><text x="3.1445%" y="814.50"></text></g><g><title>inline_user_function_return (torch/_dynamo/symbolic_convert.py:593) (727 samples, 0.10%)</title><rect x="2.8945%" y="820" width="0.1000%" height="15" fill="rgb(235,28,35)" fg:x="21042" fg:w="727"/><text x="3.1445%" y="830.50"></text></g><g><title>inline_call (torch/_dynamo/symbolic_convert.py:2174) (727 samples, 0.10%)</title><rect x="2.8945%" y="836" width="0.1000%" height="15" fill="rgb(210,56,17)" fg:x="21042" fg:w="727"/><text x="3.1445%" y="846.50"></text></g><g><title>CALL_FUNCTION (torch/_dynamo/symbolic_convert.py:1110) (877 samples, 0.12%)</title><rect x="2.8742%" y="772" width="0.1206%" height="15" fill="rgb(224,130,29)" fg:x="20895" fg:w="877"/><text x="3.1242%" y="782.50"></text></g><g><title>call_function (torch/_dynamo/symbolic_convert.py:557) (877 samples, 0.12%)</title><rect x="2.8742%" y="788" width="0.1206%" height="15" fill="rgb(235,212,8)" fg:x="20895" fg:w="877"/><text x="3.1242%" y="798.50"></text></g><g><title>wrapper (torch/_dynamo/symbolic_convert.py:392) (931 samples, 0.13%)</title><rect x="2.8742%" y="756" width="0.1281%" height="15" fill="rgb(223,33,50)" fg:x="20895" fg:w="931"/><text x="3.1242%" y="766.50"></text></g><g><title>transform (torch/_dynamo/convert_frame.py:458) (6,611 samples, 0.91%)</title><rect x="2.1367%" y="692" width="0.9094%" height="15" fill="rgb(219,149,13)" fg:x="15533" fg:w="6611"/><text x="2.3867%" y="702.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:2069) (6,611 samples, 0.91%)</title><rect x="2.1367%" y="708" width="0.9094%" height="15" fill="rgb(250,156,29)" fg:x="15533" fg:w="6611"/><text x="2.3867%" y="718.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:719) (6,611 samples, 0.91%)</title><rect x="2.1367%" y="724" width="0.9094%" height="15" fill="rgb(216,193,19)" fg:x="15533" fg:w="6611"/><text x="2.3867%" y="734.50"></text></g><g><title>step (torch/_dynamo/symbolic_convert.py:683) (6,606 samples, 0.91%)</title><rect x="2.1373%" y="740" width="0.9087%" height="15" fill="rgb(216,135,14)" fg:x="15538" fg:w="6606"/><text x="2.3873%" y="750.50"></text></g><g><title>transform_code_object (torch/_dynamo/bytecode_transformation.py:1028) (6,700 samples, 0.92%)</title><rect x="2.1246%" y="676" width="0.9216%" height="15" fill="rgb(241,47,5)" fg:x="15445" fg:w="6700"/><text x="2.3746%" y="686.50"></text></g><g><title>compile_inner (torch/_dynamo/convert_frame.py:491) (6,709 samples, 0.92%)</title><rect x="2.1237%" y="660" width="0.9229%" height="15" fill="rgb(233,42,35)" fg:x="15439" fg:w="6709"/><text x="2.3737%" y="670.50"></text></g><g><title>catch_errors (torch/_dynamo/eval_frame.py:487) (6,801 samples, 0.94%)</title><rect x="2.1237%" y="564" width="0.9355%" height="15" fill="rgb(231,13,6)" fg:x="15439" fg:w="6801"/><text x="2.3737%" y="574.50"></text></g><g><title>_convert_frame (torch/_dynamo/convert_frame.py:641) (6,801 samples, 0.94%)</title><rect x="2.1237%" y="580" width="0.9355%" height="15" fill="rgb(207,181,40)" fg:x="15439" fg:w="6801"/><text x="2.3737%" y="590.50"></text></g><g><title>_fn (torch/_dynamo/convert_frame.py:133) (6,801 samples, 0.94%)</title><rect x="2.1237%" y="596" width="0.9355%" height="15" fill="rgb(254,173,49)" fg:x="15439" fg:w="6801"/><text x="2.3737%" y="606.50"></text></g><g><title>_convert_frame_assert (torch/_dynamo/convert_frame.py:389) (6,801 samples, 0.94%)</title><rect x="2.1237%" y="612" width="0.9355%" height="15" fill="rgb(221,1,38)" fg:x="15439" fg:w="6801"/><text x="2.3737%" y="622.50"></text></g><g><title>_compile (torch/_dynamo/convert_frame.py:569) (6,801 samples, 0.94%)</title><rect x="2.1237%" y="628" width="0.9355%" height="15" fill="rgb(206,124,46)" fg:x="15439" fg:w="6801"/><text x="2.3737%" y="638.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (6,801 samples, 0.94%)</title><rect x="2.1237%" y="644" width="0.9355%" height="15" fill="rgb(249,21,11)" fg:x="15439" fg:w="6801"/><text x="2.3737%" y="654.50"></text></g><g><title>forward (modeling/decoders.py:557) (747 samples, 0.10%)</title><rect x="3.0623%" y="564" width="0.1028%" height="15" fill="rgb(222,201,40)" fg:x="22262" fg:w="747"/><text x="3.3123%" y="574.50"></text></g><g><title>forward (modeling/vectornet.py:237) (7,686 samples, 1.06%)</title><rect x="2.1233%" y="516" width="1.0573%" height="15" fill="rgb(235,61,29)" fg:x="15436" fg:w="7686"/><text x="2.3733%" y="526.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (7,686 samples, 1.06%)</title><rect x="2.1233%" y="532" width="1.0573%" height="15" fill="rgb(219,207,3)" fg:x="15436" fg:w="7686"/><text x="2.3733%" y="542.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (7,685 samples, 1.06%)</title><rect x="2.1235%" y="548" width="1.0571%" height="15" fill="rgb(222,56,46)" fg:x="15437" fg:w="7685"/><text x="2.3735%" y="558.50"></text></g><g><title>merge_prediction_outputs (data/utils.py:1651) (1,638 samples, 0.23%)</title><rect x="3.1898%" y="532" width="0.2253%" height="15" fill="rgb(239,76,54)" fg:x="23189" fg:w="1638"/><text x="3.4398%" y="542.50"></text></g><g><title>forward (modeling/vectornet.py:249) (1,717 samples, 0.24%)</title><rect x="3.1818%" y="516" width="0.2362%" height="15" fill="rgb(231,124,27)" fg:x="23131" fg:w="1717"/><text x="3.4318%" y="526.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (22,819 samples, 3.14%)</title><rect x="0.2799%" y="468" width="3.1389%" height="15" fill="rgb(249,195,6)" fg:x="2035" fg:w="22819"/><text x="0.5299%" y="478.50">_fn..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (22,819 samples, 3.14%)</title><rect x="0.2799%" y="484" width="3.1389%" height="15" fill="rgb(237,174,47)" fg:x="2035" fg:w="22819"/><text x="0.5299%" y="494.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (22,819 samples, 3.14%)</title><rect x="0.2799%" y="500" width="3.1389%" height="15" fill="rgb(206,201,31)" fg:x="2035" fg:w="22819"/><text x="0.5299%" y="510.50">_ca..</text></g><g><title>validation_step (modeling/vectornet_lightning.py:482) (22,823 samples, 3.14%)</title><rect x="0.2795%" y="404" width="3.1394%" height="15" fill="rgb(231,57,52)" fg:x="2032" fg:w="22823"/><text x="0.5295%" y="414.50">val..</text></g><g><title>forward (modeling/vectornet_lightning.py:381) (22,823 samples, 3.14%)</title><rect x="0.2795%" y="420" width="3.1394%" height="15" fill="rgb(248,177,22)" fg:x="2032" fg:w="22823"/><text x="0.5295%" y="430.50">for..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (22,823 samples, 3.14%)</title><rect x="0.2795%" y="436" width="3.1394%" height="15" fill="rgb(215,211,37)" fg:x="2032" fg:w="22823"/><text x="0.5295%" y="446.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (22,823 samples, 3.14%)</title><rect x="0.2795%" y="452" width="3.1394%" height="15" fill="rgb(241,128,51)" fg:x="2032" fg:w="22823"/><text x="0.5295%" y="462.50">_ca..</text></g><g><title>_print_pil (matplotlib/backends/backend_agg.py:457) (1,141 samples, 0.16%)</title><rect x="3.6003%" y="564" width="0.1570%" height="15" fill="rgb(227,165,31)" fg:x="26173" fg:w="1141"/><text x="3.8503%" y="574.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:400) (1,134 samples, 0.16%)</title><rect x="3.6012%" y="580" width="0.1560%" height="15" fill="rgb(228,167,24)" fg:x="26180" fg:w="1134"/><text x="3.8512%" y="590.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:95) (1,134 samples, 0.16%)</title><rect x="3.6012%" y="596" width="0.1560%" height="15" fill="rgb(228,143,12)" fg:x="26180" fg:w="1134"/><text x="3.8512%" y="606.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,134 samples, 0.16%)</title><rect x="3.6012%" y="612" width="0.1560%" height="15" fill="rgb(249,149,8)" fg:x="26180" fg:w="1134"/><text x="3.8512%" y="622.50"></text></g><g><title>draw (matplotlib/figure.py:3175) (1,126 samples, 0.15%)</title><rect x="3.6023%" y="628" width="0.1549%" height="15" fill="rgb(243,35,44)" fg:x="26188" fg:w="1126"/><text x="3.8523%" y="638.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (1,126 samples, 0.15%)</title><rect x="3.6023%" y="644" width="0.1549%" height="15" fill="rgb(246,89,9)" fg:x="26188" fg:w="1126"/><text x="3.8523%" y="654.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,126 samples, 0.15%)</title><rect x="3.6023%" y="660" width="0.1549%" height="15" fill="rgb(233,213,13)" fg:x="26188" fg:w="1126"/><text x="3.8523%" y="670.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3064) (873 samples, 0.12%)</title><rect x="3.6371%" y="676" width="0.1201%" height="15" fill="rgb(233,141,41)" fg:x="26441" fg:w="873"/><text x="3.8871%" y="686.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (872 samples, 0.12%)</title><rect x="3.6373%" y="692" width="0.1199%" height="15" fill="rgb(239,167,4)" fg:x="26442" fg:w="872"/><text x="3.8873%" y="702.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (871 samples, 0.12%)</title><rect x="3.6374%" y="708" width="0.1198%" height="15" fill="rgb(209,217,16)" fg:x="26443" fg:w="871"/><text x="3.8874%" y="718.50"></text></g><g><title>print_figure (matplotlib/backend_bases.py:2366) (1,455 samples, 0.20%)</title><rect x="3.6003%" y="516" width="0.2001%" height="15" fill="rgb(219,88,35)" fg:x="26173" fg:w="1455"/><text x="3.8503%" y="526.50"></text></g><g><title>&lt;lambda&gt; (matplotlib/backend_bases.py:2232) (1,455 samples, 0.20%)</title><rect x="3.6003%" y="532" width="0.2001%" height="15" fill="rgb(220,193,23)" fg:x="26173" fg:w="1455"/><text x="3.8503%" y="542.50"></text></g><g><title>print_png (matplotlib/backends/backend_agg.py:509) (1,455 samples, 0.20%)</title><rect x="3.6003%" y="548" width="0.2001%" height="15" fill="rgb(230,90,52)" fg:x="26173" fg:w="1455"/><text x="3.8503%" y="558.50"></text></g><g><title>savefig (matplotlib/pyplot.py:1023) (1,457 samples, 0.20%)</title><rect x="3.6001%" y="484" width="0.2004%" height="15" fill="rgb(252,106,19)" fg:x="26172" fg:w="1457"/><text x="3.8501%" y="494.50"></text></g><g><title>savefig (matplotlib/figure.py:3378) (1,457 samples, 0.20%)</title><rect x="3.6001%" y="500" width="0.2004%" height="15" fill="rgb(206,74,20)" fg:x="26172" fg:w="1457"/><text x="3.8501%" y="510.50"></text></g><g><title>_plot_time_to_collision_histogram (metrics/details/ego_collision_metrics.py:258) (2,010 samples, 0.28%)</title><rect x="3.6001%" y="468" width="0.2765%" height="15" fill="rgb(230,138,44)" fg:x="26172" fg:w="2010"/><text x="3.8501%" y="478.50"></text></g><g><title>result (metrics/details/ego_collision_metrics.py:276) (2,572 samples, 0.35%)</title><rect x="3.5230%" y="436" width="0.3538%" height="15" fill="rgb(235,182,43)" fg:x="25611" fg:w="2572"/><text x="3.7730%" y="446.50"></text></g><g><title>wrapper (utils/log_tools.py:38) (2,572 samples, 0.35%)</title><rect x="3.5230%" y="452" width="0.3538%" height="15" fill="rgb(242,16,51)" fg:x="25611" fg:w="2572"/><text x="3.7730%" y="462.50"></text></g><g><title>_print_pil (matplotlib/backends/backend_agg.py:457) (1,204 samples, 0.17%)</title><rect x="4.0636%" y="564" width="0.1656%" height="15" fill="rgb(248,9,4)" fg:x="29541" fg:w="1204"/><text x="4.3136%" y="574.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:400) (1,202 samples, 0.17%)</title><rect x="4.0638%" y="580" width="0.1653%" height="15" fill="rgb(210,31,22)" fg:x="29543" fg:w="1202"/><text x="4.3138%" y="590.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:95) (1,202 samples, 0.17%)</title><rect x="4.0638%" y="596" width="0.1653%" height="15" fill="rgb(239,54,39)" fg:x="29543" fg:w="1202"/><text x="4.3138%" y="606.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,202 samples, 0.17%)</title><rect x="4.0638%" y="612" width="0.1653%" height="15" fill="rgb(230,99,41)" fg:x="29543" fg:w="1202"/><text x="4.3138%" y="622.50"></text></g><g><title>draw (matplotlib/figure.py:3175) (1,193 samples, 0.16%)</title><rect x="4.0651%" y="628" width="0.1641%" height="15" fill="rgb(253,106,12)" fg:x="29552" fg:w="1193"/><text x="4.3151%" y="638.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (1,192 samples, 0.16%)</title><rect x="4.0652%" y="644" width="0.1640%" height="15" fill="rgb(213,46,41)" fg:x="29553" fg:w="1192"/><text x="4.3152%" y="654.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,192 samples, 0.16%)</title><rect x="4.0652%" y="660" width="0.1640%" height="15" fill="rgb(215,133,35)" fg:x="29553" fg:w="1192"/><text x="4.3152%" y="670.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3064) (886 samples, 0.12%)</title><rect x="4.1073%" y="676" width="0.1219%" height="15" fill="rgb(213,28,5)" fg:x="29859" fg:w="886"/><text x="4.3573%" y="686.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (886 samples, 0.12%)</title><rect x="4.1073%" y="692" width="0.1219%" height="15" fill="rgb(215,77,49)" fg:x="29859" fg:w="886"/><text x="4.3573%" y="702.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (886 samples, 0.12%)</title><rect x="4.1073%" y="708" width="0.1219%" height="15" fill="rgb(248,100,22)" fg:x="29859" fg:w="886"/><text x="4.3573%" y="718.50"></text></g><g><title>savefig (matplotlib/pyplot.py:1023) (1,557 samples, 0.21%)</title><rect x="4.0634%" y="484" width="0.2142%" height="15" fill="rgb(208,67,9)" fg:x="29540" fg:w="1557"/><text x="4.3134%" y="494.50"></text></g><g><title>savefig (matplotlib/figure.py:3378) (1,557 samples, 0.21%)</title><rect x="4.0634%" y="500" width="0.2142%" height="15" fill="rgb(219,133,21)" fg:x="29540" fg:w="1557"/><text x="4.3134%" y="510.50"></text></g><g><title>print_figure (matplotlib/backend_bases.py:2366) (1,556 samples, 0.21%)</title><rect x="4.0636%" y="516" width="0.2140%" height="15" fill="rgb(246,46,29)" fg:x="29541" fg:w="1556"/><text x="4.3136%" y="526.50"></text></g><g><title>&lt;lambda&gt; (matplotlib/backend_bases.py:2232) (1,556 samples, 0.21%)</title><rect x="4.0636%" y="532" width="0.2140%" height="15" fill="rgb(246,185,52)" fg:x="29541" fg:w="1556"/><text x="4.3136%" y="542.50"></text></g><g><title>print_png (matplotlib/backends/backend_agg.py:509) (1,556 samples, 0.21%)</title><rect x="4.0636%" y="548" width="0.2140%" height="15" fill="rgb(252,136,11)" fg:x="29541" fg:w="1556"/><text x="4.3136%" y="558.50"></text></g><g><title>_plot_min_distances_histogram (metrics/details/ego_collision_metrics.py:235) (2,262 samples, 0.31%)</title><rect x="4.0634%" y="468" width="0.3112%" height="15" fill="rgb(219,138,53)" fg:x="29540" fg:w="2262"/><text x="4.3134%" y="478.50"></text></g><g><title>result (metrics/details/ego_collision_metrics.py:278) (3,620 samples, 0.50%)</title><rect x="3.8767%" y="436" width="0.4980%" height="15" fill="rgb(211,51,23)" fg:x="28183" fg:w="3620"/><text x="4.1267%" y="446.50"></text></g><g><title>wrapper (utils/log_tools.py:38) (3,620 samples, 0.50%)</title><rect x="3.8767%" y="452" width="0.4980%" height="15" fill="rgb(247,221,28)" fg:x="28183" fg:w="3620"/><text x="4.1267%" y="462.50"></text></g><g><title>validation_step (modeling/vectornet_lightning.py:557) (6,196 samples, 0.85%)</title><rect x="3.5228%" y="404" width="0.8523%" height="15" fill="rgb(251,222,45)" fg:x="25610" fg:w="6196"/><text x="3.7728%" y="414.50"></text></g><g><title>wrapper (utils/log_tools.py:38) (6,196 samples, 0.85%)</title><rect x="3.5228%" y="420" width="0.8523%" height="15" fill="rgb(217,162,53)" fg:x="25610" fg:w="6196"/><text x="3.7728%" y="430.50"></text></g><g><title>forward (torch/nn/parallel/distributed.py:1519) (29,832 samples, 4.10%)</title><rect x="0.2783%" y="324" width="4.1036%" height="15" fill="rgb(229,93,14)" fg:x="2023" fg:w="29832"/><text x="0.5283%" y="334.50">forw..</text></g><g><title>_run_ddp_forward (torch/nn/parallel/distributed.py:1355) (29,831 samples, 4.10%)</title><rect x="0.2784%" y="340" width="4.1034%" height="15" fill="rgb(209,67,49)" fg:x="2024" fg:w="29831"/><text x="0.5284%" y="350.50">_run..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (29,831 samples, 4.10%)</title><rect x="0.2784%" y="356" width="4.1034%" height="15" fill="rgb(213,87,29)" fg:x="2024" fg:w="29831"/><text x="0.5284%" y="366.50">_wra..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (29,831 samples, 4.10%)</title><rect x="0.2784%" y="372" width="4.1034%" height="15" fill="rgb(205,151,52)" fg:x="2024" fg:w="29831"/><text x="0.5284%" y="382.50">_cal..</text></g><g><title>forward (lightning/pytorch/overrides/base.py:102) (29,831 samples, 4.10%)</title><rect x="0.2784%" y="388" width="4.1034%" height="15" fill="rgb(253,215,39)" fg:x="2024" fg:w="29831"/><text x="0.5284%" y="398.50">forw..</text></g><g><title>_evaluation_step (lightning/pytorch/loops/evaluation_loop.py:376) (30,109 samples, 4.14%)</title><rect x="0.2403%" y="244" width="4.1417%" height="15" fill="rgb(221,220,41)" fg:x="1747" fg:w="30109"/><text x="0.4903%" y="254.50">_eval..</text></g><g><title>_call_strategy_hook (lightning/pytorch/trainer/call.py:294) (30,109 samples, 4.14%)</title><rect x="0.2403%" y="260" width="4.1417%" height="15" fill="rgb(218,133,21)" fg:x="1747" fg:w="30109"/><text x="0.4903%" y="270.50">_call..</text></g><g><title>validation_step (lightning/pytorch/strategies/ddp.py:338) (30,107 samples, 4.14%)</title><rect x="0.2406%" y="276" width="4.1414%" height="15" fill="rgb(221,193,43)" fg:x="1749" fg:w="30107"/><text x="0.4906%" y="286.50">valid..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (30,107 samples, 4.14%)</title><rect x="0.2406%" y="292" width="4.1414%" height="15" fill="rgb(240,128,52)" fg:x="1749" fg:w="30107"/><text x="0.4906%" y="302.50">_wrap..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (30,106 samples, 4.14%)</title><rect x="0.2407%" y="308" width="4.1413%" height="15" fill="rgb(253,114,12)" fg:x="1750" fg:w="30106"/><text x="0.4907%" y="318.50">_call..</text></g><g><title>run (lightning/pytorch/loops/evaluation_loop.py:115) (30,382 samples, 4.18%)</title><rect x="0.2029%" y="228" width="4.1792%" height="15" fill="rgb(215,223,47)" fg:x="1475" fg:w="30382"/><text x="0.4529%" y="238.50">run (..</text></g><g><title>_sync_ddp (lightning/fabric/utilities/distributed.py:160) (1,234 samples, 0.17%)</title><rect x="4.3821%" y="404" width="0.1697%" height="15" fill="rgb(248,225,23)" fg:x="31857" fg:w="1234"/><text x="4.6321%" y="414.50"></text></g><g><title>wrapper (torch/distributed/c10d_logger.py:47) (1,234 samples, 0.17%)</title><rect x="4.3821%" y="420" width="0.1697%" height="15" fill="rgb(250,108,0)" fg:x="31857" fg:w="1234"/><text x="4.6321%" y="430.50"></text></g><g><title>barrier (torch/distributed/distributed_c10d.py:3703) (1,233 samples, 0.17%)</title><rect x="4.3823%" y="436" width="0.1696%" height="15" fill="rgb(228,208,7)" fg:x="31858" fg:w="1233"/><text x="4.6323%" y="446.50"></text></g><g><title>compute (lightning/pytorch/trainer/connectors/logger_connector/result.py:242) (1,235 samples, 0.17%)</title><rect x="4.3821%" y="356" width="0.1699%" height="15" fill="rgb(244,45,10)" fg:x="31857" fg:w="1235"/><text x="4.6321%" y="366.50"></text></g><g><title>reduce (lightning/pytorch/strategies/ddp.py:324) (1,235 samples, 0.17%)</title><rect x="4.3821%" y="372" width="0.1699%" height="15" fill="rgb(207,125,25)" fg:x="31857" fg:w="1235"/><text x="4.6321%" y="382.50"></text></g><g><title>_sync_ddp_if_available (lightning/fabric/utilities/distributed.py:111) (1,235 samples, 0.17%)</title><rect x="4.3821%" y="388" width="0.1699%" height="15" fill="rgb(210,195,18)" fg:x="31857" fg:w="1235"/><text x="4.6321%" y="398.50"></text></g><g><title>run (lightning/pytorch/loops/evaluation_loop.py:122) (1,247 samples, 0.17%)</title><rect x="4.3821%" y="228" width="0.1715%" height="15" fill="rgb(249,80,12)" fg:x="31857" fg:w="1247"/><text x="4.6321%" y="238.50"></text></g><g><title>on_run_end (lightning/pytorch/loops/evaluation_loop.py:244) (1,247 samples, 0.17%)</title><rect x="4.3821%" y="244" width="0.1715%" height="15" fill="rgb(221,65,9)" fg:x="31857" fg:w="1247"/><text x="4.6321%" y="254.50"></text></g><g><title>_on_evaluation_epoch_end (lightning/pytorch/loops/evaluation_loop.py:328) (1,247 samples, 0.17%)</title><rect x="4.3821%" y="260" width="0.1715%" height="15" fill="rgb(235,49,36)" fg:x="31857" fg:w="1247"/><text x="4.6321%" y="270.50"></text></g><g><title>on_epoch_end (lightning/pytorch/trainer/connectors/logger_connector/logger_connector.py:189) (1,247 samples, 0.17%)</title><rect x="4.3821%" y="276" width="0.1715%" height="15" fill="rgb(225,32,20)" fg:x="31857" fg:w="1247"/><text x="4.6321%" y="286.50"></text></g><g><title>metrics (lightning/pytorch/trainer/connectors/logger_connector/logger_connector.py:230) (1,247 samples, 0.17%)</title><rect x="4.3821%" y="292" width="0.1715%" height="15" fill="rgb(215,141,46)" fg:x="31857" fg:w="1247"/><text x="4.6321%" y="302.50"></text></g><g><title>metrics (lightning/pytorch/trainer/connectors/logger_connector/result.py:475) (1,247 samples, 0.17%)</title><rect x="4.3821%" y="308" width="0.1715%" height="15" fill="rgb(250,160,47)" fg:x="31857" fg:w="1247"/><text x="4.6321%" y="318.50"></text></g><g><title>_get_cache (lightning/pytorch/trainer/connectors/logger_connector/result.py:439) (1,247 samples, 0.17%)</title><rect x="4.3821%" y="324" width="0.1715%" height="15" fill="rgb(216,222,40)" fg:x="31857" fg:w="1247"/><text x="4.6321%" y="334.50"></text></g><g><title>wrapped_func (lightning/pytorch/trainer/connectors/logger_connector/result.py:278) (1,247 samples, 0.17%)</title><rect x="4.3821%" y="340" width="0.1715%" height="15" fill="rgb(234,217,39)" fg:x="31857" fg:w="1247"/><text x="4.6321%" y="350.50"></text></g><g><title>_run_stage (lightning/pytorch/trainer/trainer.py:1021) (31,791 samples, 4.37%)</title><rect x="0.1849%" y="180" width="4.3731%" height="15" fill="rgb(207,178,40)" fg:x="1344" fg:w="31791"/><text x="0.4349%" y="190.50">_run_..</text></g><g><title>_run_sanity_check (lightning/pytorch/trainer/trainer.py:1050) (31,791 samples, 4.37%)</title><rect x="0.1849%" y="196" width="4.3731%" height="15" fill="rgb(221,136,13)" fg:x="1344" fg:w="31791"/><text x="0.4349%" y="206.50">_run_..</text></g><g><title>_decorator (lightning/pytorch/loops/utilities.py:181) (31,791 samples, 4.37%)</title><rect x="0.1849%" y="212" width="4.3731%" height="15" fill="rgb(249,199,10)" fg:x="1344" fg:w="31791"/><text x="0.4349%" y="222.50">_deco..</text></g><g><title>shuffle (random.py:361) (1,284 samples, 0.18%)</title><rect x="4.5982%" y="292" width="0.1766%" height="15" fill="rgb(249,222,13)" fg:x="33428" fg:w="1284"/><text x="4.8482%" y="302.50"></text></g><g><title>train_dataloader (data/module.py:51) (2,988 samples, 0.41%)</title><rect x="4.5883%" y="276" width="0.4110%" height="15" fill="rgb(244,185,38)" fg:x="33356" fg:w="2988"/><text x="4.8383%" y="286.50"></text></g><g><title>shuffle (random.py:362) (1,632 samples, 0.22%)</title><rect x="4.7749%" y="292" width="0.2245%" height="15" fill="rgb(236,202,9)" fg:x="34712" fg:w="1632"/><text x="5.0249%" y="302.50"></text></g><g><title>run (lightning/pytorch/loops/fit_loop.py:194) (3,672 samples, 0.51%)</title><rect x="4.5579%" y="196" width="0.5051%" height="15" fill="rgb(250,229,37)" fg:x="33135" fg:w="3672"/><text x="4.8079%" y="206.50"></text></g><g><title>setup_data (lightning/pytorch/loops/fit_loop.py:222) (3,672 samples, 0.51%)</title><rect x="4.5579%" y="212" width="0.5051%" height="15" fill="rgb(206,174,23)" fg:x="33135" fg:w="3672"/><text x="4.8079%" y="222.50"></text></g><g><title>_request_dataloader (lightning/pytorch/trainer/connectors/data_connector.py:336) (3,672 samples, 0.51%)</title><rect x="4.5579%" y="228" width="0.5051%" height="15" fill="rgb(211,33,43)" fg:x="33135" fg:w="3672"/><text x="4.8079%" y="238.50"></text></g><g><title>dataloader (lightning/pytorch/trainer/connectors/data_connector.py:303) (3,672 samples, 0.51%)</title><rect x="4.5579%" y="244" width="0.5051%" height="15" fill="rgb(245,58,50)" fg:x="33135" fg:w="3672"/><text x="4.8079%" y="254.50"></text></g><g><title>_call_lightning_datamodule_hook (lightning/pytorch/trainer/call.py:166) (3,672 samples, 0.51%)</title><rect x="4.5579%" y="260" width="0.5051%" height="15" fill="rgb(244,68,36)" fg:x="33135" fg:w="3672"/><text x="4.8079%" y="270.50"></text></g><g><title>shuffle (random.py:361) (1,461 samples, 0.20%)</title><rect x="5.1346%" y="308" width="0.2010%" height="15" fill="rgb(232,229,15)" fg:x="37327" fg:w="1461"/><text x="5.3846%" y="318.50"></text></g><g><title>train_dataloader (data/module.py:51) (4,100 samples, 0.56%)</title><rect x="5.1142%" y="292" width="0.5640%" height="15" fill="rgb(254,30,23)" fg:x="37179" fg:w="4100"/><text x="5.3642%" y="302.50"></text></g><g><title>shuffle (random.py:362) (2,491 samples, 0.34%)</title><rect x="5.3355%" y="308" width="0.3427%" height="15" fill="rgb(235,160,14)" fg:x="38788" fg:w="2491"/><text x="5.5855%" y="318.50"></text></g><g><title>get_dataloader (data/loader.py:295) (890 samples, 0.12%)</title><rect x="5.6782%" y="308" width="0.1224%" height="15" fill="rgb(212,155,44)" fg:x="41279" fg:w="890"/><text x="5.9282%" y="318.50"></text></g><g><title>run (lightning/pytorch/loops/fit_loop.py:201) (5,363 samples, 0.74%)</title><rect x="5.0630%" y="196" width="0.7377%" height="15" fill="rgb(226,2,50)" fg:x="36807" fg:w="5363"/><text x="5.3130%" y="206.50"></text></g><g><title>on_advance_start (lightning/pytorch/loops/fit_loop.py:325) (5,363 samples, 0.74%)</title><rect x="5.0630%" y="212" width="0.7377%" height="15" fill="rgb(234,177,6)" fg:x="36807" fg:w="5363"/><text x="5.3130%" y="222.50"></text></g><g><title>setup_data (lightning/pytorch/loops/fit_loop.py:222) (5,363 samples, 0.74%)</title><rect x="5.0630%" y="228" width="0.7377%" height="15" fill="rgb(217,24,9)" fg:x="36807" fg:w="5363"/><text x="5.3130%" y="238.50"></text></g><g><title>_request_dataloader (lightning/pytorch/trainer/connectors/data_connector.py:336) (5,363 samples, 0.74%)</title><rect x="5.0630%" y="244" width="0.7377%" height="15" fill="rgb(220,13,46)" fg:x="36807" fg:w="5363"/><text x="5.3130%" y="254.50"></text></g><g><title>dataloader (lightning/pytorch/trainer/connectors/data_connector.py:303) (5,363 samples, 0.74%)</title><rect x="5.0630%" y="260" width="0.7377%" height="15" fill="rgb(239,221,27)" fg:x="36807" fg:w="5363"/><text x="5.3130%" y="270.50"></text></g><g><title>_call_lightning_datamodule_hook (lightning/pytorch/trainer/call.py:166) (5,363 samples, 0.74%)</title><rect x="5.0630%" y="276" width="0.7377%" height="15" fill="rgb(222,198,25)" fg:x="36807" fg:w="5363"/><text x="5.3130%" y="286.50"></text></g><g><title>train_dataloader (data/module.py:52) (891 samples, 0.12%)</title><rect x="5.6782%" y="292" width="0.1226%" height="15" fill="rgb(211,99,13)" fg:x="41279" fg:w="891"/><text x="5.9282%" y="302.50"></text></g><g><title>run (lightning/pytorch/loops/training_epoch_loop.py:130) (4,288 samples, 0.59%)</title><rect x="5.8007%" y="228" width="0.5898%" height="15" fill="rgb(232,111,31)" fg:x="42170" fg:w="4288"/><text x="6.0507%" y="238.50"></text></g><g><title>on_run_start (lightning/pytorch/loops/training_epoch_loop.py:164) (4,288 samples, 0.59%)</title><rect x="5.8007%" y="244" width="0.5898%" height="15" fill="rgb(245,82,37)" fg:x="42170" fg:w="4288"/><text x="6.0507%" y="254.50"></text></g><g><title>__iter__ (lightning/pytorch/loops/fetchers.py:98) (4,286 samples, 0.59%)</title><rect x="5.8010%" y="260" width="0.5896%" height="15" fill="rgb(227,149,46)" fg:x="42172" fg:w="4286"/><text x="6.0510%" y="270.50"></text></g><g><title>__iter__ (lightning/pytorch/loops/fetchers.py:51) (4,286 samples, 0.59%)</title><rect x="5.8010%" y="276" width="0.5896%" height="15" fill="rgb(218,36,50)" fg:x="42172" fg:w="4286"/><text x="6.0510%" y="286.50"></text></g><g><title>__next__ (lightning/pytorch/utilities/combined_loader.py:285) (979 samples, 0.13%)</title><rect x="6.4305%" y="292" width="0.1347%" height="15" fill="rgb(226,80,48)" fg:x="46748" fg:w="979"/><text x="6.6805%" y="302.50"></text></g><g><title>__next__ (lightning/pytorch/utilities/combined_loader.py:65) (964 samples, 0.13%)</title><rect x="6.4325%" y="308" width="0.1326%" height="15" fill="rgb(238,224,15)" fg:x="46763" fg:w="964"/><text x="6.6825%" y="318.50"></text></g><g><title>__next__ (lightning/pytorch/loops/fetchers.py:58) (996 samples, 0.14%)</title><rect x="6.4297%" y="276" width="0.1370%" height="15" fill="rgb(241,136,10)" fg:x="46742" fg:w="996"/><text x="6.6797%" y="286.50"></text></g><g><title>advance (lightning/pytorch/loops/training_epoch_loop.py:190) (1,017 samples, 0.14%)</title><rect x="6.4279%" y="244" width="0.1399%" height="15" fill="rgb(208,32,45)" fg:x="46729" fg:w="1017"/><text x="6.6779%" y="254.50"></text></g><g><title>__next__ (lightning/pytorch/loops/fetchers.py:120) (1,012 samples, 0.14%)</title><rect x="6.4286%" y="260" width="0.1392%" height="15" fill="rgb(207,135,9)" fg:x="46734" fg:w="1012"/><text x="6.6786%" y="270.50"></text></g><g><title>batch_to (lightning/fabric/utilities/apply_func.py:95) (1,029 samples, 0.14%)</title><rect x="6.7016%" y="404" width="0.1415%" height="15" fill="rgb(206,86,44)" fg:x="48719" fg:w="1029"/><text x="6.9516%" y="414.50"></text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:51) (1,153 samples, 0.16%)</title><rect x="6.6847%" y="388" width="0.1586%" height="15" fill="rgb(245,177,15)" fg:x="48596" fg:w="1153"/><text x="6.9347%" y="398.50"></text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:50) (1,473 samples, 0.20%)</title><rect x="7.2389%" y="404" width="0.2026%" height="15" fill="rgb(206,64,50)" fg:x="52625" fg:w="1473"/><text x="7.4889%" y="414.50"></text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:56) (3,749 samples, 0.52%)</title><rect x="7.4699%" y="404" width="0.5157%" height="15" fill="rgb(234,36,40)" fg:x="54304" fg:w="3749"/><text x="7.7199%" y="414.50"></text></g><g><title>__instancecheck__ (typing.py:720) (2,717 samples, 0.37%)</title><rect x="7.6118%" y="420" width="0.3737%" height="15" fill="rgb(213,64,8)" fg:x="55336" fg:w="2717"/><text x="7.8618%" y="430.50"></text></g><g><title>__subclasscheck__ (typing.py:852) (1,323 samples, 0.18%)</title><rect x="7.8036%" y="436" width="0.1820%" height="15" fill="rgb(210,75,36)" fg:x="56730" fg:w="1323"/><text x="8.0536%" y="446.50"></text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:76) (4,498 samples, 0.62%)</title><rect x="8.0662%" y="404" width="0.6187%" height="15" fill="rgb(229,88,21)" fg:x="58639" fg:w="4498"/><text x="8.3162%" y="414.50"></text></g><g><title>__instancecheck__ (typing.py:720) (3,324 samples, 0.46%)</title><rect x="8.2277%" y="420" width="0.4572%" height="15" fill="rgb(252,204,47)" fg:x="59813" fg:w="3324"/><text x="8.4777%" y="430.50"></text></g><g><title>__subclasscheck__ (typing.py:852) (2,074 samples, 0.29%)</title><rect x="8.3996%" y="436" width="0.2853%" height="15" fill="rgb(208,77,27)" fg:x="61063" fg:w="2074"/><text x="8.6496%" y="446.50"></text></g><g><title>__subclasscheck__ (abc.py:123) (1,321 samples, 0.18%)</title><rect x="8.5032%" y="452" width="0.1817%" height="15" fill="rgb(221,76,26)" fg:x="61816" fg:w="1321"/><text x="8.7532%" y="462.50"></text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:80) (15,342 samples, 2.11%)</title><rect x="6.9488%" y="388" width="2.1104%" height="15" fill="rgb(225,139,18)" fg:x="50516" fg:w="15342"/><text x="7.1988%" y="398.50">a..</text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:94) (2,593 samples, 0.36%)</title><rect x="8.7025%" y="404" width="0.3567%" height="15" fill="rgb(230,137,11)" fg:x="63265" fg:w="2593"/><text x="8.9525%" y="414.50"></text></g><g><title>is_dataclass_instance (lightning_utilities/core/apply_func.py:20) (2,279 samples, 0.31%)</title><rect x="8.7457%" y="420" width="0.3135%" height="15" fill="rgb(212,28,1)" fg:x="63579" fg:w="2279"/><text x="8.9957%" y="430.50"></text></g><g><title>is_dataclass (dataclasses.py:1051) (1,238 samples, 0.17%)</title><rect x="8.8889%" y="436" width="0.1703%" height="15" fill="rgb(248,164,17)" fg:x="64620" fg:w="1238"/><text x="9.1389%" y="446.50"></text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:80) (17,889 samples, 2.46%)</title><rect x="6.6740%" y="372" width="2.4607%" height="15" fill="rgb(222,171,42)" fg:x="48518" fg:w="17889"/><text x="6.9240%" y="382.50">ap..</text></g><g><title>move_data_to_device (lightning/fabric/utilities/apply_func.py:101) (17,959 samples, 2.47%)</title><rect x="6.6674%" y="356" width="2.4704%" height="15" fill="rgb(243,84,45)" fg:x="48470" fg:w="17959"/><text x="6.9174%" y="366.50">mo..</text></g><g><title>_call_lightning_module_hook (lightning/pytorch/trainer/call.py:146) (17,983 samples, 2.47%)</title><rect x="6.6646%" y="324" width="2.4737%" height="15" fill="rgb(252,49,23)" fg:x="48450" fg:w="17983"/><text x="6.9146%" y="334.50">_c..</text></g><g><title>transfer_batch_to_device (lightning/pytorch/core/hooks.py:571) (17,970 samples, 2.47%)</title><rect x="6.6664%" y="340" width="2.4719%" height="15" fill="rgb(215,19,7)" fg:x="48463" fg:w="17970"/><text x="6.9164%" y="350.50">tr..</text></g><g><title>_apply_batch_transfer_handler (lightning/pytorch/core/module.py:326) (18,053 samples, 2.48%)</title><rect x="6.6586%" y="292" width="2.4833%" height="15" fill="rgb(238,81,41)" fg:x="48406" fg:w="18053"/><text x="6.9086%" y="302.50">_a..</text></g><g><title>_call_batch_hook (lightning/pytorch/core/module.py:315) (18,025 samples, 2.48%)</title><rect x="6.6624%" y="308" width="2.4795%" height="15" fill="rgb(210,199,37)" fg:x="48434" fg:w="18025"/><text x="6.9124%" y="318.50">_c..</text></g><g><title>_call_strategy_hook (lightning/pytorch/trainer/call.py:294) (18,296 samples, 2.52%)</title><rect x="6.6342%" y="260" width="2.5167%" height="15" fill="rgb(244,192,49)" fg:x="48229" fg:w="18296"/><text x="6.8842%" y="270.50">_c..</text></g><g><title>batch_to_device (lightning/pytorch/strategies/strategy.py:270) (18,122 samples, 2.49%)</title><rect x="6.6581%" y="276" width="2.4928%" height="15" fill="rgb(226,211,11)" fg:x="48403" fg:w="18122"/><text x="6.9081%" y="286.50">ba..</text></g><g><title>advance (lightning/pytorch/loops/training_epoch_loop.py:195) (18,702 samples, 2.57%)</title><rect x="6.5795%" y="244" width="2.5726%" height="15" fill="rgb(236,162,54)" fg:x="47831" fg:w="18702"/><text x="6.8295%" y="254.50">ad..</text></g><g><title>to_map (torch/distributed/utils.py:127) (14,956 samples, 2.06%)</title><rect x="9.5218%" y="676" width="2.0573%" height="15" fill="rgb(220,229,9)" fg:x="69221" fg:w="14956"/><text x="9.7718%" y="686.50">t..</text></g><g><title>to_map (torch/distributed/utils.py:93) (898 samples, 0.12%)</title><rect x="11.4556%" y="692" width="0.1235%" height="15" fill="rgb(250,87,22)" fg:x="83279" fg:w="898"/><text x="11.7056%" y="702.50"></text></g><g><title>to_map (torch/distributed/utils.py:123) (15,036 samples, 2.07%)</title><rect x="9.5168%" y="660" width="2.0683%" height="15" fill="rgb(239,43,17)" fg:x="69185" fg:w="15036"/><text x="9.7668%" y="670.50">t..</text></g><g><title>to_map (torch/distributed/utils.py:125) (15,044 samples, 2.07%)</title><rect x="9.5161%" y="644" width="2.0694%" height="15" fill="rgb(231,177,25)" fg:x="69180" fg:w="15044"/><text x="9.7661%" y="654.50">t..</text></g><g><title>_recursive_to (torch/distributed/utils.py:134) (15,050 samples, 2.07%)</title><rect x="9.5156%" y="628" width="2.0702%" height="15" fill="rgb(219,179,1)" fg:x="69176" fg:w="15050"/><text x="9.7656%" y="638.50">_..</text></g><g><title>_to_kwargs (torch/distributed/utils.py:246) (15,055 samples, 2.07%)</title><rect x="9.5153%" y="612" width="2.0709%" height="15" fill="rgb(238,219,53)" fg:x="69174" fg:w="15055"/><text x="9.7653%" y="622.50">_..</text></g><g><title>_pre_forward (torch/nn/parallel/distributed.py:1423) (15,069 samples, 2.07%)</title><rect x="9.5150%" y="596" width="2.0728%" height="15" fill="rgb(232,167,36)" fg:x="69172" fg:w="15069"/><text x="9.7650%" y="606.50">_..</text></g><g><title>forward (torch/nn/parallel/distributed.py:1515) (15,168 samples, 2.09%)</title><rect x="9.5042%" y="580" width="2.0865%" height="15" fill="rgb(244,19,51)" fg:x="69093" fg:w="15168"/><text x="9.7542%" y="590.50">f..</text></g><g><title>&lt;listcomp&gt; (modeling/encoders.py:71) (737 samples, 0.10%)</title><rect x="11.6789%" y="900" width="0.1014%" height="15" fill="rgb(224,6,22)" fg:x="84903" fg:w="737"/><text x="11.9289%" y="910.50"></text></g><g><title>forward (modeling/encoders.py:70) (882 samples, 0.12%)</title><rect x="11.6739%" y="884" width="0.1213%" height="15" fill="rgb(224,145,5)" fg:x="84866" fg:w="882"/><text x="11.9239%" y="894.50"></text></g><g><title>forward (modeling/encoders.py:82) (1,309 samples, 0.18%)</title><rect x="11.8180%" y="884" width="0.1801%" height="15" fill="rgb(234,130,49)" fg:x="85914" fg:w="1309"/><text x="12.0680%" y="894.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (1,293 samples, 0.18%)</title><rect x="11.8202%" y="900" width="0.1779%" height="15" fill="rgb(254,6,2)" fg:x="85930" fg:w="1293"/><text x="12.0702%" y="910.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (1,273 samples, 0.18%)</title><rect x="11.8230%" y="916" width="0.1751%" height="15" fill="rgb(208,96,46)" fg:x="85950" fg:w="1273"/><text x="12.0730%" y="926.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (1,268 samples, 0.17%)</title><rect x="11.8237%" y="932" width="0.1744%" height="15" fill="rgb(239,3,39)" fg:x="85955" fg:w="1268"/><text x="12.0737%" y="942.50"></text></g><g><title>forward (modeling/polyline_graph.py:104) (3,267 samples, 0.45%)</title><rect x="11.6664%" y="836" width="0.4494%" height="15" fill="rgb(233,210,1)" fg:x="84812" fg:w="3267"/><text x="11.9164%" y="846.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (3,260 samples, 0.45%)</title><rect x="11.6674%" y="852" width="0.4484%" height="15" fill="rgb(244,137,37)" fg:x="84819" fg:w="3260"/><text x="11.9174%" y="862.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (3,245 samples, 0.45%)</title><rect x="11.6695%" y="868" width="0.4464%" height="15" fill="rgb(240,136,2)" fg:x="84834" fg:w="3245"/><text x="11.9195%" y="878.50"></text></g><g><title>forward (modeling/vectornet.py:114) (3,625 samples, 0.50%)</title><rect x="11.6558%" y="788" width="0.4986%" height="15" fill="rgb(239,18,37)" fg:x="84735" fg:w="3625"/><text x="11.9058%" y="798.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (3,620 samples, 0.50%)</title><rect x="11.6565%" y="804" width="0.4980%" height="15" fill="rgb(218,185,22)" fg:x="84740" fg:w="3620"/><text x="11.9065%" y="814.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (3,610 samples, 0.50%)</title><rect x="11.6579%" y="820" width="0.4966%" height="15" fill="rgb(225,218,4)" fg:x="84750" fg:w="3610"/><text x="11.9079%" y="830.50"></text></g><g><title>forward (modeling/encoders.py:70) (732 samples, 0.10%)</title><rect x="12.1664%" y="884" width="0.1007%" height="15" fill="rgb(230,182,32)" fg:x="88447" fg:w="732"/><text x="12.4164%" y="894.50"></text></g><g><title>forward (modeling/encoders.py:82) (1,176 samples, 0.16%)</title><rect x="12.2874%" y="884" width="0.1618%" height="15" fill="rgb(242,56,43)" fg:x="89326" fg:w="1176"/><text x="12.5374%" y="894.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (1,165 samples, 0.16%)</title><rect x="12.2889%" y="900" width="0.1603%" height="15" fill="rgb(233,99,24)" fg:x="89337" fg:w="1165"/><text x="12.5389%" y="910.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (1,154 samples, 0.16%)</title><rect x="12.2904%" y="916" width="0.1587%" height="15" fill="rgb(234,209,42)" fg:x="89348" fg:w="1154"/><text x="12.5404%" y="926.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (1,152 samples, 0.16%)</title><rect x="12.2907%" y="932" width="0.1585%" height="15" fill="rgb(227,7,12)" fg:x="89350" fg:w="1152"/><text x="12.5407%" y="942.50"></text></g><g><title>forward (modeling/polyline_graph.py:104) (2,805 samples, 0.39%)</title><rect x="12.1614%" y="836" width="0.3858%" height="15" fill="rgb(245,203,43)" fg:x="88410" fg:w="2805"/><text x="12.4114%" y="846.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (2,800 samples, 0.39%)</title><rect x="12.1620%" y="852" width="0.3852%" height="15" fill="rgb(238,205,33)" fg:x="88415" fg:w="2800"/><text x="12.4120%" y="862.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (2,788 samples, 0.38%)</title><rect x="12.1637%" y="868" width="0.3835%" height="15" fill="rgb(231,56,7)" fg:x="88427" fg:w="2788"/><text x="12.4137%" y="878.50"></text></g><g><title>forward (modeling/vectornet.py:117) (3,077 samples, 0.42%)</title><rect x="12.1545%" y="788" width="0.4233%" height="15" fill="rgb(244,186,29)" fg:x="88360" fg:w="3077"/><text x="12.4045%" y="798.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (3,063 samples, 0.42%)</title><rect x="12.1564%" y="804" width="0.4213%" height="15" fill="rgb(234,111,31)" fg:x="88374" fg:w="3063"/><text x="12.4064%" y="814.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (3,054 samples, 0.42%)</title><rect x="12.1576%" y="820" width="0.4201%" height="15" fill="rgb(241,149,10)" fg:x="88383" fg:w="3054"/><text x="12.4076%" y="830.50"></text></g><g><title>maybe_as_int (torch/fx/experimental/symbolic_shapes.py:781) (878 samples, 0.12%)</title><rect x="12.7175%" y="1668" width="0.1208%" height="15" fill="rgb(249,206,44)" fg:x="92453" fg:w="878"/><text x="12.9675%" y="1678.50"></text></g><g><title>free_symbols (sympy/core/basic.py:544) (878 samples, 0.12%)</title><rect x="12.7175%" y="1684" width="0.1208%" height="15" fill="rgb(251,153,30)" fg:x="92453" fg:w="878"/><text x="12.9675%" y="1694.50"></text></g><g><title>&lt;genexpr&gt; (sympy/core/basic.py:544) (878 samples, 0.12%)</title><rect x="12.7175%" y="1700" width="0.1208%" height="15" fill="rgb(239,152,38)" fg:x="92453" fg:w="878"/><text x="12.9675%" y="1710.50"></text></g><g><title>free_symbols (sympy/core/basic.py:544) (878 samples, 0.12%)</title><rect x="12.7175%" y="1716" width="0.1208%" height="15" fill="rgb(249,139,47)" fg:x="92453" fg:w="878"/><text x="12.9675%" y="1726.50"></text></g><g><title>functionalized_f_helper (torch/_functorch/aot_autograd.py:1363) (1,217 samples, 0.17%)</title><rect x="12.6991%" y="1604" width="0.1674%" height="15" fill="rgb(244,64,35)" fg:x="92319" fg:w="1217"/><text x="12.9491%" y="1614.50"></text></g><g><title>inner_fn_with_anomaly (torch/_functorch/aot_autograd.py:1334) (1,217 samples, 0.17%)</title><rect x="12.6991%" y="1620" width="0.1674%" height="15" fill="rgb(216,46,15)" fg:x="92319" fg:w="1217"/><text x="12.9491%" y="1630.50"></text></g><g><title>inner_fn (torch/_functorch/aot_autograd.py:1317) (1,101 samples, 0.15%)</title><rect x="12.7150%" y="1636" width="0.1514%" height="15" fill="rgb(250,74,19)" fg:x="92435" fg:w="1101"/><text x="12.9650%" y="1646.50"></text></g><g><title>grad (torch/autograd/__init__.py:394) (1,101 samples, 0.15%)</title><rect x="12.7150%" y="1652" width="0.1514%" height="15" fill="rgb(249,42,33)" fg:x="92435" fg:w="1101"/><text x="12.9650%" y="1662.50"></text></g><g><title>flatten_fn (torch/fx/_symbolic_trace.py:684) (1,221 samples, 0.17%)</title><rect x="12.6986%" y="1556" width="0.1680%" height="15" fill="rgb(242,149,17)" fg:x="92316" fg:w="1221"/><text x="12.9486%" y="1566.50"></text></g><g><title>wrapped (torch/fx/experimental/proxy_tensor.py:485) (1,218 samples, 0.17%)</title><rect x="12.6991%" y="1572" width="0.1675%" height="15" fill="rgb(244,29,21)" fg:x="92319" fg:w="1218"/><text x="12.9491%" y="1582.50"></text></g><g><title>joint_helper (torch/_functorch/aot_autograd.py:1409) (1,218 samples, 0.17%)</title><rect x="12.6991%" y="1588" width="0.1675%" height="15" fill="rgb(220,130,37)" fg:x="92319" fg:w="1218"/><text x="12.9491%" y="1598.50"></text></g><g><title>dispatch_trace (torch/fx/experimental/proxy_tensor.py:468) (1,225 samples, 0.17%)</title><rect x="12.6982%" y="1492" width="0.1685%" height="15" fill="rgb(211,67,2)" fg:x="92313" fg:w="1225"/><text x="12.9482%" y="1502.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,225 samples, 0.17%)</title><rect x="12.6982%" y="1508" width="0.1685%" height="15" fill="rgb(235,68,52)" fg:x="92313" fg:w="1225"/><text x="12.9482%" y="1518.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,225 samples, 0.17%)</title><rect x="12.6982%" y="1524" width="0.1685%" height="15" fill="rgb(246,142,3)" fg:x="92313" fg:w="1225"/><text x="12.9482%" y="1534.50"></text></g><g><title>trace (torch/fx/_symbolic_trace.py:817) (1,222 samples, 0.17%)</title><rect x="12.6986%" y="1540" width="0.1681%" height="15" fill="rgb(241,25,7)" fg:x="92316" fg:w="1222"/><text x="12.9486%" y="1550.50"></text></g><g><title>aot_dispatch_autograd_graph (torch/_functorch/aot_autograd.py:2781) (1,248 samples, 0.17%)</title><rect x="12.6982%" y="1396" width="0.1717%" height="15" fill="rgb(242,119,39)" fg:x="92313" fg:w="1248"/><text x="12.9482%" y="1406.50"></text></g><g><title>create_functionalized_graph (torch/_functorch/aot_autograd.py:1420) (1,248 samples, 0.17%)</title><rect x="12.6982%" y="1412" width="0.1717%" height="15" fill="rgb(241,98,45)" fg:x="92313" fg:w="1248"/><text x="12.9482%" y="1422.50"></text></g><g><title>wrapped (torch/fx/experimental/proxy_tensor.py:809) (1,248 samples, 0.17%)</title><rect x="12.6982%" y="1428" width="0.1717%" height="15" fill="rgb(254,28,30)" fg:x="92313" fg:w="1248"/><text x="12.9482%" y="1438.50"></text></g><g><title>inner (torch/_compile.py:24) (1,248 samples, 0.17%)</title><rect x="12.6982%" y="1444" width="0.1717%" height="15" fill="rgb(241,142,54)" fg:x="92313" fg:w="1248"/><text x="12.9482%" y="1454.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,248 samples, 0.17%)</title><rect x="12.6982%" y="1460" width="0.1717%" height="15" fill="rgb(222,85,15)" fg:x="92313" fg:w="1248"/><text x="12.9482%" y="1470.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,248 samples, 0.17%)</title><rect x="12.6982%" y="1476" width="0.1717%" height="15" fill="rgb(210,85,47)" fg:x="92313" fg:w="1248"/><text x="12.9482%" y="1486.50"></text></g><g><title>aot_dispatch_autograd (torch/_functorch/aot_autograd.py:2804) (1,267 samples, 0.17%)</title><rect x="12.6981%" y="1380" width="0.1743%" height="15" fill="rgb(224,206,25)" fg:x="92312" fg:w="1267"/><text x="12.9481%" y="1390.50"></text></g><g><title>aot_dispatch_autograd (torch/_functorch/aot_autograd.py:2917) (1,089 samples, 0.15%)</title><rect x="12.9158%" y="1380" width="0.1498%" height="15" fill="rgb(243,201,19)" fg:x="93895" fg:w="1089"/><text x="13.1658%" y="1390.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,088 samples, 0.15%)</title><rect x="12.9160%" y="1396" width="0.1497%" height="15" fill="rgb(236,59,4)" fg:x="93896" fg:w="1088"/><text x="13.1660%" y="1406.50"></text></g><g><title>fw_compiler_base (torch/_inductor/compile_fx.py:1092) (1,088 samples, 0.15%)</title><rect x="12.9160%" y="1412" width="0.1497%" height="15" fill="rgb(254,179,45)" fg:x="93896" fg:w="1088"/><text x="13.1660%" y="1422.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_aot.py:80) (1,088 samples, 0.15%)</title><rect x="12.9160%" y="1428" width="0.1497%" height="15" fill="rgb(226,14,10)" fg:x="93896" fg:w="1088"/><text x="13.1660%" y="1438.50"></text></g><g><title>inner (torch/_inductor/debug.py:228) (1,088 samples, 0.15%)</title><rect x="12.9160%" y="1444" width="0.1497%" height="15" fill="rgb(244,27,41)" fg:x="93896" fg:w="1088"/><text x="13.1660%" y="1454.50"></text></g><g><title>inner (contextlib.py:79) (1,088 samples, 0.15%)</title><rect x="12.9160%" y="1460" width="0.1497%" height="15" fill="rgb(235,35,32)" fg:x="93896" fg:w="1088"/><text x="13.1660%" y="1470.50"></text></g><g><title>newFunction (torch/_inductor/compile_fx.py:54) (1,088 samples, 0.15%)</title><rect x="12.9160%" y="1476" width="0.1497%" height="15" fill="rgb(218,68,31)" fg:x="93896" fg:w="1088"/><text x="13.1660%" y="1486.50"></text></g><g><title>compile_fx_inner (torch/_inductor/compile_fx.py:341) (1,088 samples, 0.15%)</title><rect x="12.9160%" y="1492" width="0.1497%" height="15" fill="rgb(207,120,37)" fg:x="93896" fg:w="1088"/><text x="13.1660%" y="1502.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:565) (745 samples, 0.10%)</title><rect x="12.9632%" y="1508" width="0.1025%" height="15" fill="rgb(227,98,0)" fg:x="94239" fg:w="745"/><text x="13.2132%" y="1518.50"></text></g><g><title>compile_to_fn (torch/_inductor/graph.py:970) (745 samples, 0.10%)</title><rect x="12.9632%" y="1524" width="0.1025%" height="15" fill="rgb(207,7,3)" fg:x="94239" fg:w="745"/><text x="13.2132%" y="1534.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (745 samples, 0.10%)</title><rect x="12.9632%" y="1540" width="0.1025%" height="15" fill="rgb(206,98,19)" fg:x="94239" fg:w="745"/><text x="13.2132%" y="1550.50"></text></g><g><title>compile_to_module (torch/_inductor/graph.py:938) (854 samples, 0.12%)</title><rect x="13.1351%" y="1604" width="0.1175%" height="15" fill="rgb(217,5,26)" fg:x="95489" fg:w="854"/><text x="13.3851%" y="1614.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,104 samples, 0.15%)</title><rect x="13.1351%" y="1588" width="0.1519%" height="15" fill="rgb(235,190,38)" fg:x="95489" fg:w="1104"/><text x="13.3851%" y="1598.50"></text></g><g><title>run_node (torch/_dynamo/backends/distributed.py:417) (4,377 samples, 0.60%)</title><rect x="12.6850%" y="1204" width="0.6021%" height="15" fill="rgb(247,86,24)" fg:x="92217" fg:w="4377"/><text x="12.9350%" y="1214.50"></text></g><g><title>compile_submod (torch/_dynamo/backends/distributed.py:361) (4,376 samples, 0.60%)</title><rect x="12.6852%" y="1220" width="0.6019%" height="15" fill="rgb(205,101,16)" fg:x="92218" fg:w="4376"/><text x="12.9352%" y="1230.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_dynamo.py:117) (4,376 samples, 0.60%)</title><rect x="12.6852%" y="1236" width="0.6019%" height="15" fill="rgb(246,168,33)" fg:x="92218" fg:w="4376"/><text x="12.9352%" y="1246.50"></text></g><g><title>__call__ (torch/__init__.py:1568) (4,376 samples, 0.60%)</title><rect x="12.6852%" y="1252" width="0.6019%" height="15" fill="rgb(231,114,1)" fg:x="92218" fg:w="4376"/><text x="12.9352%" y="1262.50"></text></g><g><title>compile_fx (torch/_inductor/compile_fx.py:1150) (4,370 samples, 0.60%)</title><rect x="12.6860%" y="1268" width="0.6011%" height="15" fill="rgb(207,184,53)" fg:x="92224" fg:w="4370"/><text x="12.9360%" y="1278.50"></text></g><g><title>compiler_fn (torch/_dynamo/backends/common.py:55) (4,370 samples, 0.60%)</title><rect x="12.6860%" y="1284" width="0.6011%" height="15" fill="rgb(224,95,51)" fg:x="92224" fg:w="4370"/><text x="12.9360%" y="1294.50"></text></g><g><title>aot_module_simplified (torch/_functorch/aot_autograd.py:3891) (4,370 samples, 0.60%)</title><rect x="12.6860%" y="1300" width="0.6011%" height="15" fill="rgb(212,188,45)" fg:x="92224" fg:w="4370"/><text x="12.9360%" y="1310.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (4,370 samples, 0.60%)</title><rect x="12.6860%" y="1316" width="0.6011%" height="15" fill="rgb(223,154,38)" fg:x="92224" fg:w="4370"/><text x="12.9360%" y="1326.50"></text></g><g><title>create_aot_dispatcher_function (torch/_functorch/aot_autograd.py:3429) (4,282 samples, 0.59%)</title><rect x="12.6981%" y="1332" width="0.5890%" height="15" fill="rgb(251,22,52)" fg:x="92312" fg:w="4282"/><text x="12.9481%" y="1342.50"></text></g><g><title>aot_wrapper_dedupe (torch/_functorch/aot_autograd.py:2212) (4,282 samples, 0.59%)</title><rect x="12.6981%" y="1348" width="0.5890%" height="15" fill="rgb(229,209,22)" fg:x="92312" fg:w="4282"/><text x="12.9481%" y="1358.50"></text></g><g><title>aot_wrapper_synthetic_base (torch/_functorch/aot_autograd.py:2392) (4,282 samples, 0.59%)</title><rect x="12.6981%" y="1364" width="0.5890%" height="15" fill="rgb(234,138,34)" fg:x="92312" fg:w="4282"/><text x="12.9481%" y="1374.50"></text></g><g><title>aot_dispatch_autograd (torch/_functorch/aot_autograd.py:2977) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1380" width="0.2215%" height="15" fill="rgb(212,95,11)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1390.50"></text></g><g><title>_wrapped_bw_compiler (torch/_dynamo/backends/common.py:33) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1396" width="0.2215%" height="15" fill="rgb(240,179,47)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1406.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1412" width="0.2215%" height="15" fill="rgb(240,163,11)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1422.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1428" width="0.2215%" height="15" fill="rgb(236,37,12)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1438.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1444" width="0.2215%" height="15" fill="rgb(232,164,16)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1454.50"></text></g><g><title>bw_compiler (torch/_inductor/compile_fx.py:1127) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1460" width="0.2215%" height="15" fill="rgb(244,205,15)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1470.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_aot.py:80) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1476" width="0.2215%" height="15" fill="rgb(223,117,47)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1486.50"></text></g><g><title>inner (torch/_inductor/debug.py:228) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1492" width="0.2215%" height="15" fill="rgb(244,107,35)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1502.50"></text></g><g><title>inner (contextlib.py:79) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1508" width="0.2215%" height="15" fill="rgb(205,140,8)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1518.50"></text></g><g><title>newFunction (torch/_inductor/compile_fx.py:54) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1524" width="0.2215%" height="15" fill="rgb(228,84,46)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1534.50"></text></g><g><title>compile_fx_inner (torch/_inductor/compile_fx.py:341) (1,610 samples, 0.22%)</title><rect x="13.0656%" y="1540" width="0.2215%" height="15" fill="rgb(254,188,9)" fg:x="94984" fg:w="1610"/><text x="13.3156%" y="1550.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:565) (1,105 samples, 0.15%)</title><rect x="13.1351%" y="1556" width="0.1520%" height="15" fill="rgb(206,112,54)" fg:x="95489" fg:w="1105"/><text x="13.3851%" y="1566.50"></text></g><g><title>compile_to_fn (torch/_inductor/graph.py:970) (1,105 samples, 0.15%)</title><rect x="13.1351%" y="1572" width="0.1520%" height="15" fill="rgb(216,84,49)" fg:x="95489" fg:w="1105"/><text x="13.3851%" y="1582.50"></text></g><g><title>RETURN_VALUE (torch/_dynamo/symbolic_convert.py:2157) (4,401 samples, 0.61%)</title><rect x="12.6826%" y="1076" width="0.6054%" height="15" fill="rgb(214,194,35)" fg:x="92199" fg:w="4401"/><text x="12.9326%" y="1086.50"></text></g><g><title>compile_subgraph (torch/_dynamo/output_graph.py:857) (4,400 samples, 0.61%)</title><rect x="12.6827%" y="1092" width="0.6052%" height="15" fill="rgb(249,28,3)" fg:x="92200" fg:w="4400"/><text x="12.9327%" y="1102.50"></text></g><g><title>inner (contextlib.py:79) (4,400 samples, 0.61%)</title><rect x="12.6827%" y="1108" width="0.6052%" height="15" fill="rgb(222,56,52)" fg:x="92200" fg:w="4400"/><text x="12.9327%" y="1118.50"></text></g><g><title>compile_and_call_fx_graph (torch/_dynamo/output_graph.py:957) (4,400 samples, 0.61%)</title><rect x="12.6827%" y="1124" width="0.6052%" height="15" fill="rgb(245,217,50)" fg:x="92200" fg:w="4400"/><text x="12.9327%" y="1134.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (4,400 samples, 0.61%)</title><rect x="12.6827%" y="1140" width="0.6052%" height="15" fill="rgb(213,201,24)" fg:x="92200" fg:w="4400"/><text x="12.9327%" y="1150.50"></text></g><g><title>call_user_compiler (torch/_dynamo/output_graph.py:1009) (4,400 samples, 0.61%)</title><rect x="12.6827%" y="1156" width="0.6052%" height="15" fill="rgb(248,116,28)" fg:x="92200" fg:w="4400"/><text x="12.9327%" y="1166.50"></text></g><g><title>compile_fn (torch/_dynamo/backends/distributed.py:436) (4,398 samples, 0.60%)</title><rect x="12.6830%" y="1172" width="0.6050%" height="15" fill="rgb(219,72,43)" fg:x="92202" fg:w="4398"/><text x="12.9330%" y="1182.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (4,398 samples, 0.60%)</title><rect x="12.6830%" y="1188" width="0.6050%" height="15" fill="rgb(209,138,14)" fg:x="92202" fg:w="4398"/><text x="12.9330%" y="1198.50"></text></g><g><title>_convert_frame (torch/_dynamo/convert_frame.py:641) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="900" width="0.6227%" height="15" fill="rgb(222,18,33)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="910.50"></text></g><g><title>_fn (torch/_dynamo/convert_frame.py:133) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="916" width="0.6227%" height="15" fill="rgb(213,199,7)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="926.50"></text></g><g><title>_convert_frame_assert (torch/_dynamo/convert_frame.py:389) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="932" width="0.6227%" height="15" fill="rgb(250,110,10)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="942.50"></text></g><g><title>_compile (torch/_dynamo/convert_frame.py:569) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="948" width="0.6227%" height="15" fill="rgb(248,123,6)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="958.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="964" width="0.6227%" height="15" fill="rgb(206,91,31)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="974.50"></text></g><g><title>compile_inner (torch/_dynamo/convert_frame.py:491) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="980" width="0.6227%" height="15" fill="rgb(211,154,13)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="990.50"></text></g><g><title>transform_code_object (torch/_dynamo/bytecode_transformation.py:1028) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="996" width="0.6227%" height="15" fill="rgb(225,148,7)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="1006.50"></text></g><g><title>transform (torch/_dynamo/convert_frame.py:458) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="1012" width="0.6227%" height="15" fill="rgb(220,160,43)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="1022.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:2069) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="1028" width="0.6227%" height="15" fill="rgb(213,52,39)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="1038.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:719) (4,527 samples, 0.62%)</title><rect x="12.6821%" y="1044" width="0.6227%" height="15" fill="rgb(243,137,7)" fg:x="92196" fg:w="4527"/><text x="12.9321%" y="1054.50"></text></g><g><title>step (torch/_dynamo/symbolic_convert.py:683) (4,525 samples, 0.62%)</title><rect x="12.6824%" y="1060" width="0.6224%" height="15" fill="rgb(230,79,13)" fg:x="92198" fg:w="4525"/><text x="12.9324%" y="1070.50"></text></g><g><title>catch_errors (torch/_dynamo/eval_frame.py:487) (4,528 samples, 0.62%)</title><rect x="12.6821%" y="884" width="0.6229%" height="15" fill="rgb(247,105,23)" fg:x="92196" fg:w="4528"/><text x="12.9321%" y="894.50"></text></g><g><title>_in_projection_packed (torch/nn/functional.py:4824) (2,074 samples, 0.29%)</title><rect x="13.4430%" y="964" width="0.2853%" height="15" fill="rgb(223,179,41)" fg:x="97727" fg:w="2074"/><text x="13.6930%" y="974.50"></text></g><g><title>_in_projection_packed (torch/nn/functional.py:4826) (819 samples, 0.11%)</title><rect x="13.7283%" y="964" width="0.1127%" height="15" fill="rgb(218,9,34)" fg:x="99801" fg:w="819"/><text x="13.9783%" y="974.50"></text></g><g><title>multi_head_attention_forward (torch/nn/functional.py:5300) (3,128 samples, 0.43%)</title><rect x="13.4391%" y="948" width="0.4303%" height="15" fill="rgb(222,106,8)" fg:x="97699" fg:w="3128"/><text x="13.6891%" y="958.50"></text></g><g><title>multi_head_attention_forward (torch/nn/functional.py:5403) (1,948 samples, 0.27%)</title><rect x="14.0126%" y="948" width="0.2680%" height="15" fill="rgb(211,220,0)" fg:x="101868" fg:w="1948"/><text x="14.2626%" y="958.50"></text></g><g><title>multi_head_attention_forward (torch/nn/functional.py:5410) (1,608 samples, 0.22%)</title><rect x="14.3925%" y="948" width="0.2212%" height="15" fill="rgb(229,52,16)" fg:x="104630" fg:w="1608"/><text x="14.6425%" y="958.50"></text></g><g><title>multi_head_attention_forward (torch/nn/functional.py:5413) (2,003 samples, 0.28%)</title><rect x="14.6746%" y="948" width="0.2755%" height="15" fill="rgb(212,155,18)" fg:x="106681" fg:w="2003"/><text x="14.9246%" y="958.50"></text></g><g><title>forward (torch/nn/modules/activation.py:1241) (11,677 samples, 1.61%)</title><rect x="13.4128%" y="932" width="1.6062%" height="15" fill="rgb(242,21,14)" fg:x="97508" fg:w="11677"/><text x="13.6628%" y="942.50"></text></g><g><title>forward (core/layers.py:170) (12,548 samples, 1.73%)</title><rect x="13.3050%" y="884" width="1.7261%" height="15" fill="rgb(222,19,48)" fg:x="96724" fg:w="12548"/><text x="13.5550%" y="894.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (12,495 samples, 1.72%)</title><rect x="13.3123%" y="900" width="1.7188%" height="15" fill="rgb(232,45,27)" fg:x="96777" fg:w="12495"/><text x="13.5623%" y="910.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (12,460 samples, 1.71%)</title><rect x="13.3171%" y="916" width="1.7140%" height="15" fill="rgb(249,103,42)" fg:x="96812" fg:w="12460"/><text x="13.5671%" y="926.50"></text></g><g><title>forward (core/layers.py:175) (824 samples, 0.11%)</title><rect x="15.0311%" y="884" width="0.1133%" height="15" fill="rgb(246,81,33)" fg:x="109272" fg:w="824"/><text x="15.2811%" y="894.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (4,533 samples, 0.62%)</title><rect x="15.2646%" y="900" width="0.6235%" height="15" fill="rgb(252,33,42)" fg:x="110970" fg:w="4533"/><text x="15.5146%" y="910.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (4,435 samples, 0.61%)</title><rect x="15.2781%" y="916" width="0.6101%" height="15" fill="rgb(209,212,41)" fg:x="111068" fg:w="4435"/><text x="15.5281%" y="926.50"></text></g><g><title>forward (torch/nn/modules/linear.py:114) (3,988 samples, 0.55%)</title><rect x="15.3396%" y="932" width="0.5486%" height="15" fill="rgb(207,154,6)" fg:x="111515" fg:w="3988"/><text x="15.5896%" y="942.50"></text></g><g><title>forward (core/layers.py:177) (4,940 samples, 0.68%)</title><rect x="15.2386%" y="884" width="0.6795%" height="15" fill="rgb(223,64,47)" fg:x="110781" fg:w="4940"/><text x="15.4886%" y="894.50"></text></g><g><title>forward (core/layers.py:178) (738 samples, 0.10%)</title><rect x="15.9182%" y="884" width="0.1015%" height="15" fill="rgb(211,161,38)" fg:x="115721" fg:w="738"/><text x="16.1682%" y="894.50"></text></g><g><title>forward (modeling/global_graph.py:894) (25,276 samples, 3.48%)</title><rect x="12.6407%" y="836" width="3.4769%" height="15" fill="rgb(219,138,40)" fg:x="91895" fg:w="25276"/><text x="12.8907%" y="846.50">for..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (25,090 samples, 3.45%)</title><rect x="12.6663%" y="852" width="3.4513%" height="15" fill="rgb(241,228,46)" fg:x="92081" fg:w="25090"/><text x="12.9163%" y="862.50">_wr..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (25,024 samples, 3.44%)</title><rect x="12.6754%" y="868" width="3.4422%" height="15" fill="rgb(223,209,38)" fg:x="92147" fg:w="25024"/><text x="12.9254%" y="878.50">_ca..</text></g><g><title>forward (modeling/vectornet.py:137) (26,596 samples, 3.66%)</title><rect x="12.5792%" y="788" width="3.6584%" height="15" fill="rgb(236,164,45)" fg:x="91448" fg:w="26596"/><text x="12.8292%" y="798.50">forw..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (26,583 samples, 3.66%)</title><rect x="12.5810%" y="804" width="3.6567%" height="15" fill="rgb(231,15,5)" fg:x="91461" fg:w="26583"/><text x="12.8310%" y="814.50">_wra..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (26,578 samples, 3.66%)</title><rect x="12.5817%" y="820" width="3.6560%" height="15" fill="rgb(252,35,15)" fg:x="91466" fg:w="26578"/><text x="12.8317%" y="830.50">_cal..</text></g><g><title>forward (modeling/vectornet.py:216) (33,332 samples, 4.59%)</title><rect x="11.6534%" y="772" width="4.5850%" height="15" fill="rgb(248,181,18)" fg:x="84717" fg:w="33332"/><text x="11.9034%" y="782.50">forwa..</text></g><g><title>forward (modeling/vectornet.py:221) (45,721 samples, 6.29%)</title><rect x="16.2384%" y="772" width="6.2892%" height="15" fill="rgb(233,39,42)" fg:x="118049" fg:w="45721"/><text x="16.4884%" y="782.50">forward ..</text></g><g><title>call_function (torch/fx/interpreter.py:267) (817 samples, 0.11%)</title><rect x="22.6730%" y="1604" width="0.1124%" height="15" fill="rgb(238,110,33)" fg:x="164827" fg:w="817"/><text x="22.9230%" y="1614.50"></text></g><g><title>wrapper (torch/utils/_stats.py:20) (785 samples, 0.11%)</title><rect x="22.6774%" y="1620" width="0.1080%" height="15" fill="rgb(233,195,10)" fg:x="164859" fg:w="785"/><text x="22.9274%" y="1630.50"></text></g><g><title>__torch_dispatch__ (torch/fx/experimental/proxy_tensor.py:555) (784 samples, 0.11%)</title><rect x="22.6775%" y="1636" width="0.1078%" height="15" fill="rgb(254,105,3)" fg:x="164860" fg:w="784"/><text x="22.9275%" y="1646.50"></text></g><g><title>inner_torch_dispatch (torch/fx/experimental/proxy_tensor.py:580) (784 samples, 0.11%)</title><rect x="22.6775%" y="1652" width="0.1078%" height="15" fill="rgb(221,225,9)" fg:x="164860" fg:w="784"/><text x="22.9275%" y="1662.50"></text></g><g><title>inner_fn (torch/_functorch/aot_autograd.py:1271) (1,108 samples, 0.15%)</title><rect x="22.6720%" y="1524" width="0.1524%" height="15" fill="rgb(224,227,45)" fg:x="164820" fg:w="1108"/><text x="22.9220%" y="1534.50"></text></g><g><title>inner_fn (torch/_functorch/aot_autograd.py:1201) (1,108 samples, 0.15%)</title><rect x="22.6720%" y="1540" width="0.1524%" height="15" fill="rgb(229,198,43)" fg:x="164820" fg:w="1108"/><text x="22.9220%" y="1550.50"></text></g><g><title>functional_call (torch/_functorch/aot_autograd.py:3496) (1,108 samples, 0.15%)</title><rect x="22.6720%" y="1556" width="0.1524%" height="15" fill="rgb(206,209,35)" fg:x="164820" fg:w="1108"/><text x="22.9220%" y="1566.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (1,106 samples, 0.15%)</title><rect x="22.6723%" y="1572" width="0.1521%" height="15" fill="rgb(245,195,53)" fg:x="164822" fg:w="1106"/><text x="22.9223%" y="1582.50"></text></g><g><title>run_node (torch/fx/interpreter.py:195) (1,101 samples, 0.15%)</title><rect x="22.6730%" y="1588" width="0.1514%" height="15" fill="rgb(240,92,26)" fg:x="164827" fg:w="1101"/><text x="22.9230%" y="1598.50"></text></g><g><title>dispatch_trace (torch/fx/experimental/proxy_tensor.py:468) (1,900 samples, 0.26%)</title><rect x="22.6616%" y="1380" width="0.2614%" height="15" fill="rgb(207,40,23)" fg:x="164744" fg:w="1900"/><text x="22.9116%" y="1390.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,900 samples, 0.26%)</title><rect x="22.6616%" y="1396" width="0.2614%" height="15" fill="rgb(223,111,35)" fg:x="164744" fg:w="1900"/><text x="22.9116%" y="1406.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,900 samples, 0.26%)</title><rect x="22.6616%" y="1412" width="0.2614%" height="15" fill="rgb(229,147,28)" fg:x="164744" fg:w="1900"/><text x="22.9116%" y="1422.50"></text></g><g><title>trace (torch/fx/_symbolic_trace.py:817) (1,897 samples, 0.26%)</title><rect x="22.6620%" y="1428" width="0.2609%" height="15" fill="rgb(211,29,28)" fg:x="164747" fg:w="1897"/><text x="22.9120%" y="1438.50"></text></g><g><title>flatten_fn (torch/fx/_symbolic_trace.py:684) (1,897 samples, 0.26%)</title><rect x="22.6620%" y="1444" width="0.2609%" height="15" fill="rgb(228,72,33)" fg:x="164747" fg:w="1897"/><text x="22.9120%" y="1454.50"></text></g><g><title>wrapped (torch/fx/experimental/proxy_tensor.py:485) (1,835 samples, 0.25%)</title><rect x="22.6705%" y="1460" width="0.2524%" height="15" fill="rgb(205,214,31)" fg:x="164809" fg:w="1835"/><text x="22.9205%" y="1470.50"></text></g><g><title>joint_helper (torch/_functorch/aot_autograd.py:1409) (1,835 samples, 0.25%)</title><rect x="22.6705%" y="1476" width="0.2524%" height="15" fill="rgb(224,111,15)" fg:x="164809" fg:w="1835"/><text x="22.9205%" y="1486.50"></text></g><g><title>functionalized_f_helper (torch/_functorch/aot_autograd.py:1363) (1,824 samples, 0.25%)</title><rect x="22.6720%" y="1492" width="0.2509%" height="15" fill="rgb(253,21,26)" fg:x="164820" fg:w="1824"/><text x="22.9220%" y="1502.50"></text></g><g><title>inner_fn_with_anomaly (torch/_functorch/aot_autograd.py:1334) (1,824 samples, 0.25%)</title><rect x="22.6720%" y="1508" width="0.2509%" height="15" fill="rgb(245,139,43)" fg:x="164820" fg:w="1824"/><text x="22.9220%" y="1518.50"></text></g><g><title>aot_dispatch_autograd_graph (torch/_functorch/aot_autograd.py:2781) (1,945 samples, 0.27%)</title><rect x="22.6616%" y="1284" width="0.2675%" height="15" fill="rgb(252,170,7)" fg:x="164744" fg:w="1945"/><text x="22.9116%" y="1294.50"></text></g><g><title>create_functionalized_graph (torch/_functorch/aot_autograd.py:1420) (1,945 samples, 0.27%)</title><rect x="22.6616%" y="1300" width="0.2675%" height="15" fill="rgb(231,118,14)" fg:x="164744" fg:w="1945"/><text x="22.9116%" y="1310.50"></text></g><g><title>wrapped (torch/fx/experimental/proxy_tensor.py:809) (1,945 samples, 0.27%)</title><rect x="22.6616%" y="1316" width="0.2675%" height="15" fill="rgb(238,83,0)" fg:x="164744" fg:w="1945"/><text x="22.9116%" y="1326.50"></text></g><g><title>inner (torch/_compile.py:24) (1,945 samples, 0.27%)</title><rect x="22.6616%" y="1332" width="0.2675%" height="15" fill="rgb(221,39,39)" fg:x="164744" fg:w="1945"/><text x="22.9116%" y="1342.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,945 samples, 0.27%)</title><rect x="22.6616%" y="1348" width="0.2675%" height="15" fill="rgb(222,119,46)" fg:x="164744" fg:w="1945"/><text x="22.9116%" y="1358.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,945 samples, 0.27%)</title><rect x="22.6616%" y="1364" width="0.2675%" height="15" fill="rgb(222,165,49)" fg:x="164744" fg:w="1945"/><text x="22.9116%" y="1374.50"></text></g><g><title>aot_dispatch_autograd (torch/_functorch/aot_autograd.py:2804) (1,962 samples, 0.27%)</title><rect x="22.6602%" y="1268" width="0.2699%" height="15" fill="rgb(219,113,52)" fg:x="164734" fg:w="1962"/><text x="22.9102%" y="1278.50"></text></g><g><title>aot_dispatch_autograd (torch/_functorch/aot_autograd.py:2825) (1,516 samples, 0.21%)</title><rect x="22.9315%" y="1268" width="0.2085%" height="15" fill="rgb(214,7,15)" fg:x="166706" fg:w="1516"/><text x="23.1815%" y="1278.50"></text></g><g><title>partition_fn (torch/_inductor/compile_fx.py:1120) (929 samples, 0.13%)</title><rect x="23.0122%" y="1284" width="0.1278%" height="15" fill="rgb(235,32,4)" fg:x="167293" fg:w="929"/><text x="23.2622%" y="1294.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (851 samples, 0.12%)</title><rect x="23.1430%" y="1444" width="0.1171%" height="15" fill="rgb(238,90,54)" fg:x="168244" fg:w="851"/><text x="23.3930%" y="1454.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:528) (855 samples, 0.12%)</title><rect x="23.1426%" y="1396" width="0.1176%" height="15" fill="rgb(213,208,19)" fg:x="168241" fg:w="855"/><text x="23.3926%" y="1406.50"></text></g><g><title>fake_tensor_prop (torch/_inductor/compile_fx.py:275) (855 samples, 0.12%)</title><rect x="23.1426%" y="1412" width="0.1176%" height="15" fill="rgb(233,156,4)" fg:x="168241" fg:w="855"/><text x="23.3926%" y="1422.50"></text></g><g><title>propagate_dont_convert_inputs (torch/fx/passes/fake_tensor_prop.py:61) (852 samples, 0.12%)</title><rect x="23.1430%" y="1428" width="0.1172%" height="15" fill="rgb(207,194,5)" fg:x="168244" fg:w="852"/><text x="23.3930%" y="1438.50"></text></g><g><title>compile_to_module (torch/_inductor/graph.py:938) (1,151 samples, 0.16%)</title><rect x="23.3183%" y="1444" width="0.1583%" height="15" fill="rgb(206,111,30)" fg:x="169518" fg:w="1151"/><text x="23.5683%" y="1454.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (2,597 samples, 0.36%)</title><rect x="23.1401%" y="1284" width="0.3572%" height="15" fill="rgb(243,70,54)" fg:x="168223" fg:w="2597"/><text x="23.3901%" y="1294.50"></text></g><g><title>fw_compiler_base (torch/_inductor/compile_fx.py:1092) (2,596 samples, 0.36%)</title><rect x="23.1403%" y="1300" width="0.3571%" height="15" fill="rgb(242,28,8)" fg:x="168224" fg:w="2596"/><text x="23.3903%" y="1310.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_aot.py:80) (2,581 samples, 0.36%)</title><rect x="23.1423%" y="1316" width="0.3550%" height="15" fill="rgb(219,106,18)" fg:x="168239" fg:w="2581"/><text x="23.3923%" y="1326.50"></text></g><g><title>inner (torch/_inductor/debug.py:228) (2,581 samples, 0.36%)</title><rect x="23.1423%" y="1332" width="0.3550%" height="15" fill="rgb(244,222,10)" fg:x="168239" fg:w="2581"/><text x="23.3923%" y="1342.50"></text></g><g><title>inner (contextlib.py:79) (2,581 samples, 0.36%)</title><rect x="23.1423%" y="1348" width="0.3550%" height="15" fill="rgb(236,179,52)" fg:x="168239" fg:w="2581"/><text x="23.3923%" y="1358.50"></text></g><g><title>newFunction (torch/_inductor/compile_fx.py:54) (2,581 samples, 0.36%)</title><rect x="23.1423%" y="1364" width="0.3550%" height="15" fill="rgb(213,23,39)" fg:x="168239" fg:w="2581"/><text x="23.3923%" y="1374.50"></text></g><g><title>compile_fx_inner (torch/_inductor/compile_fx.py:341) (2,581 samples, 0.36%)</title><rect x="23.1423%" y="1380" width="0.3550%" height="15" fill="rgb(238,48,10)" fg:x="168239" fg:w="2581"/><text x="23.3923%" y="1390.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:565) (1,303 samples, 0.18%)</title><rect x="23.3181%" y="1396" width="0.1792%" height="15" fill="rgb(251,196,23)" fg:x="169517" fg:w="1303"/><text x="23.5681%" y="1406.50"></text></g><g><title>compile_to_fn (torch/_inductor/graph.py:970) (1,303 samples, 0.18%)</title><rect x="23.3181%" y="1412" width="0.1792%" height="15" fill="rgb(250,152,24)" fg:x="169517" fg:w="1303"/><text x="23.5681%" y="1422.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,302 samples, 0.18%)</title><rect x="23.3183%" y="1428" width="0.1791%" height="15" fill="rgb(209,150,17)" fg:x="169518" fg:w="1302"/><text x="23.5683%" y="1438.50"></text></g><g><title>aot_dispatch_autograd (torch/_functorch/aot_autograd.py:2917) (2,598 samples, 0.36%)</title><rect x="23.1401%" y="1268" width="0.3574%" height="15" fill="rgb(234,202,34)" fg:x="168223" fg:w="2598"/><text x="23.3901%" y="1278.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (978 samples, 0.13%)</title><rect x="23.5000%" y="1492" width="0.1345%" height="15" fill="rgb(253,148,53)" fg:x="170839" fg:w="978"/><text x="23.7500%" y="1502.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:528) (980 samples, 0.13%)</title><rect x="23.4998%" y="1444" width="0.1348%" height="15" fill="rgb(218,129,16)" fg:x="170838" fg:w="980"/><text x="23.7498%" y="1454.50"></text></g><g><title>fake_tensor_prop (torch/_inductor/compile_fx.py:275) (980 samples, 0.13%)</title><rect x="23.4998%" y="1460" width="0.1348%" height="15" fill="rgb(216,85,19)" fg:x="170838" fg:w="980"/><text x="23.7498%" y="1470.50"></text></g><g><title>propagate_dont_convert_inputs (torch/fx/passes/fake_tensor_prop.py:61) (980 samples, 0.13%)</title><rect x="23.4998%" y="1476" width="0.1348%" height="15" fill="rgb(235,228,7)" fg:x="170838" fg:w="980"/><text x="23.7498%" y="1486.50"></text></g><g><title>run (torch/fx/interpreter.py:138) (743 samples, 0.10%)</title><rect x="23.6426%" y="1492" width="0.1022%" height="15" fill="rgb(245,175,0)" fg:x="171876" fg:w="743"/><text x="23.8926%" y="1502.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:550) (747 samples, 0.10%)</title><rect x="23.6424%" y="1444" width="0.1028%" height="15" fill="rgb(208,168,36)" fg:x="171874" fg:w="747"/><text x="23.8924%" y="1454.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (747 samples, 0.10%)</title><rect x="23.6424%" y="1460" width="0.1028%" height="15" fill="rgb(246,171,24)" fg:x="171874" fg:w="747"/><text x="23.8924%" y="1470.50"></text></g><g><title>run (torch/_inductor/graph.py:456) (746 samples, 0.10%)</title><rect x="23.6425%" y="1476" width="0.1026%" height="15" fill="rgb(215,142,24)" fg:x="171875" fg:w="746"/><text x="23.8925%" y="1486.50"></text></g><g><title>__init__ (torch/_inductor/scheduler.py:515) (731 samples, 0.10%)</title><rect x="23.7624%" y="1588" width="0.1006%" height="15" fill="rgb(250,187,7)" fg:x="172747" fg:w="731"/><text x="24.0124%" y="1598.50"></text></g><g><title>__init__ (torch/_inductor/scheduler.py:971) (965 samples, 0.13%)</title><rect x="23.7546%" y="1540" width="0.1327%" height="15" fill="rgb(228,66,33)" fg:x="172690" fg:w="965"/><text x="24.0046%" y="1550.50"></text></g><g><title>&lt;listcomp&gt; (torch/_inductor/scheduler.py:971) (965 samples, 0.13%)</title><rect x="23.7546%" y="1556" width="0.1327%" height="15" fill="rgb(234,215,21)" fg:x="172690" fg:w="965"/><text x="24.0046%" y="1566.50"></text></g><g><title>create_scheduler_node (torch/_inductor/scheduler.py:1038) (961 samples, 0.13%)</title><rect x="23.7551%" y="1572" width="0.1322%" height="15" fill="rgb(222,191,20)" fg:x="172694" fg:w="961"/><text x="24.0051%" y="1582.50"></text></g><g><title>codegen (torch/_inductor/graph.py:913) (1,024 samples, 0.14%)</title><rect x="23.7476%" y="1508" width="0.1409%" height="15" fill="rgb(245,79,54)" fg:x="172639" fg:w="1024"/><text x="23.9976%" y="1518.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (1,024 samples, 0.14%)</title><rect x="23.7476%" y="1524" width="0.1409%" height="15" fill="rgb(240,10,37)" fg:x="172639" fg:w="1024"/><text x="23.9976%" y="1534.50"></text></g><g><title>compile_to_module (torch/_inductor/graph.py:938) (1,808 samples, 0.25%)</title><rect x="23.7451%" y="1492" width="0.2487%" height="15" fill="rgb(214,192,32)" fg:x="172621" fg:w="1808"/><text x="23.9951%" y="1502.50"></text></g><g><title>create_aot_dispatcher_function (torch/_functorch/aot_autograd.py:3429) (9,934 samples, 1.37%)</title><rect x="22.6602%" y="1220" width="1.3665%" height="15" fill="rgb(209,36,54)" fg:x="164734" fg:w="9934"/><text x="22.9102%" y="1230.50"></text></g><g><title>aot_wrapper_dedupe (torch/_functorch/aot_autograd.py:2212) (9,934 samples, 1.37%)</title><rect x="22.6602%" y="1236" width="1.3665%" height="15" fill="rgb(220,10,11)" fg:x="164734" fg:w="9934"/><text x="22.9102%" y="1246.50"></text></g><g><title>aot_wrapper_synthetic_base (torch/_functorch/aot_autograd.py:2392) (9,934 samples, 1.37%)</title><rect x="22.6602%" y="1252" width="1.3665%" height="15" fill="rgb(221,106,17)" fg:x="164734" fg:w="9934"/><text x="22.9102%" y="1262.50"></text></g><g><title>aot_dispatch_autograd (torch/_functorch/aot_autograd.py:2977) (3,846 samples, 0.53%)</title><rect x="23.4976%" y="1268" width="0.5290%" height="15" fill="rgb(251,142,44)" fg:x="170822" fg:w="3846"/><text x="23.7476%" y="1278.50"></text></g><g><title>_wrapped_bw_compiler (torch/_dynamo/backends/common.py:33) (3,846 samples, 0.53%)</title><rect x="23.4976%" y="1284" width="0.5290%" height="15" fill="rgb(238,13,15)" fg:x="170822" fg:w="3846"/><text x="23.7476%" y="1294.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (3,846 samples, 0.53%)</title><rect x="23.4976%" y="1300" width="0.5290%" height="15" fill="rgb(208,107,27)" fg:x="170822" fg:w="3846"/><text x="23.7476%" y="1310.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (3,846 samples, 0.53%)</title><rect x="23.4976%" y="1316" width="0.5290%" height="15" fill="rgb(205,136,37)" fg:x="170822" fg:w="3846"/><text x="23.7476%" y="1326.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (3,846 samples, 0.53%)</title><rect x="23.4976%" y="1332" width="0.5290%" height="15" fill="rgb(250,205,27)" fg:x="170822" fg:w="3846"/><text x="23.7476%" y="1342.50"></text></g><g><title>bw_compiler (torch/_inductor/compile_fx.py:1127) (3,845 samples, 0.53%)</title><rect x="23.4978%" y="1348" width="0.5289%" height="15" fill="rgb(210,80,43)" fg:x="170823" fg:w="3845"/><text x="23.7478%" y="1358.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_aot.py:80) (3,830 samples, 0.53%)</title><rect x="23.4998%" y="1364" width="0.5268%" height="15" fill="rgb(247,160,36)" fg:x="170838" fg:w="3830"/><text x="23.7498%" y="1374.50"></text></g><g><title>inner (torch/_inductor/debug.py:228) (3,830 samples, 0.53%)</title><rect x="23.4998%" y="1380" width="0.5268%" height="15" fill="rgb(234,13,49)" fg:x="170838" fg:w="3830"/><text x="23.7498%" y="1390.50"></text></g><g><title>inner (contextlib.py:79) (3,830 samples, 0.53%)</title><rect x="23.4998%" y="1396" width="0.5268%" height="15" fill="rgb(234,122,0)" fg:x="170838" fg:w="3830"/><text x="23.7498%" y="1406.50"></text></g><g><title>newFunction (torch/_inductor/compile_fx.py:54) (3,830 samples, 0.53%)</title><rect x="23.4998%" y="1412" width="0.5268%" height="15" fill="rgb(207,146,38)" fg:x="170838" fg:w="3830"/><text x="23.7498%" y="1422.50"></text></g><g><title>compile_fx_inner (torch/_inductor/compile_fx.py:341) (3,830 samples, 0.53%)</title><rect x="23.4998%" y="1428" width="0.5268%" height="15" fill="rgb(207,177,25)" fg:x="170838" fg:w="3830"/><text x="23.7498%" y="1438.50"></text></g><g><title>fx_codegen_and_compile (torch/_inductor/compile_fx.py:565) (2,047 samples, 0.28%)</title><rect x="23.7451%" y="1444" width="0.2816%" height="15" fill="rgb(211,178,42)" fg:x="172621" fg:w="2047"/><text x="23.9951%" y="1454.50"></text></g><g><title>compile_to_fn (torch/_inductor/graph.py:970) (2,047 samples, 0.28%)</title><rect x="23.7451%" y="1460" width="0.2816%" height="15" fill="rgb(230,69,54)" fg:x="172621" fg:w="2047"/><text x="23.9951%" y="1470.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (2,047 samples, 0.28%)</title><rect x="23.7451%" y="1476" width="0.2816%" height="15" fill="rgb(214,135,41)" fg:x="172621" fg:w="2047"/><text x="23.9951%" y="1486.50"></text></g><g><title>compile_and_call_fx_graph (torch/_dynamo/output_graph.py:957) (10,366 samples, 1.43%)</title><rect x="22.6013%" y="1060" width="1.4259%" height="15" fill="rgb(237,67,25)" fg:x="164306" fg:w="10366"/><text x="22.8513%" y="1070.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (10,366 samples, 1.43%)</title><rect x="22.6013%" y="1076" width="1.4259%" height="15" fill="rgb(222,189,50)" fg:x="164306" fg:w="10366"/><text x="22.8513%" y="1086.50"></text></g><g><title>call_user_compiler (torch/_dynamo/output_graph.py:1009) (10,366 samples, 1.43%)</title><rect x="22.6013%" y="1092" width="1.4259%" height="15" fill="rgb(245,148,34)" fg:x="164306" fg:w="10366"/><text x="22.8513%" y="1102.50"></text></g><g><title>compile_fn (torch/_dynamo/backends/distributed.py:291) (10,366 samples, 1.43%)</title><rect x="22.6013%" y="1108" width="1.4259%" height="15" fill="rgb(222,29,6)" fg:x="164306" fg:w="10366"/><text x="22.8513%" y="1118.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_dynamo.py:117) (10,366 samples, 1.43%)</title><rect x="22.6013%" y="1124" width="1.4259%" height="15" fill="rgb(221,189,43)" fg:x="164306" fg:w="10366"/><text x="22.8513%" y="1134.50"></text></g><g><title>__call__ (torch/__init__.py:1568) (10,366 samples, 1.43%)</title><rect x="22.6013%" y="1140" width="1.4259%" height="15" fill="rgb(207,36,27)" fg:x="164306" fg:w="10366"/><text x="22.8513%" y="1150.50"></text></g><g><title>compile_fx (torch/_inductor/compile_fx.py:1150) (10,346 samples, 1.42%)</title><rect x="22.6041%" y="1156" width="1.4232%" height="15" fill="rgb(217,90,24)" fg:x="164326" fg:w="10346"/><text x="22.8541%" y="1166.50"></text></g><g><title>compiler_fn (torch/_dynamo/backends/common.py:55) (10,346 samples, 1.42%)</title><rect x="22.6041%" y="1172" width="1.4232%" height="15" fill="rgb(224,66,35)" fg:x="164326" fg:w="10346"/><text x="22.8541%" y="1182.50"></text></g><g><title>aot_module_simplified (torch/_functorch/aot_autograd.py:3891) (10,345 samples, 1.42%)</title><rect x="22.6042%" y="1188" width="1.4230%" height="15" fill="rgb(221,13,50)" fg:x="164327" fg:w="10345"/><text x="22.8542%" y="1198.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (10,345 samples, 1.42%)</title><rect x="22.6042%" y="1204" width="1.4230%" height="15" fill="rgb(236,68,49)" fg:x="164327" fg:w="10345"/><text x="22.8542%" y="1214.50"></text></g><g><title>RETURN_VALUE (torch/_dynamo/symbolic_convert.py:2157) (10,393 samples, 1.43%)</title><rect x="22.5978%" y="1012" width="1.4296%" height="15" fill="rgb(229,146,28)" fg:x="164280" fg:w="10393"/><text x="22.8478%" y="1022.50"></text></g><g><title>compile_subgraph (torch/_dynamo/output_graph.py:857) (10,370 samples, 1.43%)</title><rect x="22.6009%" y="1028" width="1.4265%" height="15" fill="rgb(225,31,38)" fg:x="164303" fg:w="10370"/><text x="22.8509%" y="1038.50"></text></g><g><title>inner (contextlib.py:79) (10,370 samples, 1.43%)</title><rect x="22.6009%" y="1044" width="1.4265%" height="15" fill="rgb(250,208,3)" fg:x="164303" fg:w="10370"/><text x="22.8509%" y="1054.50"></text></g><g><title>CALL_FUNCTION (torch/_dynamo/symbolic_convert.py:1110) (862 samples, 0.12%)</title><rect x="24.0279%" y="1028" width="0.1186%" height="15" fill="rgb(246,54,23)" fg:x="174677" fg:w="862"/><text x="24.2779%" y="1038.50"></text></g><g><title>call_function (torch/_dynamo/symbolic_convert.py:557) (862 samples, 0.12%)</title><rect x="24.0279%" y="1044" width="0.1186%" height="15" fill="rgb(243,76,11)" fg:x="174677" fg:w="862"/><text x="24.2779%" y="1054.50"></text></g><g><title>wrapper (torch/_dynamo/symbolic_convert.py:392) (891 samples, 0.12%)</title><rect x="24.0279%" y="1012" width="0.1226%" height="15" fill="rgb(245,21,50)" fg:x="174677" fg:w="891"/><text x="24.2779%" y="1022.50"></text></g><g><title>transform_code_object (torch/_dynamo/bytecode_transformation.py:1028) (12,211 samples, 1.68%)</title><rect x="22.5731%" y="932" width="1.6797%" height="15" fill="rgb(228,9,43)" fg:x="164101" fg:w="12211"/><text x="22.8231%" y="942.50"></text></g><g><title>transform (torch/_dynamo/convert_frame.py:458) (12,067 samples, 1.66%)</title><rect x="22.5929%" y="948" width="1.6599%" height="15" fill="rgb(208,100,47)" fg:x="164245" fg:w="12067"/><text x="22.8429%" y="958.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:2069) (12,067 samples, 1.66%)</title><rect x="22.5929%" y="964" width="1.6599%" height="15" fill="rgb(232,26,8)" fg:x="164245" fg:w="12067"/><text x="22.8429%" y="974.50"></text></g><g><title>run (torch/_dynamo/symbolic_convert.py:719) (12,067 samples, 1.66%)</title><rect x="22.5929%" y="980" width="1.6599%" height="15" fill="rgb(216,166,38)" fg:x="164245" fg:w="12067"/><text x="22.8429%" y="990.50"></text></g><g><title>step (torch/_dynamo/symbolic_convert.py:683) (12,061 samples, 1.66%)</title><rect x="22.5938%" y="996" width="1.6591%" height="15" fill="rgb(251,202,51)" fg:x="164251" fg:w="12061"/><text x="22.8438%" y="1006.50"></text></g><g><title>wrapper (torch/_dynamo/symbolic_convert.py:439) (744 samples, 0.10%)</title><rect x="24.1505%" y="1012" width="0.1023%" height="15" fill="rgb(254,216,34)" fg:x="175568" fg:w="744"/><text x="24.4005%" y="1022.50"></text></g><g><title>compile_subgraph (torch/_dynamo/output_graph.py:857) (744 samples, 0.10%)</title><rect x="24.1505%" y="1028" width="0.1023%" height="15" fill="rgb(251,32,27)" fg:x="175568" fg:w="744"/><text x="24.4005%" y="1038.50"></text></g><g><title>inner (contextlib.py:79) (744 samples, 0.10%)</title><rect x="24.1505%" y="1044" width="0.1023%" height="15" fill="rgb(208,127,28)" fg:x="175568" fg:w="744"/><text x="24.4005%" y="1054.50"></text></g><g><title>compile_and_call_fx_graph (torch/_dynamo/output_graph.py:957) (743 samples, 0.10%)</title><rect x="24.1506%" y="1060" width="0.1022%" height="15" fill="rgb(224,137,22)" fg:x="175569" fg:w="743"/><text x="24.4006%" y="1070.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (743 samples, 0.10%)</title><rect x="24.1506%" y="1076" width="0.1022%" height="15" fill="rgb(254,70,32)" fg:x="175569" fg:w="743"/><text x="24.4006%" y="1086.50"></text></g><g><title>call_user_compiler (torch/_dynamo/output_graph.py:1009) (743 samples, 0.10%)</title><rect x="24.1506%" y="1092" width="0.1022%" height="15" fill="rgb(229,75,37)" fg:x="175569" fg:w="743"/><text x="24.4006%" y="1102.50"></text></g><g><title>compile_fn (torch/_dynamo/backends/distributed.py:291) (741 samples, 0.10%)</title><rect x="24.1509%" y="1108" width="0.1019%" height="15" fill="rgb(252,64,23)" fg:x="175571" fg:w="741"/><text x="24.4009%" y="1118.50"></text></g><g><title>debug_wrapper (torch/_dynamo/repro/after_dynamo.py:117) (741 samples, 0.10%)</title><rect x="24.1509%" y="1124" width="0.1019%" height="15" fill="rgb(232,162,48)" fg:x="175571" fg:w="741"/><text x="24.4009%" y="1134.50"></text></g><g><title>__call__ (torch/__init__.py:1568) (741 samples, 0.10%)</title><rect x="24.1509%" y="1140" width="0.1019%" height="15" fill="rgb(246,160,12)" fg:x="175571" fg:w="741"/><text x="24.4009%" y="1150.50"></text></g><g><title>compile_fx (torch/_inductor/compile_fx.py:1150) (737 samples, 0.10%)</title><rect x="24.1514%" y="1156" width="0.1014%" height="15" fill="rgb(247,166,0)" fg:x="175575" fg:w="737"/><text x="24.4014%" y="1166.50"></text></g><g><title>compiler_fn (torch/_dynamo/backends/common.py:55) (737 samples, 0.10%)</title><rect x="24.1514%" y="1172" width="0.1014%" height="15" fill="rgb(249,219,21)" fg:x="175575" fg:w="737"/><text x="24.4014%" y="1182.50"></text></g><g><title>aot_module_simplified (torch/_functorch/aot_autograd.py:3891) (736 samples, 0.10%)</title><rect x="24.1516%" y="1188" width="0.1012%" height="15" fill="rgb(205,209,3)" fg:x="175576" fg:w="736"/><text x="24.4016%" y="1198.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (736 samples, 0.10%)</title><rect x="24.1516%" y="1204" width="0.1012%" height="15" fill="rgb(243,44,1)" fg:x="175576" fg:w="736"/><text x="24.4016%" y="1214.50"></text></g><g><title>compile_inner (torch/_dynamo/convert_frame.py:491) (12,212 samples, 1.68%)</title><rect x="22.5731%" y="916" width="1.6798%" height="15" fill="rgb(206,159,16)" fg:x="164101" fg:w="12212"/><text x="22.8231%" y="926.50"></text></g><g><title>catch_errors (torch/_dynamo/eval_frame.py:487) (12,856 samples, 1.77%)</title><rect x="22.5731%" y="820" width="1.7684%" height="15" fill="rgb(244,77,30)" fg:x="164101" fg:w="12856"/><text x="22.8231%" y="830.50"></text></g><g><title>_convert_frame (torch/_dynamo/convert_frame.py:641) (12,856 samples, 1.77%)</title><rect x="22.5731%" y="836" width="1.7684%" height="15" fill="rgb(218,69,12)" fg:x="164101" fg:w="12856"/><text x="22.8231%" y="846.50"></text></g><g><title>_fn (torch/_dynamo/convert_frame.py:133) (12,856 samples, 1.77%)</title><rect x="22.5731%" y="852" width="1.7684%" height="15" fill="rgb(212,87,7)" fg:x="164101" fg:w="12856"/><text x="22.8231%" y="862.50"></text></g><g><title>_convert_frame_assert (torch/_dynamo/convert_frame.py:389) (12,856 samples, 1.77%)</title><rect x="22.5731%" y="868" width="1.7684%" height="15" fill="rgb(245,114,25)" fg:x="164101" fg:w="12856"/><text x="22.8231%" y="878.50"></text></g><g><title>_compile (torch/_dynamo/convert_frame.py:569) (12,856 samples, 1.77%)</title><rect x="22.5731%" y="884" width="1.7684%" height="15" fill="rgb(210,61,42)" fg:x="164101" fg:w="12856"/><text x="22.8231%" y="894.50"></text></g><g><title>time_wrapper (torch/_dynamo/utils.py:189) (12,856 samples, 1.77%)</title><rect x="22.5731%" y="900" width="1.7684%" height="15" fill="rgb(211,52,33)" fg:x="164101" fg:w="12856"/><text x="22.8231%" y="910.50"></text></g><g><title>__call__ (torch/_inductor/codecache.py:374) (1,705 samples, 0.23%)</title><rect x="24.3713%" y="996" width="0.2345%" height="15" fill="rgb(234,58,33)" fg:x="177173" fg:w="1705"/><text x="24.6213%" y="1006.50"></text></g><g><title>run (torch/_inductor/compile_fx.py:628) (1,699 samples, 0.23%)</title><rect x="24.3721%" y="1012" width="0.2337%" height="15" fill="rgb(220,115,36)" fg:x="177179" fg:w="1699"/><text x="24.6221%" y="1022.50"></text></g><g><title>_run_from_cache (torch/_inductor/codecache.py:401) (1,697 samples, 0.23%)</title><rect x="24.3724%" y="1028" width="0.2334%" height="15" fill="rgb(243,153,54)" fg:x="177181" fg:w="1697"/><text x="24.6224%" y="1038.50"></text></g><g><title>call_func_with_args (torch/_functorch/aot_autograd.py:1506) (1,708 samples, 0.23%)</title><rect x="24.3711%" y="980" width="0.2349%" height="15" fill="rgb(251,47,18)" fg:x="177172" fg:w="1708"/><text x="24.6211%" y="990.50"></text></g><g><title>forward (torch/_functorch/aot_autograd.py:3010) (1,720 samples, 0.24%)</title><rect x="24.3696%" y="964" width="0.2366%" height="15" fill="rgb(242,102,42)" fg:x="177161" fg:w="1720"/><text x="24.6196%" y="974.50"></text></g><g><title>g (torch/_functorch/aot_autograd.py:1482) (1,893 samples, 0.26%)</title><rect x="24.3548%" y="932" width="0.2604%" height="15" fill="rgb(234,31,38)" fg:x="177053" fg:w="1893"/><text x="24.6048%" y="942.50"></text></g><g><title>apply (torch/autograd/function.py:539) (1,864 samples, 0.26%)</title><rect x="24.3587%" y="948" width="0.2564%" height="15" fill="rgb(221,117,51)" fg:x="177082" fg:w="1864"/><text x="24.6087%" y="958.50"></text></g><g><title>call_func_with_args (torch/_functorch/aot_autograd.py:1506) (1,898 samples, 0.26%)</title><rect x="24.3543%" y="916" width="0.2611%" height="15" fill="rgb(212,20,18)" fg:x="177050" fg:w="1898"/><text x="24.6043%" y="926.50"></text></g><g><title>runtime_wrapper (torch/_functorch/aot_autograd.py:2527) (1,910 samples, 0.26%)</title><rect x="24.3528%" y="900" width="0.2627%" height="15" fill="rgb(245,133,36)" fg:x="177039" fg:w="1910"/><text x="24.6028%" y="910.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (2,084 samples, 0.29%)</title><rect x="24.3468%" y="836" width="0.2867%" height="15" fill="rgb(212,6,19)" fg:x="176995" fg:w="2084"/><text x="24.5968%" y="846.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (2,081 samples, 0.29%)</title><rect x="24.3472%" y="852" width="0.2863%" height="15" fill="rgb(218,1,36)" fg:x="176998" fg:w="2081"/><text x="24.5972%" y="862.50"></text></g><g><title>forward (torch/_functorch/aot_autograd.py:3905) (2,072 samples, 0.29%)</title><rect x="24.3484%" y="868" width="0.2850%" height="15" fill="rgb(246,84,54)" fg:x="177007" fg:w="2072"/><text x="24.5984%" y="878.50"></text></g><g><title>g (torch/_functorch/aot_autograd.py:1482) (2,068 samples, 0.28%)</title><rect x="24.3490%" y="884" width="0.2845%" height="15" fill="rgb(242,110,6)" fg:x="177011" fg:w="2068"/><text x="24.5990%" y="894.50"></text></g><g><title>forward (modeling/decoders.py:102) (2,136 samples, 0.29%)</title><rect x="24.3416%" y="820" width="0.2938%" height="15" fill="rgb(214,47,5)" fg:x="176957" fg:w="2136"/><text x="24.5916%" y="830.50"></text></g><g><title>__call__ (torch/_inductor/codecache.py:374) (2,279 samples, 0.31%)</title><rect x="24.6669%" y="996" width="0.3135%" height="15" fill="rgb(218,159,25)" fg:x="179322" fg:w="2279"/><text x="24.9169%" y="1006.50"></text></g><g><title>run (torch/_inductor/compile_fx.py:628) (2,261 samples, 0.31%)</title><rect x="24.6693%" y="1012" width="0.3110%" height="15" fill="rgb(215,211,28)" fg:x="179340" fg:w="2261"/><text x="24.9193%" y="1022.50"></text></g><g><title>_run_from_cache (torch/_inductor/codecache.py:401) (2,256 samples, 0.31%)</title><rect x="24.6700%" y="1028" width="0.3103%" height="15" fill="rgb(238,59,32)" fg:x="179345" fg:w="2256"/><text x="24.9200%" y="1038.50"></text></g><g><title>forward (torch/_functorch/aot_autograd.py:3010) (2,287 samples, 0.31%)</title><rect x="24.6660%" y="964" width="0.3146%" height="15" fill="rgb(226,82,3)" fg:x="179316" fg:w="2287"/><text x="24.9160%" y="974.50"></text></g><g><title>call_func_with_args (torch/_functorch/aot_autograd.py:1506) (2,285 samples, 0.31%)</title><rect x="24.6663%" y="980" width="0.3143%" height="15" fill="rgb(240,164,32)" fg:x="179318" fg:w="2285"/><text x="24.9163%" y="990.50"></text></g><g><title>g (torch/_functorch/aot_autograd.py:1482) (2,550 samples, 0.35%)</title><rect x="24.6480%" y="932" width="0.3508%" height="15" fill="rgb(232,46,7)" fg:x="179185" fg:w="2550"/><text x="24.8980%" y="942.50"></text></g><g><title>apply (torch/autograd/function.py:539) (2,516 samples, 0.35%)</title><rect x="24.6527%" y="948" width="0.3461%" height="15" fill="rgb(229,129,53)" fg:x="179219" fg:w="2516"/><text x="24.9027%" y="958.50"></text></g><g><title>runtime_wrapper (torch/_functorch/aot_autograd.py:2527) (2,562 samples, 0.35%)</title><rect x="24.6465%" y="900" width="0.3524%" height="15" fill="rgb(234,188,29)" fg:x="179174" fg:w="2562"/><text x="24.8965%" y="910.50"></text></g><g><title>call_func_with_args (torch/_functorch/aot_autograd.py:1506) (2,552 samples, 0.35%)</title><rect x="24.6479%" y="916" width="0.3510%" height="15" fill="rgb(246,141,4)" fg:x="179184" fg:w="2552"/><text x="24.8979%" y="926.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (2,759 samples, 0.38%)</title><rect x="24.6402%" y="836" width="0.3795%" height="15" fill="rgb(229,23,39)" fg:x="179128" fg:w="2759"/><text x="24.8902%" y="846.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (2,756 samples, 0.38%)</title><rect x="24.6406%" y="852" width="0.3791%" height="15" fill="rgb(206,12,3)" fg:x="179131" fg:w="2756"/><text x="24.8906%" y="862.50"></text></g><g><title>forward (torch/_functorch/aot_autograd.py:3905) (2,752 samples, 0.38%)</title><rect x="24.6411%" y="868" width="0.3786%" height="15" fill="rgb(252,226,20)" fg:x="179135" fg:w="2752"/><text x="24.8911%" y="878.50"></text></g><g><title>g (torch/_functorch/aot_autograd.py:1482) (2,747 samples, 0.38%)</title><rect x="24.6418%" y="884" width="0.3779%" height="15" fill="rgb(216,123,35)" fg:x="179140" fg:w="2747"/><text x="24.8918%" y="894.50"></text></g><g><title>forward (modeling/decoders.py:532) (2,803 samples, 0.39%)</title><rect x="24.6354%" y="820" width="0.3856%" height="15" fill="rgb(212,68,40)" fg:x="179093" fg:w="2803"/><text x="24.8854%" y="830.50"></text></g><g><title>g (torch/_functorch/aot_autograd.py:1482) (954 samples, 0.13%)</title><rect x="25.1351%" y="964" width="0.1312%" height="15" fill="rgb(254,125,32)" fg:x="182726" fg:w="954"/><text x="25.3851%" y="974.50"></text></g><g><title>apply (torch/autograd/function.py:539) (931 samples, 0.13%)</title><rect x="25.1383%" y="980" width="0.1281%" height="15" fill="rgb(253,97,22)" fg:x="182749" fg:w="931"/><text x="25.3883%" y="990.50"></text></g><g><title>call_func_with_args (torch/_functorch/aot_autograd.py:1506) (957 samples, 0.13%)</title><rect x="25.1348%" y="948" width="0.1316%" height="15" fill="rgb(241,101,14)" fg:x="182724" fg:w="957"/><text x="25.3848%" y="958.50"></text></g><g><title>runtime_wrapper (torch/_functorch/aot_autograd.py:2527) (974 samples, 0.13%)</title><rect x="25.1331%" y="932" width="0.1340%" height="15" fill="rgb(238,103,29)" fg:x="182711" fg:w="974"/><text x="25.3831%" y="942.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,115 samples, 0.15%)</title><rect x="25.1247%" y="868" width="0.1534%" height="15" fill="rgb(233,195,47)" fg:x="182650" fg:w="1115"/><text x="25.3747%" y="878.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (1,111 samples, 0.15%)</title><rect x="25.1252%" y="884" width="0.1528%" height="15" fill="rgb(246,218,30)" fg:x="182654" fg:w="1111"/><text x="25.3752%" y="894.50"></text></g><g><title>forward (torch/_functorch/aot_autograd.py:3905) (1,105 samples, 0.15%)</title><rect x="25.1260%" y="900" width="0.1520%" height="15" fill="rgb(219,145,47)" fg:x="182660" fg:w="1105"/><text x="25.3760%" y="910.50"></text></g><g><title>g (torch/_functorch/aot_autograd.py:1482) (1,102 samples, 0.15%)</title><rect x="25.1264%" y="916" width="0.1516%" height="15" fill="rgb(243,12,26)" fg:x="182663" fg:w="1102"/><text x="25.3764%" y="926.50"></text></g><g><title>&lt;resume in forward&gt; (modeling/decoders.py:558) (1,178 samples, 0.16%)</title><rect x="25.1187%" y="852" width="0.1620%" height="15" fill="rgb(214,87,16)" fg:x="182607" fg:w="1178"/><text x="25.3687%" y="862.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (756 samples, 0.10%)</title><rect x="25.6679%" y="884" width="0.1040%" height="15" fill="rgb(208,99,42)" fg:x="186599" fg:w="756"/><text x="25.9179%" y="894.50"></text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (751 samples, 0.10%)</title><rect x="25.6686%" y="900" width="0.1033%" height="15" fill="rgb(253,99,2)" fg:x="186604" fg:w="751"/><text x="25.9186%" y="910.50"></text></g><g><title>forward (torch/_functorch/aot_autograd.py:3905) (746 samples, 0.10%)</title><rect x="25.6692%" y="916" width="0.1026%" height="15" fill="rgb(220,168,23)" fg:x="186609" fg:w="746"/><text x="25.9192%" y="926.50"></text></g><g><title>g (torch/_functorch/aot_autograd.py:1482) (746 samples, 0.10%)</title><rect x="25.6692%" y="932" width="0.1026%" height="15" fill="rgb(242,38,24)" fg:x="186609" fg:w="746"/><text x="25.9192%" y="942.50"></text></g><g><title>&lt;resume in piecewise_sigma&gt; (modeling/decoders.py:42) (1,744 samples, 0.24%)</title><rect x="25.5333%" y="868" width="0.2399%" height="15" fill="rgb(225,182,9)" fg:x="185621" fg:w="1744"/><text x="25.7833%" y="878.50"></text></g><g><title>&lt;resume in forward&gt; (modeling/decoders.py:558) (4,838 samples, 0.67%)</title><rect x="25.1135%" y="836" width="0.6655%" height="15" fill="rgb(243,178,37)" fg:x="182569" fg:w="4838"/><text x="25.3635%" y="846.50"></text></g><g><title>piecewise_sigma (modeling/decoders.py:42) (2,312 samples, 0.32%)</title><rect x="25.4610%" y="852" width="0.3180%" height="15" fill="rgb(232,139,19)" fg:x="185095" fg:w="2312"/><text x="25.7110%" y="862.50"></text></g><g><title>&lt;resume in piecewise_sigma&gt; (modeling/decoders.py:42) (2,325 samples, 0.32%)</title><rect x="26.7041%" y="852" width="0.3198%" height="15" fill="rgb(225,201,24)" fg:x="194132" fg:w="2325"/><text x="26.9541%" y="862.50"></text></g><g><title>forward (modeling/decoders.py:557) (14,821 samples, 2.04%)</title><rect x="25.0209%" y="820" width="2.0387%" height="15" fill="rgb(221,47,46)" fg:x="181896" fg:w="14821"/><text x="25.2709%" y="830.50">f..</text></g><g><title>piecewise_sigma (modeling/decoders.py:42) (8,520 samples, 1.17%)</title><rect x="25.8877%" y="836" width="1.1720%" height="15" fill="rgb(249,23,13)" fg:x="188197" fg:w="8520"/><text x="26.1377%" y="846.50"></text></g><g><title>call (coxsvcswsp4pnshyfc3whild6ckhu5vdeza6xeksqfmwdujuvjan.py:915) (815 samples, 0.11%)</title><rect x="28.1857%" y="1044" width="0.1121%" height="15" fill="rgb(219,9,5)" fg:x="204903" fg:w="815"/><text x="28.4357%" y="1054.50"></text></g><g><title>__call__ (torch/_inductor/codecache.py:374) (23,164 samples, 3.19%)</title><rect x="27.1987%" y="996" width="3.1864%" height="15" fill="rgb(254,171,16)" fg:x="197728" fg:w="23164"/><text x="27.4487%" y="1006.50">__c..</text></g><g><title>run (torch/_inductor/compile_fx.py:628) (23,116 samples, 3.18%)</title><rect x="27.2053%" y="1012" width="3.1798%" height="15" fill="rgb(230,171,20)" fg:x="197776" fg:w="23116"/><text x="27.4553%" y="1022.50">run..</text></g><g><title>_run_from_cache (torch/_inductor/codecache.py:401) (23,101 samples, 3.18%)</title><rect x="27.2074%" y="1028" width="3.1777%" height="15" fill="rgb(210,71,41)" fg:x="197791" fg:w="23101"/><text x="27.4574%" y="1038.50">_ru..</text></g><g><title>call_func_with_args (torch/_functorch/aot_autograd.py:1506) (23,180 samples, 3.19%)</title><rect x="27.1968%" y="980" width="3.1886%" height="15" fill="rgb(206,173,20)" fg:x="197714" fg:w="23180"/><text x="27.4468%" y="990.50">cal..</text></g><g><title>forward (torch/_functorch/aot_autograd.py:3010) (23,207 samples, 3.19%)</title><rect x="27.1938%" y="964" width="3.1923%" height="15" fill="rgb(233,88,34)" fg:x="197692" fg:w="23207"/><text x="27.4438%" y="974.50">for..</text></g><g><title>g (torch/_functorch/aot_autograd.py:1482) (24,336 samples, 3.35%)</title><rect x="27.1062%" y="932" width="3.3476%" height="15" fill="rgb(223,209,46)" fg:x="197055" fg:w="24336"/><text x="27.3562%" y="942.50">g (..</text></g><g><title>apply (torch/autograd/function.py:539) (24,172 samples, 3.33%)</title><rect x="27.1287%" y="948" width="3.3250%" height="15" fill="rgb(250,43,18)" fg:x="197219" fg:w="24172"/><text x="27.3787%" y="958.50">app..</text></g><g><title>call_func_with_args (torch/_functorch/aot_autograd.py:1506) (24,350 samples, 3.35%)</title><rect x="27.1048%" y="916" width="3.3495%" height="15" fill="rgb(208,13,10)" fg:x="197045" fg:w="24350"/><text x="27.3548%" y="926.50">cal..</text></g><g><title>runtime_wrapper (torch/_functorch/aot_autograd.py:2527) (24,414 samples, 3.36%)</title><rect x="27.0974%" y="900" width="3.3583%" height="15" fill="rgb(212,200,36)" fg:x="196991" fg:w="24414"/><text x="27.3474%" y="910.50">run..</text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (24,633 samples, 3.39%)</title><rect x="27.0736%" y="836" width="3.3884%" height="15" fill="rgb(225,90,30)" fg:x="196818" fg:w="24633"/><text x="27.3236%" y="846.50">_fn..</text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (24,625 samples, 3.39%)</title><rect x="27.0747%" y="852" width="3.3873%" height="15" fill="rgb(236,182,39)" fg:x="196826" fg:w="24625"/><text x="27.3247%" y="862.50">inn..</text></g><g><title>forward (torch/_functorch/aot_autograd.py:3905) (24,599 samples, 3.38%)</title><rect x="27.0782%" y="868" width="3.3837%" height="15" fill="rgb(212,144,35)" fg:x="196852" fg:w="24599"/><text x="27.3282%" y="878.50">for..</text></g><g><title>g (torch/_functorch/aot_autograd.py:1482) (24,592 samples, 3.38%)</title><rect x="27.0792%" y="884" width="3.3828%" height="15" fill="rgb(228,63,44)" fg:x="196859" fg:w="24592"/><text x="27.3292%" y="894.50">g (..</text></g><g><title>forward (modeling/decoders.py:904) (24,762 samples, 3.41%)</title><rect x="27.0597%" y="820" width="3.4062%" height="15" fill="rgb(228,109,6)" fg:x="196717" fg:w="24762"/><text x="27.3097%" y="830.50">for..</text></g><g><title>forward (modeling/vectornet.py:237) (57,963 samples, 7.97%)</title><rect x="22.5449%" y="772" width="7.9732%" height="15" fill="rgb(238,117,24)" fg:x="163896" fg:w="57963"/><text x="22.7949%" y="782.50">forward (mo..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (57,937 samples, 7.97%)</title><rect x="22.5485%" y="788" width="7.9696%" height="15" fill="rgb(242,26,26)" fg:x="163922" fg:w="57937"/><text x="22.7985%" y="798.50">_wrapped_ca..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (57,869 samples, 7.96%)</title><rect x="22.5579%" y="804" width="7.9602%" height="15" fill="rgb(221,92,48)" fg:x="163990" fg:w="57869"/><text x="22.8079%" y="814.50">_call_impl ..</text></g><g><title>__iter__ (torch/_tensor.py:1000) (8,277 samples, 1.14%)</title><rect x="41.5969%" y="804" width="1.1386%" height="15" fill="rgb(209,209,32)" fg:x="302399" fg:w="8277"/><text x="41.8469%" y="814.50"></text></g><g><title>merge_prediction_outputs (data/utils.py:1651) (88,510 samples, 12.18%)</title><rect x="30.5667%" y="788" width="12.1751%" height="15" fill="rgb(221,70,22)" fg:x="222212" fg:w="88510"/><text x="30.8167%" y="798.50">merge_prediction_o..</text></g><g><title>merge_prediction_outputs (data/utils.py:1671) (849 samples, 0.12%)</title><rect x="42.8528%" y="788" width="0.1168%" height="15" fill="rgb(248,145,5)" fg:x="311529" fg:w="849"/><text x="43.1028%" y="798.50"></text></g><g><title>forward (modeling/vectornet.py:249) (90,414 samples, 12.44%)</title><rect x="30.5353%" y="772" width="12.4370%" height="15" fill="rgb(226,116,26)" fg:x="221984" fg:w="90414"/><text x="30.7853%" y="782.50">forward (modeling/v..</text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (227,838 samples, 31.34%)</title><rect x="11.6333%" y="724" width="31.3406%" height="15" fill="rgb(244,5,17)" fg:x="84571" fg:w="227838"/><text x="11.8833%" y="734.50">_fn (torch/_dynamo/eval_frame.py:328)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (227,830 samples, 31.34%)</title><rect x="11.6344%" y="740" width="31.3395%" height="15" fill="rgb(252,159,33)" fg:x="84579" fg:w="227830"/><text x="11.8844%" y="750.50">_wrapped_call_impl (torch/nn/modules/module.py:1518)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (227,827 samples, 31.34%)</title><rect x="11.6348%" y="756" width="31.3390%" height="15" fill="rgb(206,71,0)" fg:x="84582" fg:w="227827"/><text x="11.8848%" y="766.50">_call_impl (torch/nn/modules/module.py:1527)</text></g><g><title>forward (modeling/vectornet_lightning.py:381) (227,927 samples, 31.35%)</title><rect x="11.6232%" y="676" width="31.3528%" height="15" fill="rgb(233,118,54)" fg:x="84498" fg:w="227927"/><text x="11.8732%" y="686.50">forward (modeling/vectornet_lightning.py:381)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (227,916 samples, 31.35%)</title><rect x="11.6247%" y="692" width="31.3513%" height="15" fill="rgb(234,83,48)" fg:x="84509" fg:w="227916"/><text x="11.8747%" y="702.50">_wrapped_call_impl (torch/nn/modules/module.py:1518)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (227,906 samples, 31.35%)</title><rect x="11.6261%" y="708" width="31.3499%" height="15" fill="rgb(228,3,54)" fg:x="84519" fg:w="227906"/><text x="11.8761%" y="718.50">_call_impl (torch/nn/modules/module.py:1527)</text></g><g><title>training_step (modeling/vectornet_lightning.py:446) (227,952 samples, 31.36%)</title><rect x="11.6199%" y="660" width="31.3562%" height="15" fill="rgb(226,155,13)" fg:x="84474" fg:w="227952"/><text x="11.8699%" y="670.50">training_step (modeling/vectornet_lightning.py:446)</text></g><g><title>get_trajectory_label (utils/trajectory_labeler.py:456) (1,624 samples, 0.22%)</title><rect x="43.0397%" y="692" width="0.2234%" height="15" fill="rgb(241,28,37)" fg:x="312888" fg:w="1624"/><text x="43.2897%" y="702.50"></text></g><g><title>get_trajectory_label (utils/trajectory_labeler.py:485) (844 samples, 0.12%)</title><rect x="43.3473%" y="692" width="0.1161%" height="15" fill="rgb(233,93,10)" fg:x="315124" fg:w="844"/><text x="43.5973%" y="702.50"></text></g><g><title>get_ground_truth (data/utils.py:433) (4,335 samples, 0.60%)</title><rect x="42.9774%" y="676" width="0.5963%" height="15" fill="rgb(225,113,19)" fg:x="312435" fg:w="4335"/><text x="43.2274%" y="686.50"></text></g><g><title>get_label (utils/start_to_move_labeler.py:139) (1,223 samples, 0.17%)</title><rect x="43.5946%" y="692" width="0.1682%" height="15" fill="rgb(241,2,18)" fg:x="316922" fg:w="1223"/><text x="43.8446%" y="702.50"></text></g><g><title>get_ground_truth (data/utils.py:440) (1,384 samples, 0.19%)</title><rect x="43.5737%" y="676" width="0.1904%" height="15" fill="rgb(228,207,21)" fg:x="316770" fg:w="1384"/><text x="43.8237%" y="686.50"></text></g><g><title>__iter__ (torch/_tensor.py:1000) (1,310 samples, 0.18%)</title><rect x="45.7699%" y="692" width="0.1802%" height="15" fill="rgb(213,211,35)" fg:x="332736" fg:w="1310"/><text x="46.0199%" y="702.50"></text></g><g><title>get_ground_truth (data/utils.py:460) (15,348 samples, 2.11%)</title><rect x="43.8411%" y="676" width="2.1112%" height="15" fill="rgb(209,83,10)" fg:x="318714" fg:w="15348"/><text x="44.0911%" y="686.50">g..</text></g><g><title>calculate_angular_velocities (utils/trajectory_motion_util.py:300) (1,115 samples, 0.15%)</title><rect x="46.0525%" y="708" width="0.1534%" height="15" fill="rgb(209,164,1)" fg:x="334790" fg:w="1115"/><text x="46.3025%" y="718.50"></text></g><g><title>normalize_minus_pi_to_pi (utils/math_utils.py:15) (1,065 samples, 0.15%)</title><rect x="46.0594%" y="724" width="0.1465%" height="15" fill="rgb(213,184,43)" fg:x="334840" fg:w="1065"/><text x="46.3094%" y="734.50"></text></g><g><title>get_kinematic_feasible_mask (utils/trajectory_motion_util.py:632) (1,578 samples, 0.22%)</title><rect x="45.9932%" y="692" width="0.2171%" height="15" fill="rgb(231,61,34)" fg:x="334359" fg:w="1578"/><text x="46.2432%" y="702.50"></text></g><g><title>get_valid_angular_velocity_upperbound (utils/trajectory_motion_util.py:587) (909 samples, 0.13%)</title><rect x="46.2877%" y="708" width="0.1250%" height="15" fill="rgb(235,75,3)" fg:x="336500" fg:w="909"/><text x="46.5377%" y="718.50"></text></g><g><title>get_kinematic_feasible_mask (utils/trajectory_motion_util.py:645) (1,370 samples, 0.19%)</title><rect x="46.2860%" y="692" width="0.1885%" height="15" fill="rgb(220,106,47)" fg:x="336488" fg:w="1370"/><text x="46.5360%" y="702.50"></text></g><g><title>get_ground_truth (data/utils.py:468) (3,563 samples, 0.49%)</title><rect x="45.9876%" y="676" width="0.4901%" height="15" fill="rgb(210,196,33)" fg:x="334318" fg:w="3563"/><text x="46.2376%" y="686.50"></text></g><g><title>training_step (modeling/vectornet_lightning.py:447) (25,654 samples, 3.53%)</title><rect x="42.9762%" y="660" width="3.5289%" height="15" fill="rgb(229,154,42)" fg:x="312426" fg:w="25654"/><text x="43.2262%" y="670.50">tra..</text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:1315) (1,592 samples, 0.22%)</title><rect x="46.5760%" y="708" width="0.2190%" height="15" fill="rgb(228,114,26)" fg:x="338596" fg:w="1592"/><text x="46.8260%" y="718.50"></text></g><g><title>calculate_angular_velocities (utils/trajectory_motion_util.py:300) (750 samples, 0.10%)</title><rect x="47.2626%" y="756" width="0.1032%" height="15" fill="rgb(208,144,1)" fg:x="343587" fg:w="750"/><text x="47.5126%" y="766.50"></text></g><g><title>get_kinematic_feasible_mask (utils/trajectory_motion_util.py:632) (2,417 samples, 0.33%)</title><rect x="47.0394%" y="740" width="0.3325%" height="15" fill="rgb(239,112,37)" fg:x="341965" fg:w="2417"/><text x="47.2894%" y="750.50"></text></g><g><title>get_valid_angular_velocity_upperbound (utils/trajectory_motion_util.py:587) (1,379 samples, 0.19%)</title><rect x="47.5139%" y="756" width="0.1897%" height="15" fill="rgb(210,96,50)" fg:x="345414" fg:w="1379"/><text x="47.7639%" y="766.50"></text></g><g><title>_get_bicycle_model_params (utils/trajectory_motion_util.py:547) (816 samples, 0.11%)</title><rect x="47.5913%" y="772" width="0.1122%" height="15" fill="rgb(222,178,2)" fg:x="345977" fg:w="816"/><text x="47.8413%" y="782.50"></text></g><g><title>get_kinematic_feasible_mask (utils/trajectory_motion_util.py:645) (2,053 samples, 0.28%)</title><rect x="47.5110%" y="740" width="0.2824%" height="15" fill="rgb(226,74,18)" fg:x="345393" fg:w="2053"/><text x="47.7610%" y="750.50"></text></g><g><title>kinematic_feasibility_loss (core/loss.py:568) (5,646 samples, 0.78%)</title><rect x="47.0225%" y="724" width="0.7766%" height="15" fill="rgb(225,67,54)" fg:x="341842" fg:w="5646"/><text x="47.2725%" y="734.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:1317) (7,439 samples, 1.02%)</title><rect x="46.7950%" y="708" width="1.0233%" height="15" fill="rgb(251,92,32)" fg:x="340188" fg:w="7439"/><text x="47.0450%" y="718.50"></text></g><g><title>__call__ (utils/loss_helper.py:1323) (9,099 samples, 1.25%)</title><rect x="46.5671%" y="692" width="1.2516%" height="15" fill="rgb(228,149,22)" fg:x="338531" fg:w="9099"/><text x="46.8171%" y="702.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:1432) (1,217 samples, 0.17%)</title><rect x="47.8745%" y="708" width="0.1674%" height="15" fill="rgb(243,54,13)" fg:x="348036" fg:w="1217"/><text x="48.1245%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:1434) (1,020 samples, 0.14%)</title><rect x="48.0420%" y="708" width="0.1403%" height="15" fill="rgb(243,180,28)" fg:x="349253" fg:w="1020"/><text x="48.2920%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:1447) (1,448 samples, 0.20%)</title><rect x="48.1882%" y="708" width="0.1992%" height="15" fill="rgb(208,167,24)" fg:x="350316" fg:w="1448"/><text x="48.4382%" y="718.50"></text></g><g><title>get_exists_all_target_tag_mask (data/utils.py:131) (1,275 samples, 0.18%)</title><rect x="48.2120%" y="724" width="0.1754%" height="15" fill="rgb(245,73,45)" fg:x="350489" fg:w="1275"/><text x="48.4620%" y="734.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:1455) (1,051 samples, 0.14%)</title><rect x="48.4380%" y="708" width="0.1446%" height="15" fill="rgb(237,203,48)" fg:x="352132" fg:w="1051"/><text x="48.6880%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:1478) (1,000 samples, 0.14%)</title><rect x="48.7381%" y="708" width="0.1376%" height="15" fill="rgb(211,197,16)" fg:x="354314" fg:w="1000"/><text x="48.9881%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:1500) (1,197 samples, 0.16%)</title><rect x="48.9083%" y="708" width="0.1647%" height="15" fill="rgb(243,99,51)" fg:x="355551" fg:w="1197"/><text x="49.1583%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:654) (1,704 samples, 0.23%)</title><rect x="49.2130%" y="708" width="0.2344%" height="15" fill="rgb(215,123,29)" fg:x="357766" fg:w="1704"/><text x="49.4630%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:666) (1,040 samples, 0.14%)</title><rect x="49.5680%" y="708" width="0.1431%" height="15" fill="rgb(239,186,37)" fg:x="360347" fg:w="1040"/><text x="49.8180%" y="718.50"></text></g><g><title>compute_log_likelihood (core/loss.py:168) (1,118 samples, 0.15%)</title><rect x="49.7288%" y="724" width="0.1538%" height="15" fill="rgb(252,136,39)" fg:x="361516" fg:w="1118"/><text x="49.9788%" y="734.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:671) (1,365 samples, 0.19%)</title><rect x="49.7111%" y="708" width="0.1878%" height="15" fill="rgb(223,213,32)" fg:x="361387" fg:w="1365"/><text x="49.9611%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:695) (844 samples, 0.12%)</title><rect x="49.8990%" y="708" width="0.1161%" height="15" fill="rgb(233,115,5)" fg:x="362753" fg:w="844"/><text x="50.1490%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:798) (1,503 samples, 0.21%)</title><rect x="50.0881%" y="708" width="0.2067%" height="15" fill="rgb(207,226,44)" fg:x="364128" fg:w="1503"/><text x="50.3381%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:957) (1,275 samples, 0.18%)</title><rect x="50.4319%" y="708" width="0.1754%" height="15" fill="rgb(208,126,0)" fg:x="366627" fg:w="1275"/><text x="50.6819%" y="718.50"></text></g><g><title>cal_loss_for_each_sample (utils/loss_helper.py:965) (1,510 samples, 0.21%)</title><rect x="50.6778%" y="708" width="0.2077%" height="15" fill="rgb(244,66,21)" fg:x="368415" fg:w="1510"/><text x="50.9278%" y="718.50"></text></g><g><title>__call__ (utils/loss_helper.py:140) (22,298 samples, 3.07%)</title><rect x="47.8377%" y="692" width="3.0672%" height="15" fill="rgb(222,97,12)" fg:x="347768" fg:w="22298"/><text x="48.0877%" y="702.50">__c..</text></g><g><title>__call__ (utils/loss_helper.py:141) (1,391 samples, 0.19%)</title><rect x="50.9049%" y="692" width="0.1913%" height="15" fill="rgb(219,213,19)" fg:x="370066" fg:w="1391"/><text x="51.1549%" y="702.50"></text></g><g><title>__call__ (utils/loss_helper.py:156) (1,110 samples, 0.15%)</title><rect x="51.1899%" y="692" width="0.1527%" height="15" fill="rgb(252,169,30)" fg:x="372138" fg:w="1110"/><text x="51.4399%" y="702.50"></text></g><g><title>__call__ (utils/loss_helper.py:159) (952 samples, 0.13%)</title><rect x="51.4331%" y="692" width="0.1310%" height="15" fill="rgb(206,32,51)" fg:x="373906" fg:w="952"/><text x="51.6831%" y="702.50"></text></g><g><title>compute_losses (modeling/vectornet_lightning.py:420) (36,454 samples, 5.01%)</title><rect x="46.5503%" y="676" width="5.0145%" height="15" fill="rgb(250,172,42)" fg:x="338409" fg:w="36454"/><text x="46.8003%" y="686.50">comput..</text></g><g><title>compute_losses (modeling/vectornet_lightning.py:424) (727 samples, 0.10%)</title><rect x="51.5674%" y="676" width="0.1000%" height="15" fill="rgb(209,34,43)" fg:x="374882" fg:w="727"/><text x="51.8174%" y="686.50"></text></g><g><title>__to_tensor (lightning/pytorch/core/module.py:619) (1,255 samples, 0.17%)</title><rect x="51.9161%" y="740" width="0.1726%" height="15" fill="rgb(223,11,35)" fg:x="377417" fg:w="1255"/><text x="52.1661%" y="750.50"></text></g><g><title>log (lightning/pytorch/core/module.py:447) (1,544 samples, 0.21%)</title><rect x="51.9016%" y="708" width="0.2124%" height="15" fill="rgb(251,219,26)" fg:x="377312" fg:w="1544"/><text x="52.1516%" y="718.50"></text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:51) (1,480 samples, 0.20%)</title><rect x="51.9105%" y="724" width="0.2036%" height="15" fill="rgb(231,119,3)" fg:x="377376" fg:w="1480"/><text x="52.1605%" y="734.50"></text></g><g><title>getfullargspec (inspect.py:1162) (823 samples, 0.11%)</title><rect x="52.1548%" y="740" width="0.1132%" height="15" fill="rgb(216,97,11)" fg:x="379152" fg:w="823"/><text x="52.4048%" y="750.50"></text></g><g><title>_signature_from_callable (inspect.py:2266) (747 samples, 0.10%)</title><rect x="52.1652%" y="756" width="0.1028%" height="15" fill="rgb(223,59,9)" fg:x="379228" fg:w="747"/><text x="52.4152%" y="766.50"></text></g><g><title>is_param_in_hook_signature (lightning/pytorch/utilities/signature_utils.py:31) (1,092 samples, 0.15%)</title><rect x="52.1465%" y="724" width="0.1502%" height="15" fill="rgb(233,93,31)" fg:x="379092" fg:w="1092"/><text x="52.3965%" y="734.50"></text></g><g><title>log (lightning/pytorch/core/module.py:476) (1,192 samples, 0.16%)</title><rect x="52.1362%" y="708" width="0.1640%" height="15" fill="rgb(239,81,33)" fg:x="379017" fg:w="1192"/><text x="52.3862%" y="718.50"></text></g><g><title>barrier (torch/distributed/distributed_c10d.py:3698) (3,115 samples, 0.43%)</title><rect x="52.8141%" y="868" width="0.4285%" height="15" fill="rgb(213,120,34)" fg:x="383945" fg:w="3115"/><text x="53.0641%" y="878.50"></text></g><g><title>_sync_ddp (lightning/fabric/utilities/distributed.py:160) (116,257 samples, 15.99%)</title><rect x="52.7315%" y="836" width="15.9919%" height="15" fill="rgb(243,49,53)" fg:x="383345" fg:w="116257"/><text x="52.9815%" y="846.50">_sync_ddp (lightning/fabr..</text></g><g><title>wrapper (torch/distributed/c10d_logger.py:47) (116,226 samples, 15.99%)</title><rect x="52.7358%" y="852" width="15.9876%" height="15" fill="rgb(247,216,33)" fg:x="383376" fg:w="116226"/><text x="52.9858%" y="862.50">wrapper (torch/distribute..</text></g><g><title>barrier (torch/distributed/distributed_c10d.py:3703) (112,541 samples, 15.48%)</title><rect x="53.2427%" y="868" width="15.4807%" height="15" fill="rgb(226,26,14)" fg:x="387061" fg:w="112541"/><text x="53.4927%" y="878.50">barrier (torch/distribut..</text></g><g><title>all_reduce (torch/distributed/distributed_c10d.py:2050) (830 samples, 0.11%)</title><rect x="68.7817%" y="868" width="0.1142%" height="15" fill="rgb(215,49,53)" fg:x="500026" fg:w="830"/><text x="69.0317%" y="878.50"></text></g><g><title>_sync_ddp (lightning/fabric/utilities/distributed.py:161) (1,327 samples, 0.18%)</title><rect x="68.7234%" y="836" width="0.1825%" height="15" fill="rgb(245,162,40)" fg:x="499602" fg:w="1327"/><text x="68.9734%" y="846.50"></text></g><g><title>wrapper (torch/distributed/c10d_logger.py:47) (1,290 samples, 0.18%)</title><rect x="68.7285%" y="852" width="0.1774%" height="15" fill="rgb(229,68,17)" fg:x="499639" fg:w="1290"/><text x="68.9785%" y="862.50"></text></g><g><title>reduce (lightning/pytorch/strategies/ddp.py:324) (118,085 samples, 16.24%)</title><rect x="52.6760%" y="804" width="16.2433%" height="15" fill="rgb(213,182,10)" fg:x="382941" fg:w="118085"/><text x="52.9260%" y="814.50">reduce (lightning/pytorch..</text></g><g><title>_sync_ddp_if_available (lightning/fabric/utilities/distributed.py:111) (117,938 samples, 16.22%)</title><rect x="52.6962%" y="820" width="16.2231%" height="15" fill="rgb(245,125,30)" fg:x="383088" fg:w="117938"/><text x="52.9462%" y="830.50">_sync_ddp_if_available (l..</text></g><g><title>update (lightning/pytorch/trainer/connectors/logger_connector/result.py:220) (119,131 samples, 16.39%)</title><rect x="52.5323%" y="788" width="16.3872%" height="15" fill="rgb(232,202,2)" fg:x="381897" fg:w="119131"/><text x="52.7823%" y="798.50">update (lightning/pytorch..</text></g><g><title>update (lightning/pytorch/trainer/connectors/logger_connector/result.py:229) (770 samples, 0.11%)</title><rect x="68.9223%" y="788" width="0.1059%" height="15" fill="rgb(237,140,51)" fg:x="501048" fg:w="770"/><text x="69.1723%" y="798.50"></text></g><g><title>wrapped_func (torchmetrics/metric.py:446) (120,285 samples, 16.55%)</title><rect x="52.5202%" y="772" width="16.5460%" height="15" fill="rgb(236,157,25)" fg:x="381809" fg:w="120285"/><text x="52.7702%" y="782.50">wrapped_func (torchmetrics..</text></g><g><title>update_metrics (lightning/pytorch/trainer/connectors/logger_connector/result.py:421) (120,778 samples, 16.61%)</title><rect x="52.4638%" y="740" width="16.6138%" height="15" fill="rgb(219,209,0)" fg:x="381399" fg:w="120778"/><text x="52.7138%" y="750.50">update_metrics (lightning/..</text></g><g><title>forward (lightning/pytorch/trainer/connectors/logger_connector/result.py:262) (120,667 samples, 16.60%)</title><rect x="52.4791%" y="756" width="16.5985%" height="15" fill="rgb(240,116,54)" fg:x="381510" fg:w="120667"/><text x="52.7291%" y="766.50">forward (lightning/pytorch..</text></g><g><title>log (lightning/pytorch/core/module.py:493) (121,969 samples, 16.78%)</title><rect x="52.3006%" y="708" width="16.7776%" height="15" fill="rgb(216,10,36)" fg:x="380212" fg:w="121969"/><text x="52.5506%" y="718.50">log (lightning/pytorch/cor..</text></g><g><title>log (lightning/pytorch/trainer/connectors/logger_connector/result.py:407) (120,797 samples, 16.62%)</title><rect x="52.4618%" y="724" width="16.6164%" height="15" fill="rgb(222,72,44)" fg:x="381384" fg:w="120797"/><text x="52.7118%" y="734.50">log (lightning/pytorch/tra..</text></g><g><title>add_log (modeling/vectornet_lightning.py:745) (126,174 samples, 17.36%)</title><rect x="51.7608%" y="692" width="17.3560%" height="15" fill="rgb(232,159,9)" fg:x="376288" fg:w="126174"/><text x="52.0108%" y="702.50">add_log (modeling/vectornet..</text></g><g><title>compute_losses (modeling/vectornet_lightning.py:430) (126,705 samples, 17.43%)</title><rect x="51.7297%" y="676" width="17.4291%" height="15" fill="rgb(210,39,32)" fg:x="376062" fg:w="126705"/><text x="51.9797%" y="686.50">compute_losses (modeling/ve..</text></g><g><title>compute_losses (modeling/vectornet_lightning.py:433) (895 samples, 0.12%)</title><rect x="69.1588%" y="676" width="0.1231%" height="15" fill="rgb(216,194,45)" fg:x="502767" fg:w="895"/><text x="69.4088%" y="686.50"></text></g><g><title>_named_members (torch/nn/modules/module.py:2160) (1,149 samples, 0.16%)</title><rect x="71.9256%" y="756" width="0.1581%" height="15" fill="rgb(218,18,35)" fg:x="522881" fg:w="1149"/><text x="72.1756%" y="766.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2377) (1,099 samples, 0.15%)</title><rect x="71.9325%" y="772" width="0.1512%" height="15" fill="rgb(207,83,51)" fg:x="522931" fg:w="1099"/><text x="72.1825%" y="782.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2377) (1,064 samples, 0.15%)</title><rect x="71.9373%" y="788" width="0.1464%" height="15" fill="rgb(225,63,43)" fg:x="522966" fg:w="1064"/><text x="72.1873%" y="798.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2377) (1,016 samples, 0.14%)</title><rect x="71.9439%" y="804" width="0.1398%" height="15" fill="rgb(207,57,36)" fg:x="523014" fg:w="1016"/><text x="72.1939%" y="814.50"></text></g><g><title>named_modules (torch/nn/modules/module.py:2377) (929 samples, 0.13%)</title><rect x="71.9558%" y="820" width="0.1278%" height="15" fill="rgb(216,99,33)" fg:x="523101" fg:w="929"/><text x="72.2058%" y="830.50"></text></g><g><title>parameters (torch/nn/modules/module.py:2192) (2,055 samples, 0.28%)</title><rect x="71.9132%" y="724" width="0.2827%" height="15" fill="rgb(225,42,16)" fg:x="522791" fg:w="2055"/><text x="72.1632%" y="734.50"></text></g><g><title>named_parameters (torch/nn/modules/module.py:2226) (2,009 samples, 0.28%)</title><rect x="71.9195%" y="740" width="0.2764%" height="15" fill="rgb(220,201,45)" fg:x="522837" fg:w="2009"/><text x="72.1695%" y="750.50"></text></g><g><title>compute_losses (modeling/vectornet_lightning.py:438) (21,190 samples, 2.91%)</title><rect x="69.2827%" y="676" width="2.9148%" height="15" fill="rgb(225,33,4)" fg:x="503668" fg:w="21190"/><text x="69.5327%" y="686.50">co..</text></g><g><title>_get_l1_loss (modeling/vectornet_lightning.py:89) (21,111 samples, 2.90%)</title><rect x="69.2936%" y="692" width="2.9040%" height="15" fill="rgb(224,33,50)" fg:x="503747" fg:w="21111"/><text x="69.5436%" y="702.50">_g..</text></g><g><title>&lt;genexpr&gt; (modeling/vectornet_lightning.py:89) (16,668 samples, 2.29%)</title><rect x="69.9047%" y="708" width="2.2928%" height="15" fill="rgb(246,198,51)" fg:x="508190" fg:w="16668"/><text x="70.1547%" y="718.50">&lt;..</text></g><g><title>_sync_ddp (lightning/fabric/utilities/distributed.py:160) (8,378 samples, 1.15%)</title><rect x="72.2997%" y="836" width="1.1524%" height="15" fill="rgb(205,22,4)" fg:x="525601" fg:w="8378"/><text x="72.5497%" y="846.50"></text></g><g><title>wrapper (torch/distributed/c10d_logger.py:47) (8,373 samples, 1.15%)</title><rect x="72.3004%" y="852" width="1.1518%" height="15" fill="rgb(206,3,8)" fg:x="525606" fg:w="8373"/><text x="72.5504%" y="862.50"></text></g><g><title>barrier (torch/distributed/distributed_c10d.py:3703) (8,088 samples, 1.11%)</title><rect x="72.3396%" y="868" width="1.1126%" height="15" fill="rgb(251,23,15)" fg:x="525891" fg:w="8088"/><text x="72.5896%" y="878.50"></text></g><g><title>update (lightning/pytorch/trainer/connectors/logger_connector/result.py:220) (8,619 samples, 1.19%)</title><rect x="72.2849%" y="788" width="1.1856%" height="15" fill="rgb(252,88,28)" fg:x="525493" fg:w="8619"/><text x="72.5349%" y="798.50"></text></g><g><title>reduce (lightning/pytorch/strategies/ddp.py:324) (8,537 samples, 1.17%)</title><rect x="72.2962%" y="804" width="1.1743%" height="15" fill="rgb(212,127,14)" fg:x="525575" fg:w="8537"/><text x="72.5462%" y="814.50"></text></g><g><title>_sync_ddp_if_available (lightning/fabric/utilities/distributed.py:111) (8,530 samples, 1.17%)</title><rect x="72.2971%" y="820" width="1.1734%" height="15" fill="rgb(247,145,37)" fg:x="525582" fg:w="8530"/><text x="72.5471%" y="830.50"></text></g><g><title>wrapped_func (torchmetrics/metric.py:446) (8,734 samples, 1.20%)</title><rect x="72.2841%" y="772" width="1.2014%" height="15" fill="rgb(209,117,53)" fg:x="525487" fg:w="8734"/><text x="72.5341%" y="782.50"></text></g><g><title>update_metrics (lightning/pytorch/trainer/connectors/logger_connector/result.py:421) (8,768 samples, 1.21%)</title><rect x="72.2802%" y="740" width="1.2061%" height="15" fill="rgb(212,90,42)" fg:x="525459" fg:w="8768"/><text x="72.5302%" y="750.50"></text></g><g><title>forward (lightning/pytorch/trainer/connectors/logger_connector/result.py:262) (8,763 samples, 1.21%)</title><rect x="72.2809%" y="756" width="1.2054%" height="15" fill="rgb(218,164,37)" fg:x="525464" fg:w="8763"/><text x="72.5309%" y="766.50"></text></g><g><title>log (lightning/pytorch/core/module.py:493) (8,872 samples, 1.22%)</title><rect x="72.2662%" y="708" width="1.2204%" height="15" fill="rgb(246,65,34)" fg:x="525357" fg:w="8872"/><text x="72.5162%" y="718.50"></text></g><g><title>log (lightning/pytorch/trainer/connectors/logger_connector/result.py:407) (8,772 samples, 1.21%)</title><rect x="72.2799%" y="724" width="1.2066%" height="15" fill="rgb(231,100,33)" fg:x="525457" fg:w="8772"/><text x="72.5299%" y="734.50"></text></g><g><title>add_log (modeling/vectornet_lightning.py:745) (9,298 samples, 1.28%)</title><rect x="72.2111%" y="692" width="1.2790%" height="15" fill="rgb(228,126,14)" fg:x="524957" fg:w="9298"/><text x="72.4611%" y="702.50"></text></g><g><title>compute_losses (modeling/vectornet_lightning.py:439) (9,421 samples, 1.30%)</title><rect x="72.1975%" y="676" width="1.2959%" height="15" fill="rgb(215,173,21)" fg:x="524858" fg:w="9421"/><text x="72.4475%" y="686.50"></text></g><g><title>add_log (modeling/vectornet_lightning.py:740) (1,251 samples, 0.17%)</title><rect x="73.4999%" y="692" width="0.1721%" height="15" fill="rgb(210,6,40)" fg:x="534326" fg:w="1251"/><text x="73.7499%" y="702.50"></text></g><g><title>_sync_ddp (lightning/fabric/utilities/distributed.py:160) (1,792 samples, 0.25%)</title><rect x="73.7384%" y="836" width="0.2465%" height="15" fill="rgb(212,48,18)" fg:x="536060" fg:w="1792"/><text x="73.9884%" y="846.50"></text></g><g><title>wrapper (torch/distributed/c10d_logger.py:47) (1,791 samples, 0.25%)</title><rect x="73.7386%" y="852" width="0.2464%" height="15" fill="rgb(230,214,11)" fg:x="536061" fg:w="1791"/><text x="73.9886%" y="862.50"></text></g><g><title>barrier (torch/distributed/distributed_c10d.py:3703) (1,500 samples, 0.21%)</title><rect x="73.7786%" y="868" width="0.2063%" height="15" fill="rgb(254,105,39)" fg:x="536352" fg:w="1500"/><text x="74.0286%" y="878.50"></text></g><g><title>reduce (lightning/pytorch/strategies/ddp.py:324) (1,935 samples, 0.27%)</title><rect x="73.7355%" y="804" width="0.2662%" height="15" fill="rgb(245,158,5)" fg:x="536039" fg:w="1935"/><text x="73.9855%" y="814.50"></text></g><g><title>_sync_ddp_if_available (lightning/fabric/utilities/distributed.py:111) (1,927 samples, 0.27%)</title><rect x="73.7366%" y="820" width="0.2651%" height="15" fill="rgb(249,208,11)" fg:x="536047" fg:w="1927"/><text x="73.9866%" y="830.50"></text></g><g><title>update (lightning/pytorch/trainer/connectors/logger_connector/result.py:220) (2,023 samples, 0.28%)</title><rect x="73.7236%" y="788" width="0.2783%" height="15" fill="rgb(210,39,28)" fg:x="535952" fg:w="2023"/><text x="73.9736%" y="798.50"></text></g><g><title>wrapped_func (torchmetrics/metric.py:446) (2,127 samples, 0.29%)</title><rect x="73.7229%" y="772" width="0.2926%" height="15" fill="rgb(211,56,53)" fg:x="535947" fg:w="2127"/><text x="73.9729%" y="782.50"></text></g><g><title>update_metrics (lightning/pytorch/trainer/connectors/logger_connector/result.py:421) (2,160 samples, 0.30%)</title><rect x="73.7195%" y="740" width="0.2971%" height="15" fill="rgb(226,201,30)" fg:x="535922" fg:w="2160"/><text x="73.9695%" y="750.50"></text></g><g><title>forward (lightning/pytorch/trainer/connectors/logger_connector/result.py:262) (2,152 samples, 0.30%)</title><rect x="73.7206%" y="756" width="0.2960%" height="15" fill="rgb(239,101,34)" fg:x="535930" fg:w="2152"/><text x="73.9706%" y="766.50"></text></g><g><title>log (lightning/pytorch/core/module.py:493) (2,256 samples, 0.31%)</title><rect x="73.7065%" y="708" width="0.3103%" height="15" fill="rgb(226,209,5)" fg:x="535828" fg:w="2256"/><text x="73.9565%" y="718.50"></text></g><g><title>log (lightning/pytorch/trainer/connectors/logger_connector/result.py:407) (2,162 samples, 0.30%)</title><rect x="73.7195%" y="724" width="0.2974%" height="15" fill="rgb(250,105,47)" fg:x="535922" fg:w="2162"/><text x="73.9695%" y="734.50"></text></g><g><title>add_log (modeling/vectornet_lightning.py:745) (2,522 samples, 0.35%)</title><rect x="73.6721%" y="692" width="0.3469%" height="15" fill="rgb(230,72,3)" fg:x="535578" fg:w="2522"/><text x="73.9221%" y="702.50"></text></g><g><title>training_step (modeling/vectornet_lightning.py:453) (200,028 samples, 27.52%)</title><rect x="46.5060%" y="660" width="27.5151%" height="15" fill="rgb(232,218,39)" fg:x="338087" fg:w="200028"/><text x="46.7560%" y="670.50">training_step (modeling/vectornet_lightning...</text></g><g><title>compute_losses (modeling/vectornet_lightning.py:441) (3,793 samples, 0.52%)</title><rect x="73.4994%" y="676" width="0.5218%" height="15" fill="rgb(248,166,6)" fg:x="534322" fg:w="3793"/><text x="73.7494%" y="686.50"></text></g><g><title>forward (torch/nn/parallel/distributed.py:1519) (453,856 samples, 62.43%)</title><rect x="11.5906%" y="580" width="62.4308%" height="15" fill="rgb(247,89,20)" fg:x="84261" fg:w="453856"/><text x="11.8406%" y="590.50">forward (torch/nn/parallel/distributed.py:1519)</text></g><g><title>_run_ddp_forward (torch/nn/parallel/distributed.py:1355) (453,806 samples, 62.42%)</title><rect x="11.5975%" y="596" width="62.4239%" height="15" fill="rgb(248,130,54)" fg:x="84311" fg:w="453806"/><text x="11.8475%" y="606.50">_run_ddp_forward (torch/nn/parallel/distributed.py:1355)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (453,775 samples, 62.42%)</title><rect x="11.6018%" y="612" width="62.4196%" height="15" fill="rgb(234,196,4)" fg:x="84342" fg:w="453775"/><text x="11.8518%" y="622.50">_wrapped_call_impl (torch/nn/modules/module.py:1518)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (453,768 samples, 62.42%)</title><rect x="11.6027%" y="628" width="62.4187%" height="15" fill="rgb(250,143,31)" fg:x="84349" fg:w="453768"/><text x="11.8527%" y="638.50">_call_impl (torch/nn/modules/module.py:1527)</text></g><g><title>forward (lightning/pytorch/overrides/base.py:90) (453,732 samples, 62.41%)</title><rect x="11.6077%" y="644" width="62.4137%" height="15" fill="rgb(211,110,34)" fg:x="84385" fg:w="453732"/><text x="11.8577%" y="654.50">forward (lightning/pytorch/overrides/base.py:90)</text></g><g><title>_post_forward (torch/nn/parallel/distributed.py:1468) (1,607 samples, 0.22%)</title><rect x="74.0386%" y="596" width="0.2211%" height="15" fill="rgb(215,124,48)" fg:x="538242" fg:w="1607"/><text x="74.2886%" y="606.50"></text></g><g><title>_call_strategy_hook (lightning/pytorch/trainer/call.py:294) (471,553 samples, 64.87%)</title><rect x="9.4311%" y="516" width="64.8651%" height="15" fill="rgb(216,46,13)" fg:x="68562" fg:w="471553"/><text x="9.6811%" y="526.50">_call_strategy_hook (lightning/pytorch/trainer/call.py:294)</text></g><g><title>training_step (lightning/pytorch/strategies/ddp.py:330) (471,285 samples, 64.83%)</title><rect x="9.4680%" y="532" width="64.8282%" height="15" fill="rgb(205,184,25)" fg:x="68830" fg:w="471285"/><text x="9.7180%" y="542.50">training_step (lightning/pytorch/strategies/ddp.py:330)</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (471,258 samples, 64.82%)</title><rect x="9.4717%" y="548" width="64.8245%" height="15" fill="rgb(228,1,10)" fg:x="68857" fg:w="471258"/><text x="9.7217%" y="558.50">_wrapped_call_impl (torch/nn/modules/module.py:1518)</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (471,245 samples, 64.82%)</title><rect x="9.4735%" y="564" width="64.8227%" height="15" fill="rgb(213,116,27)" fg:x="68870" fg:w="471245"/><text x="9.7235%" y="574.50">_call_impl (torch/nn/modules/module.py:1527)</text></g><g><title>forward (torch/nn/parallel/distributed.py:1521) (1,998 samples, 0.27%)</title><rect x="74.0214%" y="580" width="0.2748%" height="15" fill="rgb(241,95,50)" fg:x="538117" fg:w="1998"/><text x="74.2714%" y="590.50"></text></g><g><title>_training_step (lightning/pytorch/loops/optimization/automatic.py:315) (471,604 samples, 64.87%)</title><rect x="9.4282%" y="500" width="64.8721%" height="15" fill="rgb(238,48,32)" fg:x="68541" fg:w="471604"/><text x="9.6782%" y="510.50">_training_step (lightning/pytorch/loops/optimization/automatic.py:315)</text></g><g><title>closure (lightning/pytorch/loops/optimization/automatic.py:128) (472,263 samples, 64.96%)</title><rect x="9.4269%" y="484" width="64.9628%" height="15" fill="rgb(235,113,49)" fg:x="68531" fg:w="472263"/><text x="9.6769%" y="494.50">closure (lightning/pytorch/loops/optimization/automatic.py:128)</text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,023 samples, 0.14%)</title><rect x="74.4347%" y="580" width="0.1407%" height="15" fill="rgb(205,127,43)" fg:x="541122" fg:w="1023"/><text x="74.6847%" y="590.50"></text></g><g><title>_call_lightning_module_hook (lightning/pytorch/trainer/call.py:146) (1,238 samples, 0.17%)</title><rect x="74.4275%" y="532" width="0.1703%" height="15" fill="rgb(250,162,2)" fg:x="541069" fg:w="1238"/><text x="74.6775%" y="542.50"></text></g><g><title>optimizer_zero_grad (lightning/pytorch/core/module.py:1292) (1,227 samples, 0.17%)</title><rect x="74.4290%" y="548" width="0.1688%" height="15" fill="rgb(220,13,41)" fg:x="541080" fg:w="1227"/><text x="74.6790%" y="558.50"></text></g><g><title>inner (torch/_compile.py:24) (1,218 samples, 0.17%)</title><rect x="74.4302%" y="564" width="0.1675%" height="15" fill="rgb(249,221,25)" fg:x="541089" fg:w="1218"/><text x="74.6802%" y="574.50"></text></g><g><title>_optimizer_zero_grad (lightning/pytorch/loops/optimization/automatic.py:299) (1,286 samples, 0.18%)</title><rect x="74.4243%" y="516" width="0.1769%" height="15" fill="rgb(215,208,19)" fg:x="541046" fg:w="1286"/><text x="74.6743%" y="526.50"></text></g><g><title>closure (lightning/pytorch/loops/optimization/automatic.py:134) (1,541 samples, 0.21%)</title><rect x="74.3903%" y="484" width="0.2120%" height="15" fill="rgb(236,175,2)" fg:x="540799" fg:w="1541"/><text x="74.6403%" y="494.50"></text></g><g><title>zero_grad_fn (lightning/pytorch/loops/optimization/automatic.py:222) (1,297 samples, 0.18%)</title><rect x="74.4239%" y="500" width="0.1784%" height="15" fill="rgb(241,52,2)" fg:x="541043" fg:w="1297"/><text x="74.6739%" y="510.50"></text></g><g><title>backward (torch/autograd/__init__.py:251) (2,776 samples, 0.38%)</title><rect x="74.6779%" y="596" width="0.3819%" height="15" fill="rgb(248,140,14)" fg:x="542890" fg:w="2776"/><text x="74.9279%" y="606.50"></text></g><g><title>backward (lightning/pytorch/plugins/precision/precision_plugin.py:69) (2,928 samples, 0.40%)</title><rect x="74.6572%" y="548" width="0.4028%" height="15" fill="rgb(253,22,42)" fg:x="542739" fg:w="2928"/><text x="74.9072%" y="558.50"></text></g><g><title>backward (lightning/pytorch/core/module.py:1058) (2,924 samples, 0.40%)</title><rect x="74.6577%" y="564" width="0.4022%" height="15" fill="rgb(234,61,47)" fg:x="542743" fg:w="2924"/><text x="74.9077%" y="574.50"></text></g><g><title>backward (torch/_tensor.py:492) (2,922 samples, 0.40%)</title><rect x="74.6580%" y="580" width="0.4019%" height="15" fill="rgb(208,226,15)" fg:x="542745" fg:w="2922"/><text x="74.9080%" y="590.50"></text></g><g><title>backward (lightning/pytorch/strategies/strategy.py:205) (2,932 samples, 0.40%)</title><rect x="74.6568%" y="532" width="0.4033%" height="15" fill="rgb(217,221,4)" fg:x="542736" fg:w="2932"/><text x="74.9068%" y="542.50"></text></g><g><title>_call_strategy_hook (lightning/pytorch/trainer/call.py:294) (3,296 samples, 0.45%)</title><rect x="74.6158%" y="516" width="0.4534%" height="15" fill="rgb(212,174,34)" fg:x="542438" fg:w="3296"/><text x="74.8658%" y="526.50"></text></g><g><title>__call__ (lightning/pytorch/loops/optimization/automatic.py:142) (477,244 samples, 65.65%)</title><rect x="9.4223%" y="452" width="65.6479%" height="15" fill="rgb(253,83,4)" fg:x="68498" fg:w="477244"/><text x="9.6723%" y="462.50">__call__ (lightning/pytorch/loops/optimization/automatic.py:142)</text></g><g><title>decorate_context (torch/utils/_contextlib.py:115) (477,233 samples, 65.65%)</title><rect x="9.4238%" y="468" width="65.6464%" height="15" fill="rgb(250,195,49)" fg:x="68509" fg:w="477233"/><text x="9.6738%" y="478.50">decorate_context (torch/utils/_contextlib.py:115)</text></g><g><title>closure (lightning/pytorch/loops/optimization/automatic.py:137) (3,400 samples, 0.47%)</title><rect x="74.6026%" y="484" width="0.4677%" height="15" fill="rgb(241,192,25)" fg:x="542342" fg:w="3400"/><text x="74.8526%" y="494.50"></text></g><g><title>backward_fn (lightning/pytorch/loops/optimization/automatic.py:237) (3,397 samples, 0.47%)</title><rect x="74.6030%" y="500" width="0.4673%" height="15" fill="rgb(208,124,10)" fg:x="542345" fg:w="3397"/><text x="74.8530%" y="510.50"></text></g><g><title>_wrap_closure (lightning/pytorch/plugins/precision/precision_plugin.py:103) (477,248 samples, 65.65%)</title><rect x="9.4222%" y="436" width="65.6485%" height="15" fill="rgb(222,33,0)" fg:x="68497" fg:w="477248"/><text x="9.6722%" y="446.50">_wrap_closure (lightning/pytorch/plugins/precision/precision_plugin.py:103)</text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:39) (1,980 samples, 0.27%)</title><rect x="75.1594%" y="564" width="0.2724%" height="15" fill="rgb(234,209,28)" fg:x="546390" fg:w="1980"/><text x="75.4094%" y="574.50"></text></g><g><title>&lt;listcomp&gt; (torch/nn/utils/clip_grad.py:39) (1,974 samples, 0.27%)</title><rect x="75.1602%" y="580" width="0.2715%" height="15" fill="rgb(224,11,23)" fg:x="546396" fg:w="1974"/><text x="75.4102%" y="590.50"></text></g><g><title>&lt;listcomp&gt; (torch/nn/utils/clip_grad.py:46) (915 samples, 0.13%)</title><rect x="75.4357%" y="580" width="0.1259%" height="15" fill="rgb(232,99,1)" fg:x="548399" fg:w="915"/><text x="75.6857%" y="590.50"></text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:46) (1,078 samples, 0.15%)</title><rect x="75.4348%" y="564" width="0.1483%" height="15" fill="rgb(237,95,45)" fg:x="548392" fg:w="1078"/><text x="75.6848%" y="574.50"></text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:55) (897 samples, 0.12%)</title><rect x="75.6000%" y="564" width="0.1234%" height="15" fill="rgb(208,109,11)" fg:x="549593" fg:w="897"/><text x="75.8500%" y="574.50"></text></g><g><title>clip_grad_norm_ (torch/nn/utils/clip_grad.py:61) (799 samples, 0.11%)</title><rect x="75.7234%" y="564" width="0.1099%" height="15" fill="rgb(216,190,48)" fg:x="550490" fg:w="799"/><text x="75.9734%" y="574.50"></text></g><g><title>clip_gradients (lightning/pytorch/plugins/precision/precision_plugin.py:149) (5,842 samples, 0.80%)</title><rect x="75.1125%" y="532" width="0.8036%" height="15" fill="rgb(251,171,36)" fg:x="546049" fg:w="5842"/><text x="75.3625%" y="542.50"></text></g><g><title>clip_grad_by_norm (lightning/pytorch/plugins/precision/precision_plugin.py:159) (5,836 samples, 0.80%)</title><rect x="75.1133%" y="548" width="0.8028%" height="15" fill="rgb(230,62,22)" fg:x="546055" fg:w="5836"/><text x="75.3633%" y="558.50"></text></g><g><title>_call_lightning_module_hook (lightning/pytorch/trainer/call.py:146) (5,997 samples, 0.82%)</title><rect x="75.0914%" y="484" width="0.8249%" height="15" fill="rgb(225,114,35)" fg:x="545896" fg:w="5997"/><text x="75.3414%" y="494.50"></text></g><g><title>configure_gradient_clipping (lightning/pytorch/core/module.py:1198) (5,970 samples, 0.82%)</title><rect x="75.0952%" y="500" width="0.8212%" height="15" fill="rgb(215,118,42)" fg:x="545923" fg:w="5970"/><text x="75.3452%" y="510.50"></text></g><g><title>clip_gradients (lightning/pytorch/core/module.py:1170) (5,872 samples, 0.81%)</title><rect x="75.1086%" y="516" width="0.8077%" height="15" fill="rgb(243,119,21)" fg:x="546021" fg:w="5872"/><text x="75.3586%" y="526.50"></text></g><g><title>step (torch/optim/adamw.py:161) (483,434 samples, 66.50%)</title><rect x="9.4204%" y="420" width="66.4994%" height="15" fill="rgb(252,177,53)" fg:x="68484" fg:w="483434"/><text x="9.6704%" y="430.50">step (torch/optim/adamw.py:161)</text></g><g><title>_wrap_closure (lightning/pytorch/plugins/precision/precision_plugin.py:104) (6,173 samples, 0.85%)</title><rect x="75.0707%" y="436" width="0.8491%" height="15" fill="rgb(237,209,29)" fg:x="545745" fg:w="6173"/><text x="75.3207%" y="446.50"></text></g><g><title>_after_closure (lightning/pytorch/plugins/precision/precision_plugin.py:84) (6,049 samples, 0.83%)</title><rect x="75.0877%" y="452" width="0.8321%" height="15" fill="rgb(212,65,23)" fg:x="545869" fg:w="6049"/><text x="75.3377%" y="462.50"></text></g><g><title>_clip_gradients (lightning/pytorch/plugins/precision/precision_plugin.py:129) (6,041 samples, 0.83%)</title><rect x="75.0888%" y="468" width="0.8310%" height="15" fill="rgb(230,222,46)" fg:x="545877" fg:w="6041"/><text x="75.3388%" y="478.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (1,028 samples, 0.14%)</title><rect x="75.9250%" y="436" width="0.1414%" height="15" fill="rgb(215,135,32)" fg:x="551956" fg:w="1028"/><text x="76.1750%" y="446.50"></text></g><g><title>step (torch/optim/adamw.py:173) (1,067 samples, 0.15%)</title><rect x="75.9205%" y="420" width="0.1468%" height="15" fill="rgb(246,101,22)" fg:x="551923" fg:w="1067"/><text x="76.1705%" y="430.50"></text></g><g><title>_multi_tensor_adamw (torch/optim/adamw.py:533) (2,015 samples, 0.28%)</title><rect x="76.3605%" y="452" width="0.2772%" height="15" fill="rgb(206,107,13)" fg:x="555122" fg:w="2015"/><text x="76.6105%" y="462.50"></text></g><g><title>_multi_tensor_adamw (torch/optim/adamw.py:599) (2,680 samples, 0.37%)</title><rect x="76.9149%" y="452" width="0.3687%" height="15" fill="rgb(250,100,44)" fg:x="559152" fg:w="2680"/><text x="77.1649%" y="462.50"></text></g><g><title>step (torch/optim/adamw.py:184) (9,546 samples, 1.31%)</title><rect x="76.0673%" y="420" width="1.3131%" height="15" fill="rgb(231,147,38)" fg:x="552990" fg:w="9546"/><text x="76.3173%" y="430.50"></text></g><g><title>adamw (torch/optim/adamw.py:335) (9,028 samples, 1.24%)</title><rect x="76.1385%" y="436" width="1.2419%" height="15" fill="rgb(229,8,40)" fg:x="553508" fg:w="9028"/><text x="76.3885%" y="446.50"></text></g><g><title>_use_grad (torch/optim/optimizer.py:76) (494,166 samples, 67.98%)</title><rect x="9.4057%" y="404" width="67.9757%" height="15" fill="rgb(221,135,30)" fg:x="68377" fg:w="494166"/><text x="9.6557%" y="414.50">_use_grad (torch/optim/optimizer.py:76)</text></g><g><title>optimizer_step (lightning/pytorch/plugins/precision/precision_plugin.py:116) (494,234 samples, 67.99%)</title><rect x="9.4002%" y="372" width="67.9850%" height="15" fill="rgb(249,193,18)" fg:x="68337" fg:w="494234"/><text x="9.6502%" y="382.50">optimizer_step (lightning/pytorch/plugins/precision/precision_plugin.py:116)</text></g><g><title>wrapper (torch/optim/lr_scheduler.py:68) (494,223 samples, 67.98%)</title><rect x="9.4017%" y="388" width="67.9835%" height="15" fill="rgb(209,133,39)" fg:x="68348" fg:w="494223"/><text x="9.6517%" y="398.50">wrapper (torch/optim/lr_scheduler.py:68)</text></g><g><title>step (lightning/pytorch/core/optimizer.py:161) (494,254 samples, 67.99%)</title><rect x="9.3976%" y="324" width="67.9878%" height="15" fill="rgb(232,100,14)" fg:x="68318" fg:w="494254"/><text x="9.6476%" y="334.50">step (lightning/pytorch/core/optimizer.py:161)</text></g><g><title>optimizer_step (lightning/pytorch/strategies/ddp.py:257) (494,250 samples, 67.99%)</title><rect x="9.3981%" y="340" width="67.9872%" height="15" fill="rgb(224,185,1)" fg:x="68322" fg:w="494250"/><text x="9.6481%" y="350.50">optimizer_step (lightning/pytorch/strategies/ddp.py:257)</text></g><g><title>optimizer_step (lightning/pytorch/strategies/strategy.py:231) (494,243 samples, 67.99%)</title><rect x="9.3991%" y="356" width="67.9862%" height="15" fill="rgb(223,139,8)" fg:x="68329" fg:w="494243"/><text x="9.6491%" y="366.50">optimizer_step (lightning/pytorch/strategies/strategy.py:231)</text></g><g><title>optimizer_step (modeling/vectornet_lightning.py:838) (494,263 samples, 67.99%)</title><rect x="9.3970%" y="308" width="67.9890%" height="15" fill="rgb(232,213,38)" fg:x="68314" fg:w="494263"/><text x="9.6470%" y="318.50">optimizer_step (modeling/vectornet_lightning.py:838)</text></g><g><title>_call_lightning_module_hook (lightning/pytorch/trainer/call.py:146) (494,310 samples, 68.00%)</title><rect x="9.3930%" y="292" width="67.9955%" height="15" fill="rgb(207,94,22)" fg:x="68285" fg:w="494310"/><text x="9.6430%" y="302.50">_call_lightning_module_hook (lightning/pytorch/trainer/call.py:146)</text></g><g><title>_optimizer_step (lightning/pytorch/loops/optimization/automatic.py:266) (494,343 samples, 68.00%)</title><rect x="9.3917%" y="276" width="68.0000%" height="15" fill="rgb(219,183,54)" fg:x="68275" fg:w="494343"/><text x="9.6417%" y="286.50">_optimizer_step (lightning/pytorch/loops/optimization/automatic.py:266)</text></g><g><title>run (lightning/pytorch/loops/optimization/automatic.py:188) (494,369 samples, 68.00%)</title><rect x="9.3912%" y="260" width="68.0036%" height="15" fill="rgb(216,185,54)" fg:x="68272" fg:w="494369"/><text x="9.6412%" y="270.50">run (lightning/pytorch/loops/optimization/automatic.py:188)</text></g><g><title>advance (lightning/pytorch/loops/training_epoch_loop.py:219) (495,791 samples, 68.20%)</title><rect x="9.1974%" y="244" width="68.1992%" height="15" fill="rgb(254,217,39)" fg:x="66863" fg:w="495791"/><text x="9.4474%" y="254.50">advance (lightning/pytorch/loops/training_epoch_loop.py:219)</text></g><g><title>on_batch_end (lightning/pytorch/trainer/connectors/logger_connector/logger_connector.py:197) (953 samples, 0.13%)</title><rect x="77.4785%" y="260" width="0.1311%" height="15" fill="rgb(240,178,23)" fg:x="563249" fg:w="953"/><text x="77.7285%" y="270.50"></text></g><g><title>metrics (lightning/pytorch/trainer/connectors/logger_connector/logger_connector.py:230) (931 samples, 0.13%)</title><rect x="77.4815%" y="276" width="0.1281%" height="15" fill="rgb(218,11,47)" fg:x="563271" fg:w="931"/><text x="77.7315%" y="286.50"></text></g><g><title>advance (lightning/pytorch/loops/training_epoch_loop.py:233) (1,092 samples, 0.15%)</title><rect x="77.4778%" y="244" width="0.1502%" height="15" fill="rgb(218,51,51)" fg:x="563244" fg:w="1092"/><text x="77.7278%" y="254.50"></text></g><g><title>run (lightning/pytorch/loops/training_epoch_loop.py:133) (518,173 samples, 71.28%)</title><rect x="6.3910%" y="228" width="71.2780%" height="15" fill="rgb(238,126,27)" fg:x="46461" fg:w="518173"/><text x="6.6410%" y="238.50">run (lightning/pytorch/loops/training_epoch_loop.py:133)</text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:80) (906 samples, 0.12%)</title><rect x="77.7515%" y="436" width="0.1246%" height="15" fill="rgb(249,202,22)" fg:x="565234" fg:w="906"/><text x="78.0015%" y="446.50"></text></g><g><title>apply_to_collection (lightning_utilities/core/apply_func.py:80) (984 samples, 0.14%)</title><rect x="77.7444%" y="420" width="0.1354%" height="15" fill="rgb(254,195,49)" fg:x="565182" fg:w="984"/><text x="77.9944%" y="430.50"></text></g><g><title>_call_lightning_module_hook (lightning/pytorch/trainer/call.py:146) (985 samples, 0.14%)</title><rect x="77.7444%" y="372" width="0.1355%" height="15" fill="rgb(208,123,14)" fg:x="565182" fg:w="985"/><text x="77.9944%" y="382.50"></text></g><g><title>transfer_batch_to_device (lightning/pytorch/core/hooks.py:571) (985 samples, 0.14%)</title><rect x="77.7444%" y="388" width="0.1355%" height="15" fill="rgb(224,200,8)" fg:x="565182" fg:w="985"/><text x="77.9944%" y="398.50"></text></g><g><title>move_data_to_device (lightning/fabric/utilities/apply_func.py:101) (985 samples, 0.14%)</title><rect x="77.7444%" y="404" width="0.1355%" height="15" fill="rgb(217,61,36)" fg:x="565182" fg:w="985"/><text x="77.9944%" y="414.50"></text></g><g><title>_evaluation_step (lightning/pytorch/loops/evaluation_loop.py:361) (991 samples, 0.14%)</title><rect x="77.7439%" y="292" width="0.1363%" height="15" fill="rgb(206,35,45)" fg:x="565179" fg:w="991"/><text x="77.9939%" y="302.50"></text></g><g><title>_call_strategy_hook (lightning/pytorch/trainer/call.py:294) (989 samples, 0.14%)</title><rect x="77.7442%" y="308" width="0.1360%" height="15" fill="rgb(217,65,33)" fg:x="565181" fg:w="989"/><text x="77.9942%" y="318.50"></text></g><g><title>batch_to_device (lightning/pytorch/strategies/strategy.py:270) (988 samples, 0.14%)</title><rect x="77.7444%" y="324" width="0.1359%" height="15" fill="rgb(222,158,48)" fg:x="565182" fg:w="988"/><text x="77.9944%" y="334.50"></text></g><g><title>_apply_batch_transfer_handler (lightning/pytorch/core/module.py:326) (988 samples, 0.14%)</title><rect x="77.7444%" y="340" width="0.1359%" height="15" fill="rgb(254,2,54)" fg:x="565182" fg:w="988"/><text x="77.9944%" y="350.50"></text></g><g><title>_call_batch_hook (lightning/pytorch/core/module.py:315) (988 samples, 0.14%)</title><rect x="77.7444%" y="356" width="0.1359%" height="15" fill="rgb(250,143,38)" fg:x="565182" fg:w="988"/><text x="77.9944%" y="366.50"></text></g><g><title>forward (torch/nn/parallel/distributed.py:1515) (948 samples, 0.13%)</title><rect x="77.8844%" y="372" width="0.1304%" height="15" fill="rgb(248,25,0)" fg:x="566200" fg:w="948"/><text x="78.1344%" y="382.50"></text></g><g><title>_pre_forward (torch/nn/parallel/distributed.py:1423) (948 samples, 0.13%)</title><rect x="77.8844%" y="388" width="0.1304%" height="15" fill="rgb(206,152,27)" fg:x="566200" fg:w="948"/><text x="78.1344%" y="398.50"></text></g><g><title>_to_kwargs (torch/distributed/utils.py:246) (947 samples, 0.13%)</title><rect x="77.8845%" y="404" width="0.1303%" height="15" fill="rgb(240,77,30)" fg:x="566201" fg:w="947"/><text x="78.1345%" y="414.50"></text></g><g><title>_recursive_to (torch/distributed/utils.py:134) (947 samples, 0.13%)</title><rect x="77.8845%" y="420" width="0.1303%" height="15" fill="rgb(231,5,3)" fg:x="566201" fg:w="947"/><text x="78.1345%" y="430.50"></text></g><g><title>to_map (torch/distributed/utils.py:125) (947 samples, 0.13%)</title><rect x="77.8845%" y="436" width="0.1303%" height="15" fill="rgb(207,226,32)" fg:x="566201" fg:w="947"/><text x="78.1345%" y="446.50"></text></g><g><title>to_map (torch/distributed/utils.py:123) (947 samples, 0.13%)</title><rect x="77.8845%" y="452" width="0.1303%" height="15" fill="rgb(222,207,47)" fg:x="566201" fg:w="947"/><text x="78.1345%" y="462.50"></text></g><g><title>to_map (torch/distributed/utils.py:127) (946 samples, 0.13%)</title><rect x="77.8847%" y="468" width="0.1301%" height="15" fill="rgb(229,115,45)" fg:x="566202" fg:w="946"/><text x="78.1347%" y="478.50"></text></g><g><title>forward (modeling/vectornet.py:221) (2,282 samples, 0.31%)</title><rect x="78.0836%" y="564" width="0.3139%" height="15" fill="rgb(224,191,6)" fg:x="567648" fg:w="2282"/><text x="78.3336%" y="574.50"></text></g><g><title>forward (modeling/vectornet.py:237) (880 samples, 0.12%)</title><rect x="78.3975%" y="564" width="0.1210%" height="15" fill="rgb(230,227,24)" fg:x="569930" fg:w="880"/><text x="78.6475%" y="574.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (880 samples, 0.12%)</title><rect x="78.3975%" y="580" width="0.1210%" height="15" fill="rgb(228,80,19)" fg:x="569930" fg:w="880"/><text x="78.6475%" y="590.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (879 samples, 0.12%)</title><rect x="78.3976%" y="596" width="0.1209%" height="15" fill="rgb(247,229,0)" fg:x="569931" fg:w="879"/><text x="78.6476%" y="606.50"></text></g><g><title>merge_prediction_outputs (data/utils.py:1651) (7,071 samples, 0.97%)</title><rect x="78.5195%" y="580" width="0.9727%" height="15" fill="rgb(237,194,15)" fg:x="570817" fg:w="7071"/><text x="78.7695%" y="590.50"></text></g><g><title>__iter__ (torch/_tensor.py:1000) (2,407 samples, 0.33%)</title><rect x="79.1610%" y="596" width="0.3311%" height="15" fill="rgb(219,203,20)" fg:x="575481" fg:w="2407"/><text x="79.4110%" y="606.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (10,721 samples, 1.47%)</title><rect x="78.0206%" y="516" width="1.4747%" height="15" fill="rgb(234,128,8)" fg:x="567190" fg:w="10721"/><text x="78.2706%" y="526.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (10,721 samples, 1.47%)</title><rect x="78.0206%" y="532" width="1.4747%" height="15" fill="rgb(248,202,8)" fg:x="567190" fg:w="10721"/><text x="78.2706%" y="542.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (10,721 samples, 1.47%)</title><rect x="78.0206%" y="548" width="1.4747%" height="15" fill="rgb(206,104,37)" fg:x="567190" fg:w="10721"/><text x="78.2706%" y="558.50"></text></g><g><title>forward (modeling/vectornet.py:249) (7,097 samples, 0.98%)</title><rect x="78.5191%" y="564" width="0.9762%" height="15" fill="rgb(223,8,27)" fg:x="570814" fg:w="7097"/><text x="78.7691%" y="574.50"></text></g><g><title>validation_step (modeling/vectornet_lightning.py:482) (10,726 samples, 1.48%)</title><rect x="78.0200%" y="452" width="1.4754%" height="15" fill="rgb(216,217,28)" fg:x="567186" fg:w="10726"/><text x="78.2700%" y="462.50"></text></g><g><title>forward (modeling/vectornet_lightning.py:381) (10,726 samples, 1.48%)</title><rect x="78.0200%" y="468" width="1.4754%" height="15" fill="rgb(249,199,1)" fg:x="567186" fg:w="10726"/><text x="78.2700%" y="478.50"></text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (10,726 samples, 1.48%)</title><rect x="78.0200%" y="484" width="1.4754%" height="15" fill="rgb(240,85,17)" fg:x="567186" fg:w="10726"/><text x="78.2700%" y="494.50"></text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (10,724 samples, 1.48%)</title><rect x="78.0203%" y="500" width="1.4752%" height="15" fill="rgb(206,108,45)" fg:x="567188" fg:w="10724"/><text x="78.2703%" y="510.50"></text></g><g><title>get_ground_truth (data/utils.py:460) (890 samples, 0.12%)</title><rect x="79.5120%" y="468" width="0.1224%" height="15" fill="rgb(245,210,41)" fg:x="578032" fg:w="890"/><text x="79.7620%" y="478.50"></text></g><g><title>validation_step (modeling/vectornet_lightning.py:483) (1,087 samples, 0.15%)</title><rect x="79.4954%" y="452" width="0.1495%" height="15" fill="rgb(206,13,37)" fg:x="577912" fg:w="1087"/><text x="79.7454%" y="462.50"></text></g><g><title>set_params (matplotlib/ticker.py:2058) (741 samples, 0.10%)</title><rect x="79.8195%" y="676" width="0.1019%" height="15" fill="rgb(250,61,18)" fg:x="580268" fg:w="741"/><text x="80.0695%" y="686.50"></text></g><g><title>set_default_locators_and_formatters (matplotlib/scale.py:105) (746 samples, 0.10%)</title><rect x="79.8194%" y="628" width="0.1026%" height="15" fill="rgb(235,172,48)" fg:x="580267" fg:w="746"/><text x="80.0694%" y="638.50"></text></g><g><title>__init__ (matplotlib/ticker.py:2900) (746 samples, 0.10%)</title><rect x="79.8194%" y="644" width="0.1026%" height="15" fill="rgb(249,201,17)" fg:x="580267" fg:w="746"/><text x="80.0694%" y="654.50"></text></g><g><title>__init__ (matplotlib/ticker.py:2008) (746 samples, 0.10%)</title><rect x="79.8194%" y="660" width="0.1026%" height="15" fill="rgb(219,208,6)" fg:x="580267" fg:w="746"/><text x="80.0694%" y="670.50"></text></g><g><title>__clear (matplotlib/axes/_base.py:1382) (754 samples, 0.10%)</title><rect x="79.8194%" y="596" width="0.1037%" height="15" fill="rgb(248,31,23)" fg:x="580267" fg:w="754"/><text x="80.0694%" y="606.50"></text></g><g><title>_set_scale (matplotlib/axis.py:770) (754 samples, 0.10%)</title><rect x="79.8194%" y="612" width="0.1037%" height="15" fill="rgb(245,15,42)" fg:x="580267" fg:w="754"/><text x="80.0694%" y="622.50"></text></g><g><title>__init__ (matplotlib/axes/_base.py:683) (1,037 samples, 0.14%)</title><rect x="79.7820%" y="564" width="0.1426%" height="15" fill="rgb(222,217,39)" fg:x="579995" fg:w="1037"/><text x="80.0320%" y="574.50"></text></g><g><title>clear (matplotlib/axes/_base.py:1395) (1,037 samples, 0.14%)</title><rect x="79.7820%" y="580" width="0.1426%" height="15" fill="rgb(210,219,27)" fg:x="579995" fg:w="1037"/><text x="80.0320%" y="590.50"></text></g><g><title>add_subplot (matplotlib/figure.py:768) (1,162 samples, 0.16%)</title><rect x="79.7670%" y="548" width="0.1598%" height="15" fill="rgb(252,166,36)" fg:x="579886" fg:w="1162"/><text x="80.0170%" y="558.50"></text></g><g><title>_plot_time_to_collision_histogram (metrics/details/ego_collision_metrics.py:246) (1,168 samples, 0.16%)</title><rect x="79.7663%" y="516" width="0.1607%" height="15" fill="rgb(245,132,34)" fg:x="579881" fg:w="1168"/><text x="80.0163%" y="526.50"></text></g><g><title>subplot (matplotlib/pyplot.py:1338) (1,164 samples, 0.16%)</title><rect x="79.7668%" y="532" width="0.1601%" height="15" fill="rgb(236,54,3)" fg:x="579885" fg:w="1164"/><text x="80.0168%" y="542.50"></text></g><g><title>_update_title_position (matplotlib/axes/_base.py:2972) (750 samples, 0.10%)</title><rect x="80.1092%" y="740" width="0.1032%" height="15" fill="rgb(241,173,43)" fg:x="582374" fg:w="750"/><text x="80.3592%" y="750.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3028) (813 samples, 0.11%)</title><rect x="80.1078%" y="724" width="0.1118%" height="15" fill="rgb(215,190,9)" fg:x="582364" fg:w="813"/><text x="80.3578%" y="734.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,649 samples, 0.23%)</title><rect x="80.2198%" y="756" width="0.2268%" height="15" fill="rgb(242,101,16)" fg:x="583178" fg:w="1649"/><text x="80.4698%" y="766.50"></text></g><g><title>draw (matplotlib/figure.py:3175) (2,503 samples, 0.34%)</title><rect x="80.1025%" y="676" width="0.3443%" height="15" fill="rgb(223,190,21)" fg:x="582325" fg:w="2503"/><text x="80.3525%" y="686.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (2,502 samples, 0.34%)</title><rect x="80.1026%" y="692" width="0.3442%" height="15" fill="rgb(215,228,25)" fg:x="582326" fg:w="2502"/><text x="80.3526%" y="702.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (2,502 samples, 0.34%)</title><rect x="80.1026%" y="708" width="0.3442%" height="15" fill="rgb(225,36,22)" fg:x="582326" fg:w="2502"/><text x="80.3526%" y="718.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3064) (1,650 samples, 0.23%)</title><rect x="80.2198%" y="724" width="0.2270%" height="15" fill="rgb(251,106,46)" fg:x="583178" fg:w="1650"/><text x="80.4698%" y="734.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (1,650 samples, 0.23%)</title><rect x="80.2198%" y="740" width="0.2270%" height="15" fill="rgb(208,90,1)" fg:x="583178" fg:w="1650"/><text x="80.4698%" y="750.50"></text></g><g><title>_print_pil (matplotlib/backends/backend_agg.py:457) (2,560 samples, 0.35%)</title><rect x="80.0949%" y="612" width="0.3521%" height="15" fill="rgb(243,10,4)" fg:x="582270" fg:w="2560"/><text x="80.3449%" y="622.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:400) (2,529 samples, 0.35%)</title><rect x="80.0992%" y="628" width="0.3479%" height="15" fill="rgb(212,137,27)" fg:x="582301" fg:w="2529"/><text x="80.3492%" y="638.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:95) (2,529 samples, 0.35%)</title><rect x="80.0992%" y="644" width="0.3479%" height="15" fill="rgb(231,220,49)" fg:x="582301" fg:w="2529"/><text x="80.3492%" y="654.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (2,529 samples, 0.35%)</title><rect x="80.0992%" y="660" width="0.3479%" height="15" fill="rgb(237,96,20)" fg:x="582301" fg:w="2529"/><text x="80.3492%" y="670.50"></text></g><g><title>print_figure (matplotlib/backend_bases.py:2366) (3,429 samples, 0.47%)</title><rect x="80.0948%" y="564" width="0.4717%" height="15" fill="rgb(239,229,30)" fg:x="582269" fg:w="3429"/><text x="80.3448%" y="574.50"></text></g><g><title>&lt;lambda&gt; (matplotlib/backend_bases.py:2232) (3,429 samples, 0.47%)</title><rect x="80.0948%" y="580" width="0.4717%" height="15" fill="rgb(219,65,33)" fg:x="582269" fg:w="3429"/><text x="80.3448%" y="590.50"></text></g><g><title>print_png (matplotlib/backends/backend_agg.py:509) (3,428 samples, 0.47%)</title><rect x="80.0949%" y="596" width="0.4715%" height="15" fill="rgb(243,134,7)" fg:x="582270" fg:w="3428"/><text x="80.3449%" y="606.50"></text></g><g><title>_print_pil (matplotlib/backends/backend_agg.py:458) (868 samples, 0.12%)</title><rect x="80.4471%" y="612" width="0.1194%" height="15" fill="rgb(216,177,54)" fg:x="584830" fg:w="868"/><text x="80.6971%" y="622.50"></text></g><g><title>imsave (matplotlib/image.py:1689) (862 samples, 0.12%)</title><rect x="80.4479%" y="628" width="0.1186%" height="15" fill="rgb(211,160,20)" fg:x="584836" fg:w="862"/><text x="80.6979%" y="638.50"></text></g><g><title>save (PIL/Image.py:2431) (823 samples, 0.11%)</title><rect x="80.4532%" y="644" width="0.1132%" height="15" fill="rgb(239,85,39)" fg:x="584875" fg:w="823"/><text x="80.7032%" y="654.50"></text></g><g><title>_save (PIL/PngImagePlugin.py:1420) (819 samples, 0.11%)</title><rect x="80.4538%" y="660" width="0.1127%" height="15" fill="rgb(232,125,22)" fg:x="584879" fg:w="819"/><text x="80.7038%" y="670.50"></text></g><g><title>_save (PIL/ImageFile.py:522) (819 samples, 0.11%)</title><rect x="80.4538%" y="676" width="0.1127%" height="15" fill="rgb(244,57,34)" fg:x="584879" fg:w="819"/><text x="80.7038%" y="686.50"></text></g><g><title>_encode_tile (PIL/ImageFile.py:541) (819 samples, 0.11%)</title><rect x="80.4538%" y="692" width="0.1127%" height="15" fill="rgb(214,203,32)" fg:x="584879" fg:w="819"/><text x="80.7038%" y="702.50"></text></g><g><title>savefig (matplotlib/pyplot.py:1023) (3,441 samples, 0.47%)</title><rect x="80.0934%" y="532" width="0.4733%" height="15" fill="rgb(207,58,43)" fg:x="582259" fg:w="3441"/><text x="80.3434%" y="542.50"></text></g><g><title>savefig (matplotlib/figure.py:3378) (3,437 samples, 0.47%)</title><rect x="80.0940%" y="548" width="0.4728%" height="15" fill="rgb(215,193,15)" fg:x="582263" fg:w="3437"/><text x="80.3440%" y="558.50"></text></g><g><title>_plot_time_to_collision_histogram (metrics/details/ego_collision_metrics.py:258) (5,143 samples, 0.71%)</title><rect x="80.0934%" y="516" width="0.7075%" height="15" fill="rgb(232,15,44)" fg:x="582259" fg:w="5143"/><text x="80.3434%" y="526.50"></text></g><g><title>savefig (matplotlib/pyplot.py:1024) (1,702 samples, 0.23%)</title><rect x="80.5667%" y="532" width="0.2341%" height="15" fill="rgb(212,3,48)" fg:x="585700" fg:w="1702"/><text x="80.8167%" y="542.50"></text></g><g><title>draw_idle (matplotlib/backend_bases.py:2082) (1,702 samples, 0.23%)</title><rect x="80.5667%" y="548" width="0.2341%" height="15" fill="rgb(218,128,7)" fg:x="585700" fg:w="1702"/><text x="80.8167%" y="558.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:400) (1,690 samples, 0.23%)</title><rect x="80.5684%" y="564" width="0.2325%" height="15" fill="rgb(226,216,39)" fg:x="585712" fg:w="1690"/><text x="80.8184%" y="574.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:95) (1,690 samples, 0.23%)</title><rect x="80.5684%" y="580" width="0.2325%" height="15" fill="rgb(243,47,51)" fg:x="585712" fg:w="1690"/><text x="80.8184%" y="590.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,690 samples, 0.23%)</title><rect x="80.5684%" y="596" width="0.2325%" height="15" fill="rgb(241,183,40)" fg:x="585712" fg:w="1690"/><text x="80.8184%" y="606.50"></text></g><g><title>draw (matplotlib/figure.py:3175) (1,664 samples, 0.23%)</title><rect x="80.5720%" y="612" width="0.2289%" height="15" fill="rgb(231,217,32)" fg:x="585738" fg:w="1664"/><text x="80.8220%" y="622.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (1,663 samples, 0.23%)</title><rect x="80.5721%" y="628" width="0.2288%" height="15" fill="rgb(229,61,38)" fg:x="585739" fg:w="1663"/><text x="80.8221%" y="638.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,663 samples, 0.23%)</title><rect x="80.5721%" y="644" width="0.2288%" height="15" fill="rgb(225,210,5)" fg:x="585739" fg:w="1663"/><text x="80.8221%" y="654.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3064) (1,333 samples, 0.18%)</title><rect x="80.6175%" y="660" width="0.1834%" height="15" fill="rgb(231,79,45)" fg:x="586069" fg:w="1333"/><text x="80.8675%" y="670.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (1,331 samples, 0.18%)</title><rect x="80.6178%" y="676" width="0.1831%" height="15" fill="rgb(224,100,7)" fg:x="586071" fg:w="1331"/><text x="80.8678%" y="686.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,328 samples, 0.18%)</title><rect x="80.6182%" y="692" width="0.1827%" height="15" fill="rgb(241,198,18)" fg:x="586074" fg:w="1328"/><text x="80.8682%" y="702.50"></text></g><g><title>result (metrics/details/ego_collision_metrics.py:276) (7,558 samples, 1.04%)</title><rect x="79.7620%" y="484" width="1.0397%" height="15" fill="rgb(252,97,53)" fg:x="579850" fg:w="7558"/><text x="80.0120%" y="494.50"></text></g><g><title>wrapper (utils/log_tools.py:38) (7,558 samples, 1.04%)</title><rect x="79.7620%" y="500" width="1.0397%" height="15" fill="rgb(220,88,7)" fg:x="579850" fg:w="7558"/><text x="80.0120%" y="510.50"></text></g><g><title>_iter_break_from_left_to_right (matplotlib/transforms.py:2408) (1,551 samples, 0.21%)</title><rect x="80.9967%" y="692" width="0.2133%" height="15" fill="rgb(213,176,14)" fg:x="588826" fg:w="1551"/><text x="81.2467%" y="702.50"></text></g><g><title>__add__ (matplotlib/transforms.py:1350) (1,550 samples, 0.21%)</title><rect x="80.9969%" y="708" width="0.2132%" height="15" fill="rgb(246,73,7)" fg:x="588827" fg:w="1550"/><text x="81.2469%" y="718.50"></text></g><g><title>composite_transform_factory (matplotlib/transforms.py:2535) (1,550 samples, 0.21%)</title><rect x="80.9969%" y="724" width="0.2132%" height="15" fill="rgb(245,64,36)" fg:x="588827" fg:w="1550"/><text x="81.2469%" y="734.50"></text></g><g><title>__init__ (matplotlib/transforms.py:2373) (1,549 samples, 0.21%)</title><rect x="80.9970%" y="740" width="0.2131%" height="15" fill="rgb(245,80,10)" fg:x="588828" fg:w="1549"/><text x="81.2470%" y="750.50"></text></g><g><title>set_children (matplotlib/transforms.py:209) (1,541 samples, 0.21%)</title><rect x="80.9981%" y="756" width="0.2120%" height="15" fill="rgb(232,107,50)" fg:x="588836" fg:w="1541"/><text x="81.2481%" y="766.50"></text></g><g><title>_iter_break_from_left_to_right (matplotlib/transforms.py:2407) (1,571 samples, 0.22%)</title><rect x="80.9959%" y="676" width="0.2161%" height="15" fill="rgb(253,3,0)" fg:x="588820" fg:w="1571"/><text x="81.2459%" y="686.50"></text></g><g><title>contains_branch (matplotlib/transforms.py:1398) (1,610 samples, 0.22%)</title><rect x="80.9945%" y="660" width="0.2215%" height="15" fill="rgb(212,99,53)" fg:x="588810" fg:w="1610"/><text x="81.2445%" y="670.50"></text></g><g><title>_update_patch_limits (matplotlib/axes/_base.py:2411) (1,689 samples, 0.23%)</title><rect x="80.9937%" y="628" width="0.2323%" height="15" fill="rgb(249,111,54)" fg:x="588804" fg:w="1689"/><text x="81.2437%" y="638.50"></text></g><g><title>contains_branch_seperately (matplotlib/transforms.py:1419) (1,687 samples, 0.23%)</title><rect x="80.9940%" y="644" width="0.2321%" height="15" fill="rgb(249,55,30)" fg:x="588806" fg:w="1687"/><text x="81.2440%" y="654.50"></text></g><g><title>add_patch (matplotlib/axes/_base.py:2379) (2,292 samples, 0.32%)</title><rect x="80.9332%" y="612" width="0.3153%" height="15" fill="rgb(237,47,42)" fg:x="588364" fg:w="2292"/><text x="81.1832%" y="622.50"></text></g><g><title>hist (matplotlib/axes/_axes.py:6851) (2,581 samples, 0.36%)</title><rect x="80.8936%" y="564" width="0.3550%" height="15" fill="rgb(211,20,18)" fg:x="588076" fg:w="2581"/><text x="81.1436%" y="574.50"></text></g><g><title>inner (matplotlib/__init__.py:1446) (2,581 samples, 0.36%)</title><rect x="80.8936%" y="580" width="0.3550%" height="15" fill="rgb(231,203,46)" fg:x="588076" fg:w="2581"/><text x="81.1436%" y="590.50"></text></g><g><title>bar (matplotlib/axes/_axes.py:2486) (2,422 samples, 0.33%)</title><rect x="80.9154%" y="596" width="0.3332%" height="15" fill="rgb(237,142,3)" fg:x="588235" fg:w="2422"/><text x="81.1654%" y="606.50"></text></g><g><title>_plot_min_distances_histogram (metrics/details/ego_collision_metrics.py:224) (2,799 samples, 0.39%)</title><rect x="80.8655%" y="516" width="0.3850%" height="15" fill="rgb(241,107,1)" fg:x="587872" fg:w="2799"/><text x="81.1155%" y="526.50"></text></g><g><title>hist (matplotlib/pyplot.py:2645) (2,799 samples, 0.39%)</title><rect x="80.8655%" y="532" width="0.3850%" height="15" fill="rgb(229,83,13)" fg:x="587872" fg:w="2799"/><text x="81.1155%" y="542.50"></text></g><g><title>inner (matplotlib/__init__.py:1446) (2,799 samples, 0.39%)</title><rect x="80.8655%" y="548" width="0.3850%" height="15" fill="rgb(241,91,40)" fg:x="587872" fg:w="2799"/><text x="81.1155%" y="558.50"></text></g><g><title>_update_patch_limits (matplotlib/axes/_base.py:2411) (765 samples, 0.11%)</title><rect x="81.4328%" y="628" width="0.1052%" height="15" fill="rgb(225,3,45)" fg:x="591996" fg:w="765"/><text x="81.6828%" y="638.50"></text></g><g><title>contains_branch_seperately (matplotlib/transforms.py:1419) (763 samples, 0.10%)</title><rect x="81.4331%" y="644" width="0.1050%" height="15" fill="rgb(244,223,14)" fg:x="591998" fg:w="763"/><text x="81.6831%" y="654.50"></text></g><g><title>bar (matplotlib/axes/_axes.py:2486) (1,465 samples, 0.20%)</title><rect x="81.3600%" y="596" width="0.2015%" height="15" fill="rgb(224,124,37)" fg:x="591467" fg:w="1465"/><text x="81.6100%" y="606.50"></text></g><g><title>add_patch (matplotlib/axes/_base.py:2379) (1,340 samples, 0.18%)</title><rect x="81.3772%" y="612" width="0.1843%" height="15" fill="rgb(251,171,30)" fg:x="591592" fg:w="1340"/><text x="81.6272%" y="622.50"></text></g><g><title>hist (matplotlib/axes/_axes.py:6851) (1,675 samples, 0.23%)</title><rect x="81.3314%" y="564" width="0.2304%" height="15" fill="rgb(236,46,54)" fg:x="591259" fg:w="1675"/><text x="81.5814%" y="574.50"></text></g><g><title>inner (matplotlib/__init__.py:1446) (1,675 samples, 0.23%)</title><rect x="81.3314%" y="580" width="0.2304%" height="15" fill="rgb(245,213,5)" fg:x="591259" fg:w="1675"/><text x="81.5814%" y="590.50"></text></g><g><title>_plot_min_distances_histogram (metrics/details/ego_collision_metrics.py:230) (1,850 samples, 0.25%)</title><rect x="81.3086%" y="516" width="0.2545%" height="15" fill="rgb(230,144,27)" fg:x="591093" fg:w="1850"/><text x="81.5586%" y="526.50"></text></g><g><title>hist (matplotlib/pyplot.py:2645) (1,850 samples, 0.25%)</title><rect x="81.3086%" y="532" width="0.2545%" height="15" fill="rgb(220,86,6)" fg:x="591093" fg:w="1850"/><text x="81.5586%" y="542.50"></text></g><g><title>inner (matplotlib/__init__.py:1446) (1,850 samples, 0.25%)</title><rect x="81.3086%" y="548" width="0.2545%" height="15" fill="rgb(240,20,13)" fg:x="591093" fg:w="1850"/><text x="81.5586%" y="558.50"></text></g><g><title>__init__ (matplotlib/axis.py:156) (751 samples, 0.10%)</title><rect x="81.5835%" y="836" width="0.1033%" height="15" fill="rgb(217,89,34)" fg:x="593092" fg:w="751"/><text x="81.8335%" y="846.50"></text></g><g><title>wrapper (matplotlib/_api/deprecation.py:454) (751 samples, 0.10%)</title><rect x="81.5835%" y="852" width="0.1033%" height="15" fill="rgb(229,13,5)" fg:x="593092" fg:w="751"/><text x="81.8335%" y="862.50"></text></g><g><title>__init__ (matplotlib/axis.py:478) (908 samples, 0.12%)</title><rect x="81.5824%" y="820" width="0.1249%" height="15" fill="rgb(244,67,35)" fg:x="593084" fg:w="908"/><text x="81.8324%" y="830.50"></text></g><g><title>get_major_ticks (matplotlib/axis.py:1602) (978 samples, 0.13%)</title><rect x="81.5824%" y="788" width="0.1345%" height="15" fill="rgb(221,40,2)" fg:x="593084" fg:w="978"/><text x="81.8324%" y="798.50"></text></g><g><title>_get_tick (matplotlib/axis.py:1551) (978 samples, 0.13%)</title><rect x="81.5824%" y="804" width="0.1345%" height="15" fill="rgb(237,157,21)" fg:x="593084" fg:w="978"/><text x="81.8324%" y="814.50"></text></g><g><title>_update_ticks (matplotlib/axis.py:1264) (1,073 samples, 0.15%)</title><rect x="81.5823%" y="772" width="0.1476%" height="15" fill="rgb(222,94,11)" fg:x="593083" fg:w="1073"/><text x="81.8323%" y="782.50"></text></g><g><title>get_tightbbox (matplotlib/axis.py:1323) (1,145 samples, 0.16%)</title><rect x="81.5790%" y="756" width="0.1575%" height="15" fill="rgb(249,113,6)" fg:x="593059" fg:w="1145"/><text x="81.8290%" y="766.50"></text></g><g><title>_update_title_position (matplotlib/axes/_base.py:2972) (1,484 samples, 0.20%)</title><rect x="81.5790%" y="740" width="0.2041%" height="15" fill="rgb(238,137,36)" fg:x="593059" fg:w="1484"/><text x="81.8290%" y="750.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3028) (1,579 samples, 0.22%)</title><rect x="81.5765%" y="724" width="0.2172%" height="15" fill="rgb(210,102,26)" fg:x="593041" fg:w="1579"/><text x="81.8265%" y="734.50"></text></g><g><title>__init__ (matplotlib/transforms.py:1899) (3,177 samples, 0.44%)</title><rect x="82.0607%" y="916" width="0.4370%" height="15" fill="rgb(218,30,30)" fg:x="596561" fg:w="3177"/><text x="82.3107%" y="926.50"></text></g><g><title>__init__ (matplotlib/transforms.py:1773) (3,174 samples, 0.44%)</title><rect x="82.0611%" y="932" width="0.4366%" height="15" fill="rgb(214,67,26)" fg:x="596564" fg:w="3174"/><text x="82.3111%" y="942.50"></text></g><g><title>get_affine (matplotlib/transforms.py:2449) (3,194 samples, 0.44%)</title><rect x="82.0602%" y="900" width="0.4394%" height="15" fill="rgb(251,9,53)" fg:x="596557" fg:w="3194"/><text x="82.3102%" y="910.50"></text></g><g><title>get_affine (matplotlib/transforms.py:2450) (3,223 samples, 0.44%)</title><rect x="82.0600%" y="884" width="0.4433%" height="15" fill="rgb(228,204,25)" fg:x="596556" fg:w="3223"/><text x="82.3100%" y="894.50"></text></g><g><title>transform_affine (matplotlib/transforms.py:2423) (3,250 samples, 0.45%)</title><rect x="82.0574%" y="868" width="0.4471%" height="15" fill="rgb(207,153,8)" fg:x="596537" fg:w="3250"/><text x="82.3074%" y="878.50"></text></g><g><title>transform (matplotlib/transforms.py:1498) (3,253 samples, 0.45%)</title><rect x="82.0572%" y="852" width="0.4475%" height="15" fill="rgb(242,9,16)" fg:x="596535" fg:w="3253"/><text x="82.3072%" y="862.50"></text></g><g><title>get_points (matplotlib/transforms.py:1116) (3,268 samples, 0.45%)</title><rect x="82.0552%" y="836" width="0.4495%" height="15" fill="rgb(217,211,10)" fg:x="596521" fg:w="3268"/><text x="82.3052%" y="846.50"></text></g><g><title>__array__ (matplotlib/transforms.py:251) (3,315 samples, 0.46%)</title><rect x="82.0547%" y="820" width="0.4560%" height="15" fill="rgb(219,228,52)" fg:x="596517" fg:w="3315"/><text x="82.3047%" y="830.50"></text></g><g><title>draw_path (matplotlib/backends/backend_agg.py:146) (3,390 samples, 0.47%)</title><rect x="82.0446%" y="804" width="0.4663%" height="15" fill="rgb(231,92,29)" fg:x="596444" fg:w="3390"/><text x="82.2946%" y="814.50"></text></g><g><title>_draw_paths_with_artist_properties (matplotlib/patches.py:576) (3,398 samples, 0.47%)</title><rect x="82.0437%" y="788" width="0.4674%" height="15" fill="rgb(232,8,23)" fg:x="596437" fg:w="3398"/><text x="82.2937%" y="798.50"></text></g><g><title>draw (matplotlib/patches.py:591) (3,469 samples, 0.48%)</title><rect x="82.0342%" y="772" width="0.4772%" height="15" fill="rgb(216,211,34)" fg:x="596368" fg:w="3469"/><text x="82.2842%" y="782.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (5,332 samples, 0.73%)</title><rect x="81.7947%" y="756" width="0.7335%" height="15" fill="rgb(236,151,0)" fg:x="594627" fg:w="5332"/><text x="82.0447%" y="766.50"></text></g><g><title>draw (matplotlib/figure.py:3175) (6,960 samples, 0.96%)</title><rect x="81.5710%" y="676" width="0.9574%" height="15" fill="rgb(209,168,3)" fg:x="593001" fg:w="6960"/><text x="81.8210%" y="686.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (6,959 samples, 0.96%)</title><rect x="81.5712%" y="692" width="0.9573%" height="15" fill="rgb(208,129,28)" fg:x="593002" fg:w="6959"/><text x="81.8212%" y="702.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (6,958 samples, 0.96%)</title><rect x="81.5713%" y="708" width="0.9571%" height="15" fill="rgb(229,78,22)" fg:x="593003" fg:w="6958"/><text x="81.8213%" y="718.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3064) (5,340 samples, 0.73%)</title><rect x="81.7939%" y="724" width="0.7346%" height="15" fill="rgb(228,187,13)" fg:x="594621" fg:w="5340"/><text x="82.0439%" y="734.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (5,338 samples, 0.73%)</title><rect x="81.7941%" y="740" width="0.7343%" height="15" fill="rgb(240,119,24)" fg:x="594623" fg:w="5338"/><text x="82.0441%" y="750.50"></text></g><g><title>_print_pil (matplotlib/backends/backend_agg.py:457) (7,003 samples, 0.96%)</title><rect x="81.5654%" y="612" width="0.9633%" height="15" fill="rgb(209,194,42)" fg:x="592960" fg:w="7003"/><text x="81.8154%" y="622.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:400) (6,982 samples, 0.96%)</title><rect x="81.5683%" y="628" width="0.9604%" height="15" fill="rgb(247,200,46)" fg:x="592981" fg:w="6982"/><text x="81.8183%" y="638.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:95) (6,982 samples, 0.96%)</title><rect x="81.5683%" y="644" width="0.9604%" height="15" fill="rgb(218,76,16)" fg:x="592981" fg:w="6982"/><text x="81.8183%" y="654.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (6,982 samples, 0.96%)</title><rect x="81.5683%" y="660" width="0.9604%" height="15" fill="rgb(225,21,48)" fg:x="592981" fg:w="6982"/><text x="81.8183%" y="670.50"></text></g><g><title>_encode_tile (PIL/ImageFile.py:541) (942 samples, 0.13%)</title><rect x="82.5361%" y="692" width="0.1296%" height="15" fill="rgb(239,223,50)" fg:x="600017" fg:w="942"/><text x="82.7861%" y="702.50"></text></g><g><title>print_figure (matplotlib/backend_bases.py:2366) (8,001 samples, 1.10%)</title><rect x="81.5654%" y="564" width="1.1006%" height="15" fill="rgb(244,45,21)" fg:x="592960" fg:w="8001"/><text x="81.8154%" y="574.50"></text></g><g><title>&lt;lambda&gt; (matplotlib/backend_bases.py:2232) (8,001 samples, 1.10%)</title><rect x="81.5654%" y="580" width="1.1006%" height="15" fill="rgb(232,33,43)" fg:x="592960" fg:w="8001"/><text x="81.8154%" y="590.50"></text></g><g><title>print_png (matplotlib/backends/backend_agg.py:509) (8,001 samples, 1.10%)</title><rect x="81.5654%" y="596" width="1.1006%" height="15" fill="rgb(209,8,3)" fg:x="592960" fg:w="8001"/><text x="81.8154%" y="606.50"></text></g><g><title>_print_pil (matplotlib/backends/backend_agg.py:458) (998 samples, 0.14%)</title><rect x="82.5287%" y="612" width="0.1373%" height="15" fill="rgb(214,25,53)" fg:x="599963" fg:w="998"/><text x="82.7787%" y="622.50"></text></g><g><title>imsave (matplotlib/image.py:1689) (997 samples, 0.14%)</title><rect x="82.5288%" y="628" width="0.1371%" height="15" fill="rgb(254,186,54)" fg:x="599964" fg:w="997"/><text x="82.7788%" y="638.50"></text></g><g><title>save (PIL/Image.py:2431) (947 samples, 0.13%)</title><rect x="82.5357%" y="644" width="0.1303%" height="15" fill="rgb(208,174,49)" fg:x="600014" fg:w="947"/><text x="82.7857%" y="654.50"></text></g><g><title>_save (PIL/PngImagePlugin.py:1420) (946 samples, 0.13%)</title><rect x="82.5359%" y="660" width="0.1301%" height="15" fill="rgb(233,191,51)" fg:x="600015" fg:w="946"/><text x="82.7859%" y="670.50"></text></g><g><title>_save (PIL/ImageFile.py:522) (945 samples, 0.13%)</title><rect x="82.5360%" y="676" width="0.1300%" height="15" fill="rgb(222,134,10)" fg:x="600016" fg:w="945"/><text x="82.7860%" y="686.50"></text></g><g><title>savefig (matplotlib/pyplot.py:1023) (8,008 samples, 1.10%)</title><rect x="81.5647%" y="532" width="1.1016%" height="15" fill="rgb(230,226,20)" fg:x="592955" fg:w="8008"/><text x="81.8147%" y="542.50"></text></g><g><title>savefig (matplotlib/figure.py:3378) (8,008 samples, 1.10%)</title><rect x="81.5647%" y="548" width="1.1016%" height="15" fill="rgb(251,111,25)" fg:x="592955" fg:w="8008"/><text x="81.8147%" y="558.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,612 samples, 0.22%)</title><rect x="82.7181%" y="692" width="0.2217%" height="15" fill="rgb(224,40,46)" fg:x="601340" fg:w="1612"/><text x="82.9681%" y="702.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,965 samples, 0.27%)</title><rect x="82.6697%" y="644" width="0.2703%" height="15" fill="rgb(236,108,47)" fg:x="600988" fg:w="1965"/><text x="82.9197%" y="654.50"></text></g><g><title>draw (matplotlib/axes/_base.py:3064) (1,619 samples, 0.22%)</title><rect x="82.7173%" y="660" width="0.2227%" height="15" fill="rgb(234,93,0)" fg:x="601334" fg:w="1619"/><text x="82.9673%" y="670.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (1,618 samples, 0.22%)</title><rect x="82.7174%" y="676" width="0.2226%" height="15" fill="rgb(224,213,32)" fg:x="601335" fg:w="1618"/><text x="82.9674%" y="686.50"></text></g><g><title>_plot_min_distances_histogram (metrics/details/ego_collision_metrics.py:235) (9,999 samples, 1.38%)</title><rect x="81.5647%" y="516" width="1.3754%" height="15" fill="rgb(251,11,48)" fg:x="592955" fg:w="9999"/><text x="81.8147%" y="526.50"></text></g><g><title>savefig (matplotlib/pyplot.py:1024) (1,991 samples, 0.27%)</title><rect x="82.6663%" y="532" width="0.2739%" height="15" fill="rgb(236,173,5)" fg:x="600963" fg:w="1991"/><text x="82.9163%" y="542.50"></text></g><g><title>draw_idle (matplotlib/backend_bases.py:2082) (1,991 samples, 0.27%)</title><rect x="82.6663%" y="548" width="0.2739%" height="15" fill="rgb(230,95,12)" fg:x="600963" fg:w="1991"/><text x="82.9163%" y="558.50"></text></g><g><title>draw (matplotlib/backends/backend_agg.py:400) (1,986 samples, 0.27%)</title><rect x="82.6669%" y="564" width="0.2732%" height="15" fill="rgb(232,209,1)" fg:x="600968" fg:w="1986"/><text x="82.9169%" y="574.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:95) (1,986 samples, 0.27%)</title><rect x="82.6669%" y="580" width="0.2732%" height="15" fill="rgb(232,6,1)" fg:x="600968" fg:w="1986"/><text x="82.9169%" y="590.50"></text></g><g><title>draw_wrapper (matplotlib/artist.py:72) (1,986 samples, 0.27%)</title><rect x="82.6669%" y="596" width="0.2732%" height="15" fill="rgb(210,224,50)" fg:x="600968" fg:w="1986"/><text x="82.9169%" y="606.50"></text></g><g><title>draw (matplotlib/figure.py:3175) (1,966 samples, 0.27%)</title><rect x="82.6697%" y="612" width="0.2704%" height="15" fill="rgb(228,127,35)" fg:x="600988" fg:w="1966"/><text x="82.9197%" y="622.50"></text></g><g><title>_draw_list_compositing_images (matplotlib/image.py:131) (1,966 samples, 0.27%)</title><rect x="82.6697%" y="628" width="0.2704%" height="15" fill="rgb(245,102,45)" fg:x="600988" fg:w="1966"/><text x="82.9197%" y="638.50"></text></g><g><title>result (metrics/details/ego_collision_metrics.py:278) (15,549 samples, 2.14%)</title><rect x="80.8017%" y="484" width="2.1389%" height="15" fill="rgb(214,1,49)" fg:x="587408" fg:w="15549"/><text x="81.0517%" y="494.50">r..</text></g><g><title>wrapper (utils/log_tools.py:38) (15,549 samples, 2.14%)</title><rect x="80.8017%" y="500" width="2.1389%" height="15" fill="rgb(226,163,40)" fg:x="587408" fg:w="15549"/><text x="81.0517%" y="510.50">w..</text></g><g><title>wrapper (utils/log_tools.py:38) (23,108 samples, 3.18%)</title><rect x="79.7620%" y="468" width="3.1787%" height="15" fill="rgb(239,212,28)" fg:x="579850" fg:w="23108"/><text x="80.0120%" y="478.50">wra..</text></g><g><title>validation_step (modeling/vectornet_lightning.py:557) (23,110 samples, 3.18%)</title><rect x="79.7619%" y="452" width="3.1789%" height="15" fill="rgb(220,20,13)" fg:x="579849" fg:w="23110"/><text x="80.0119%" y="462.50">val..</text></g><g><title>forward (torch/nn/parallel/distributed.py:1519) (36,020 samples, 4.95%)</title><rect x="78.0148%" y="372" width="4.9548%" height="15" fill="rgb(210,164,35)" fg:x="567148" fg:w="36020"/><text x="78.2648%" y="382.50">forwar..</text></g><g><title>_run_ddp_forward (torch/nn/parallel/distributed.py:1355) (36,017 samples, 4.95%)</title><rect x="78.0152%" y="388" width="4.9544%" height="15" fill="rgb(248,109,41)" fg:x="567151" fg:w="36017"/><text x="78.2652%" y="398.50">_run_d..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (36,016 samples, 4.95%)</title><rect x="78.0153%" y="404" width="4.9542%" height="15" fill="rgb(238,23,50)" fg:x="567152" fg:w="36016"/><text x="78.2653%" y="414.50">_wrapp..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (36,016 samples, 4.95%)</title><rect x="78.0153%" y="420" width="4.9542%" height="15" fill="rgb(211,48,49)" fg:x="567152" fg:w="36016"/><text x="78.2653%" y="430.50">_call_..</text></g><g><title>forward (lightning/pytorch/overrides/base.py:102) (36,016 samples, 4.95%)</title><rect x="78.0153%" y="436" width="4.9542%" height="15" fill="rgb(223,36,21)" fg:x="567152" fg:w="36016"/><text x="78.2653%" y="446.50">forwar..</text></g><g><title>_evaluation_step (lightning/pytorch/loops/evaluation_loop.py:376) (36,997 samples, 5.09%)</title><rect x="77.8807%" y="292" width="5.0892%" height="15" fill="rgb(207,123,46)" fg:x="566173" fg:w="36997"/><text x="78.1307%" y="302.50">_evalu..</text></g><g><title>_call_strategy_hook (lightning/pytorch/trainer/call.py:294) (36,997 samples, 5.09%)</title><rect x="77.8807%" y="308" width="5.0892%" height="15" fill="rgb(240,218,32)" fg:x="566173" fg:w="36997"/><text x="78.1307%" y="318.50">_call_..</text></g><g><title>validation_step (lightning/pytorch/strategies/ddp.py:338) (36,983 samples, 5.09%)</title><rect x="77.8826%" y="324" width="5.0872%" height="15" fill="rgb(252,5,43)" fg:x="566187" fg:w="36983"/><text x="78.1326%" y="334.50">valida..</text></g><g><title>_wrapped_call_impl (torch/nn/modules/module.py:1518) (36,982 samples, 5.09%)</title><rect x="77.8827%" y="340" width="5.0871%" height="15" fill="rgb(252,84,19)" fg:x="566188" fg:w="36982"/><text x="78.1327%" y="350.50">_wrapp..</text></g><g><title>_call_impl (torch/nn/modules/module.py:1527) (36,981 samples, 5.09%)</title><rect x="77.8829%" y="356" width="5.0870%" height="15" fill="rgb(243,152,39)" fg:x="566189" fg:w="36981"/><text x="78.1329%" y="366.50">_call_..</text></g><g><title>run (lightning/pytorch/loops/evaluation_loop.py:115) (38,009 samples, 5.23%)</title><rect x="77.7426%" y="276" width="5.2284%" height="15" fill="rgb(234,160,15)" fg:x="565169" fg:w="38009"/><text x="77.9926%" y="286.50">run (l..</text></g><g><title>on_advance_end (lightning/pytorch/loops/training_epoch_loop.py:249) (38,843 samples, 5.34%)</title><rect x="77.6785%" y="244" width="5.3431%" height="15" fill="rgb(237,34,20)" fg:x="564703" fg:w="38843"/><text x="77.9285%" y="254.50">on_adva..</text></g><g><title>_decorator (lightning/pytorch/loops/utilities.py:181) (38,843 samples, 5.34%)</title><rect x="77.6785%" y="260" width="5.3431%" height="15" fill="rgb(229,97,13)" fg:x="564703" fg:w="38843"/><text x="77.9285%" y="270.50">_decora..</text></g><g><title>run (lightning/pytorch/loops/training_epoch_loop.py:134) (38,950 samples, 5.36%)</title><rect x="77.6690%" y="228" width="5.3578%" height="15" fill="rgb(234,71,50)" fg:x="564634" fg:w="38950"/><text x="77.9190%" y="238.50">run (li..</text></g><g><title>run (lightning/pytorch/loops/fit_loop.py:202) (561,418 samples, 77.23%)</title><rect x="5.8007%" y="196" width="77.2266%" height="15" fill="rgb(253,155,4)" fg:x="42170" fg:w="561418"/><text x="6.0507%" y="206.50">run (lightning/pytorch/loops/fit_loop.py:202)</text></g><g><title>advance (lightning/pytorch/loops/fit_loop.py:355) (561,418 samples, 77.23%)</title><rect x="5.8007%" y="212" width="77.2266%" height="15" fill="rgb(222,185,37)" fg:x="42170" fg:w="561418"/><text x="6.0507%" y="222.50">advance (lightning/pytorch/loops/fit_loop.py:355)</text></g><g><title>_run (lightning/pytorch/trainer/trainer.py:980) (603,113 samples, 82.96%)</title><rect x="0.1849%" y="164" width="82.9620%" height="15" fill="rgb(251,177,13)" fg:x="1344" fg:w="603113"/><text x="0.4349%" y="174.50">_run (lightning/pytorch/trainer/trainer.py:980)</text></g><g><title>_run_stage (lightning/pytorch/trainer/trainer.py:1023) (571,322 samples, 78.59%)</title><rect x="4.5579%" y="180" width="78.5889%" height="15" fill="rgb(250,179,40)" fg:x="33135" fg:w="571322"/><text x="4.8079%" y="190.50">_run_stage (lightning/pytorch/trainer/trainer.py:1023)</text></g><g><title>main (train_vectornet.py:249) (603,511 samples, 83.02%)</title><rect x="0.1305%" y="84" width="83.0167%" height="15" fill="rgb(242,44,2)" fg:x="949" fg:w="603511"/><text x="0.3805%" y="94.50">main (train_vectornet.py:249)</text></g><g><title>fit (lightning/pytorch/trainer/trainer.py:532) (603,511 samples, 83.02%)</title><rect x="0.1305%" y="100" width="83.0167%" height="15" fill="rgb(216,177,13)" fg:x="949" fg:w="603511"/><text x="0.3805%" y="110.50">fit (lightning/pytorch/trainer/trainer.py:532)</text></g><g><title>_call_and_handle_interrupt (lightning/pytorch/trainer/call.py:42) (603,511 samples, 83.02%)</title><rect x="0.1305%" y="116" width="83.0167%" height="15" fill="rgb(216,106,43)" fg:x="949" fg:w="603511"/><text x="0.3805%" y="126.50">_call_and_handle_interrupt (lightning/pytorch/trainer/call.py:42)</text></g><g><title>launch (lightning/pytorch/strategies/launchers/subprocess_script.py:93) (603,499 samples, 83.02%)</title><rect x="0.1322%" y="132" width="83.0151%" height="15" fill="rgb(216,183,2)" fg:x="961" fg:w="603499"/><text x="0.3822%" y="142.50">launch (lightning/pytorch/strategies/launchers/subprocess_script.py:93)</text></g><g><title>_fit_impl (lightning/pytorch/trainer/trainer.py:571) (603,499 samples, 83.02%)</title><rect x="0.1322%" y="148" width="83.0151%" height="15" fill="rgb(249,75,3)" fg:x="961" fg:w="603499"/><text x="0.3822%" y="158.50">_fit_impl (lightning/pytorch/trainer/trainer.py:571)</text></g><g><title>main (train_vectornet.py:92) (1,815 samples, 0.25%)</title><rect x="83.1480%" y="84" width="0.2497%" height="15" fill="rgb(219,67,39)" fg:x="604465" fg:w="1815"/><text x="83.3980%" y="94.50"></text></g><g><title>&lt;module&gt; (train_vectornet.py:253) (606,196 samples, 83.39%)</title><rect x="0.0117%" y="68" width="83.3861%" height="15" fill="rgb(253,228,2)" fg:x="85" fg:w="606196"/><text x="0.2617%" y="78.50">&lt;module&gt; (train_vectornet.py:253)</text></g><g><title>Client (multiprocessing/connection.py:502) (833 samples, 0.11%)</title><rect x="83.7014%" y="212" width="0.1146%" height="15" fill="rgb(235,138,27)" fg:x="608488" fg:w="833"/><text x="83.9514%" y="222.50"></text></g><g><title>_recv (multiprocessing/connection.py:379) (836 samples, 0.11%)</title><rect x="83.8292%" y="276" width="0.1150%" height="15" fill="rgb(236,97,51)" fg:x="609417" fg:w="836"/><text x="84.0792%" y="286.50"></text></g><g><title>_recv_bytes (multiprocessing/connection.py:414) (896 samples, 0.12%)</title><rect x="83.8249%" y="260" width="0.1233%" height="15" fill="rgb(240,80,30)" fg:x="609386" fg:w="896"/><text x="84.0749%" y="270.50"></text></g><g><title>recv_bytes (multiprocessing/connection.py:216) (1,046 samples, 0.14%)</title><rect x="83.8241%" y="244" width="0.1439%" height="15" fill="rgb(230,178,19)" fg:x="609380" fg:w="1046"/><text x="84.0741%" y="254.50"></text></g><g><title>answer_challenge (multiprocessing/connection.py:752) (1,084 samples, 0.15%)</title><rect x="83.8199%" y="228" width="0.1491%" height="15" fill="rgb(210,190,27)" fg:x="609350" fg:w="1084"/><text x="84.0699%" y="238.50"></text></g><g><title>recv_bytes (multiprocessing/connection.py:216) (783 samples, 0.11%)</title><rect x="84.0809%" y="244" width="0.1077%" height="15" fill="rgb(222,107,31)" fg:x="611247" fg:w="783"/><text x="84.3309%" y="254.50"></text></g><g><title>answer_challenge (multiprocessing/connection.py:757) (808 samples, 0.11%)</title><rect x="84.0779%" y="228" width="0.1111%" height="15" fill="rgb(216,127,34)" fg:x="611225" fg:w="808"/><text x="84.3279%" y="238.50"></text></g><g><title>Client (multiprocessing/connection.py:508) (2,709 samples, 0.37%)</title><rect x="83.8169%" y="212" width="0.3726%" height="15" fill="rgb(234,116,52)" fg:x="609328" fg:w="2709"/><text x="84.0669%" y="222.50"></text></g><g><title>deliver_challenge (multiprocessing/connection.py:740) (742 samples, 0.10%)</title><rect x="84.2685%" y="228" width="0.1021%" height="15" fill="rgb(222,124,15)" fg:x="612611" fg:w="742"/><text x="84.5185%" y="238.50"></text></g><g><title>Client (multiprocessing/connection.py:509) (1,539 samples, 0.21%)</title><rect x="84.1896%" y="212" width="0.2117%" height="15" fill="rgb(231,179,28)" fg:x="612037" fg:w="1539"/><text x="84.4396%" y="222.50"></text></g><g><title>get_connection (multiprocessing/resource_sharer.py:86) (5,192 samples, 0.71%)</title><rect x="83.6887%" y="196" width="0.7142%" height="15" fill="rgb(226,93,45)" fg:x="608396" fg:w="5192"/><text x="83.9387%" y="206.50"></text></g><g><title>detach (multiprocessing/resource_sharer.py:57) (5,907 samples, 0.81%)</title><rect x="83.6673%" y="180" width="0.8125%" height="15" fill="rgb(215,8,51)" fg:x="608240" fg:w="5907"/><text x="83.9173%" y="190.50"></text></g><g><title>rebuild_storage_fd (torch/multiprocessing/reductions.py:355) (7,321 samples, 1.01%)</title><rect x="83.6628%" y="164" width="1.0070%" height="15" fill="rgb(223,106,5)" fg:x="608208" fg:w="7321"/><text x="83.9128%" y="174.50"></text></g><g><title>detach (multiprocessing/resource_sharer.py:58) (1,382 samples, 0.19%)</title><rect x="84.4798%" y="180" width="0.1901%" height="15" fill="rgb(250,191,5)" fg:x="614147" fg:w="1382"/><text x="84.7298%" y="190.50"></text></g><g><title>recv_handle (multiprocessing/reduction.py:189) (938 samples, 0.13%)</title><rect x="84.5409%" y="196" width="0.1290%" height="15" fill="rgb(242,132,44)" fg:x="614591" fg:w="938"/><text x="84.7909%" y="206.50"></text></g><g><title>rebuild_tensor (torch/multiprocessing/reductions.py:110) (931 samples, 0.13%)</title><rect x="84.7716%" y="164" width="0.1281%" height="15" fill="rgb(251,152,29)" fg:x="616268" fg:w="931"/><text x="85.0216%" y="174.50"></text></g><g><title>do_one_step (torch/utils/data/_utils/pin_memory.py:31) (10,021 samples, 1.38%)</title><rect x="83.5473%" y="132" width="1.3785%" height="15" fill="rgb(218,179,5)" fg:x="607368" fg:w="10021"/><text x="83.7973%" y="142.50"></text></g><g><title>get (multiprocessing/queues.py:122) (9,986 samples, 1.37%)</title><rect x="83.5521%" y="148" width="1.3736%" height="15" fill="rgb(227,67,19)" fg:x="607403" fg:w="9986"/><text x="83.8021%" y="158.50"></text></g><g><title>pin_memory (torch/utils/data/_utils/pin_memory.py:58) (42,470 samples, 5.84%)</title><rect x="84.9379%" y="180" width="5.8420%" height="15" fill="rgb(233,119,31)" fg:x="617477" fg:w="42470"/><text x="85.1879%" y="190.50">pin_mem..</text></g><g><title>pin_memory (torch/utils/data/_utils/pin_memory.py:73) (2,556 samples, 0.35%)</title><rect x="90.7861%" y="180" width="0.3516%" height="15" fill="rgb(241,120,22)" fg:x="659992" fg:w="2556"/><text x="91.0361%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (torch/utils/data/_utils/pin_memory.py:73) (2,541 samples, 0.35%)</title><rect x="90.7881%" y="196" width="0.3495%" height="15" fill="rgb(224,102,30)" fg:x="660007" fg:w="2541"/><text x="91.0381%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (torch/utils/data/_utils/pin_memory.py:68) (45,119 samples, 6.21%)</title><rect x="84.9315%" y="164" width="6.2064%" height="15" fill="rgb(210,164,37)" fg:x="617431" fg:w="45119"/><text x="85.1815%" y="174.50">&lt;genexpr..</text></g><g><title>do_one_step (torch/utils/data/_utils/pin_memory.py:37) (45,156 samples, 6.21%)</title><rect x="84.9267%" y="132" width="6.2115%" height="15" fill="rgb(226,191,16)" fg:x="617396" fg:w="45156"/><text x="85.1767%" y="142.50">do_one_s..</text></g><g><title>pin_memory (torch/utils/data/_utils/pin_memory.py:68) (45,139 samples, 6.21%)</title><rect x="84.9291%" y="148" width="6.2092%" height="15" fill="rgb(214,40,45)" fg:x="617413" fg:w="45139"/><text x="85.1791%" y="158.50">pin_memo..</text></g><g><title>do_one_step (torch/utils/data/_utils/pin_memory.py:41) (11,163 samples, 1.54%)</title><rect x="91.1382%" y="132" width="1.5355%" height="15" fill="rgb(244,29,26)" fg:x="662552" fg:w="11163"/><text x="91.3882%" y="142.50"></text></g><g><title>_bootstrap (threading.py:937) (66,974 samples, 9.21%)</title><rect x="83.4615%" y="68" width="9.2127%" height="15" fill="rgb(216,16,5)" fg:x="606744" fg:w="66974"/><text x="83.7115%" y="78.50">_bootstrap (t..</text></g><g><title>_bootstrap_inner (threading.py:980) (66,974 samples, 9.21%)</title><rect x="83.4615%" y="84" width="9.2127%" height="15" fill="rgb(249,76,35)" fg:x="606744" fg:w="66974"/><text x="83.7115%" y="94.50">_bootstrap_in..</text></g><g><title>run (threading.py:917) (66,661 samples, 9.17%)</title><rect x="83.5045%" y="100" width="9.1696%" height="15" fill="rgb(207,11,44)" fg:x="607057" fg:w="66661"/><text x="83.7545%" y="110.50">run (threadin..</text></g><g><title>_pin_memory_loop (torch/utils/data/_utils/pin_memory.py:54) (66,350 samples, 9.13%)</title><rect x="83.5473%" y="116" width="9.1269%" height="15" fill="rgb(228,190,49)" fg:x="607368" fg:w="66350"/><text x="83.7973%" y="126.50">_pin_memory_l..</text></g><g><title>call (c3erarkyfgm5dvnqsifsiodbppts4xppv54j6gel3exn3unjhjg3.py:1569) (7,011 samples, 0.96%)</title><rect x="93.8796%" y="212" width="0.9644%" height="15" fill="rgb(214,173,12)" fg:x="682481" fg:w="7011"/><text x="94.1296%" y="222.50"></text></g><g><title>__call__ (torch/_ops.py:692) (6,972 samples, 0.96%)</title><rect x="93.8849%" y="228" width="0.9590%" height="15" fill="rgb(218,26,35)" fg:x="682520" fg:w="6972"/><text x="94.1349%" y="238.50"></text></g><g><title>call (c3erarkyfgm5dvnqsifsiodbppts4xppv54j6gel3exn3unjhjg3.py:1610) (772 samples, 0.11%)</title><rect x="95.0359%" y="212" width="0.1062%" height="15" fill="rgb(220,200,19)" fg:x="690887" fg:w="772"/><text x="95.2859%" y="222.50"></text></g><g><title>call (c3erarkyfgm5dvnqsifsiodbppts4xppv54j6gel3exn3unjhjg3.py:1669) (3,520 samples, 0.48%)</title><rect x="95.4285%" y="212" width="0.4842%" height="15" fill="rgb(239,95,49)" fg:x="693741" fg:w="3520"/><text x="95.6785%" y="222.50"></text></g><g><title>__call__ (torch/_ops.py:692) (3,508 samples, 0.48%)</title><rect x="95.4301%" y="228" width="0.4825%" height="15" fill="rgb(235,85,53)" fg:x="693753" fg:w="3508"/><text x="95.6801%" y="238.50"></text></g><g><title>call (csbmr5zvyfmwchexu533hmuehvprmmk2nxc7wudklwyc32vanrug.py:1300) (833 samples, 0.11%)</title><rect x="96.2846%" y="212" width="0.1146%" height="15" fill="rgb(233,133,31)" fg:x="699965" fg:w="833"/><text x="96.5346%" y="222.50"></text></g><g><title>call (csbmr5zvyfmwchexu533hmuehvprmmk2nxc7wudklwyc32vanrug.py:1520) (6,491 samples, 0.89%)</title><rect x="97.5771%" y="212" width="0.8929%" height="15" fill="rgb(218,25,20)" fg:x="709361" fg:w="6491"/><text x="97.8271%" y="222.50"></text></g><g><title>__call__ (torch/_ops.py:692) (6,444 samples, 0.89%)</title><rect x="97.5835%" y="228" width="0.8864%" height="15" fill="rgb(252,210,38)" fg:x="709408" fg:w="6444"/><text x="97.8335%" y="238.50"></text></g><g><title>call (csbmr5zvyfmwchexu533hmuehvprmmk2nxc7wudklwyc32vanrug.py:1561) (814 samples, 0.11%)</title><rect x="98.6636%" y="212" width="0.1120%" height="15" fill="rgb(242,134,21)" fg:x="717260" fg:w="814"/><text x="98.9136%" y="222.50"></text></g><g><title>call (csbmr5zvyfmwchexu533hmuehvprmmk2nxc7wudklwyc32vanrug.py:1620) (3,504 samples, 0.48%)</title><rect x="99.0733%" y="212" width="0.4820%" height="15" fill="rgb(213,28,48)" fg:x="720238" fg:w="3504"/><text x="99.3233%" y="222.50"></text></g><g><title>__call__ (torch/_ops.py:692) (3,500 samples, 0.48%)</title><rect x="99.0738%" y="228" width="0.4814%" height="15" fill="rgb(250,196,2)" fg:x="720242" fg:w="3500"/><text x="99.3238%" y="238.50"></text></g><g><title>_fn (torch/_dynamo/eval_frame.py:328) (52,322 samples, 7.20%)</title><rect x="92.7922%" y="132" width="7.1972%" height="15" fill="rgb(227,5,17)" fg:x="674576" fg:w="52322"/><text x="93.0422%" y="142.50">_fn (torch..</text></g><g><title>inner (torch/_dynamo/external_utils.py:17) (52,308 samples, 7.20%)</title><rect x="92.7941%" y="148" width="7.1953%" height="15" fill="rgb(221,226,24)" fg:x="674590" fg:w="52308"/><text x="93.0441%" y="158.50">inner (tor..</text></g><g><title>__call__ (torch/_inductor/codecache.py:374) (52,283 samples, 7.19%)</title><rect x="92.7976%" y="164" width="7.1919%" height="15" fill="rgb(211,5,48)" fg:x="674615" fg:w="52283"/><text x="93.0476%" y="174.50">__call__ (..</text></g><g><title>run (torch/_inductor/compile_fx.py:628) (52,190 samples, 7.18%)</title><rect x="92.8103%" y="180" width="7.1791%" height="15" fill="rgb(219,150,6)" fg:x="674708" fg:w="52190"/><text x="93.0603%" y="190.50">run (torch..</text></g><g><title>_run_from_cache (torch/_inductor/codecache.py:401) (52,169 samples, 7.18%)</title><rect x="92.8132%" y="196" width="7.1762%" height="15" fill="rgb(251,46,16)" fg:x="674729" fg:w="52169"/><text x="93.0632%" y="206.50">_run_from_..</text></g><g><title>call_func_with_args (torch/_functorch/aot_autograd.py:1506) (52,523 samples, 7.22%)</title><rect x="92.7714%" y="116" width="7.2249%" height="15" fill="rgb(220,204,40)" fg:x="674425" fg:w="52523"/><text x="93.0214%" y="126.50">call_func_..</text></g><g><title>call_compiled_backward (torch/_functorch/aot_autograd.py:3204) (52,584 samples, 7.23%)</title><rect x="92.7634%" y="100" width="7.2333%" height="15" fill="rgb(211,85,2)" fg:x="674367" fg:w="52584"/><text x="93.0134%" y="110.50">call_compi..</text></g><g><title>backward (torch/_functorch/aot_autograd.py:3232) (52,655 samples, 7.24%)</title><rect x="92.7561%" y="84" width="7.2430%" height="15" fill="rgb(229,17,7)" fg:x="674314" fg:w="52655"/><text x="93.0061%" y="94.50">backward (..</text></g><g><title>apply (torch/autograd/function.py:288) (53,209 samples, 7.32%)</title><rect x="92.6805%" y="68" width="7.3192%" height="15" fill="rgb(239,72,28)" fg:x="673764" fg:w="53209"/><text x="92.9305%" y="78.50">apply (tor..</text></g><g><title>all (726,975 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(230,47,54)" fg:x="0" fg:w="726975"/><text x="0.2500%" y="62.50"></text></g></svg></svg>